// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: control_service/messages.proto
// Protobuf C++ Version: 5.29.0

#ifndef control_5fservice_2fmessages_2eproto_2epb_2eh
#define control_5fservice_2fmessages_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5029000
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_bases.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
#include "control_service/types.pb.h"
#include "common_types/types.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_control_5fservice_2fmessages_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_control_5fservice_2fmessages_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_control_5fservice_2fmessages_2eproto;
namespace control_service {
class AddEntityRequest;
struct AddEntityRequestDefaultTypeInternal;
extern AddEntityRequestDefaultTypeInternal _AddEntityRequest_default_instance_;
class AddUseCaseRequest;
struct AddUseCaseRequestDefaultTypeInternal;
extern AddUseCaseRequestDefaultTypeInternal _AddUseCaseRequest_default_instance_;
class AddUseCaseResponse;
struct AddUseCaseResponseDefaultTypeInternal;
extern AddUseCaseResponseDefaultTypeInternal _AddUseCaseResponse_default_instance_;
class EmptyRequest;
struct EmptyRequestDefaultTypeInternal;
extern EmptyRequestDefaultTypeInternal _EmptyRequest_default_instance_;
class EmptyResponse;
struct EmptyResponseDefaultTypeInternal;
extern EmptyResponseDefaultTypeInternal _EmptyResponse_default_instance_;
class RegisterRemoteSkiRequest;
struct RegisterRemoteSkiRequestDefaultTypeInternal;
extern RegisterRemoteSkiRequestDefaultTypeInternal _RegisterRemoteSkiRequest_default_instance_;
class RemoveEntityRequest;
struct RemoveEntityRequestDefaultTypeInternal;
extern RemoveEntityRequestDefaultTypeInternal _RemoveEntityRequest_default_instance_;
class SetConfigRequest;
struct SetConfigRequestDefaultTypeInternal;
extern SetConfigRequestDefaultTypeInternal _SetConfigRequest_default_instance_;
class SubscribeUseCaseEventsRequest;
struct SubscribeUseCaseEventsRequestDefaultTypeInternal;
extern SubscribeUseCaseEventsRequestDefaultTypeInternal _SubscribeUseCaseEventsRequest_default_instance_;
class SubscribeUseCaseEventsResponse;
struct SubscribeUseCaseEventsResponseDefaultTypeInternal;
extern SubscribeUseCaseEventsResponseDefaultTypeInternal _SubscribeUseCaseEventsResponse_default_instance_;
}  // namespace control_service
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace control_service {

// ===================================================================


// -------------------------------------------------------------------

class SetConfigRequest final
    : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:control_service.SetConfigRequest) */ {
 public:
  inline SetConfigRequest() : SetConfigRequest(nullptr) {}
  ~SetConfigRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(SetConfigRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(SetConfigRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SetConfigRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline SetConfigRequest(const SetConfigRequest& from) : SetConfigRequest(nullptr, from) {}
  inline SetConfigRequest(SetConfigRequest&& from) noexcept
      : SetConfigRequest(nullptr, std::move(from)) {}
  inline SetConfigRequest& operator=(const SetConfigRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline SetConfigRequest& operator=(SetConfigRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SetConfigRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const SetConfigRequest* internal_default_instance() {
    return reinterpret_cast<const SetConfigRequest*>(
        &_SetConfigRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(SetConfigRequest& a, SetConfigRequest& b) { a.Swap(&b); }
  inline void Swap(SetConfigRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SetConfigRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SetConfigRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<SetConfigRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SetConfigRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SetConfigRequest& from) { SetConfigRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(SetConfigRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "control_service.SetConfigRequest"; }

 protected:
  explicit SetConfigRequest(::google::protobuf::Arena* arena);
  SetConfigRequest(::google::protobuf::Arena* arena, const SetConfigRequest& from);
  SetConfigRequest(::google::protobuf::Arena* arena, SetConfigRequest&& from) noexcept
      : SetConfigRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kDeviceCategoriesFieldNumber = 6,
    kEntityTypesFieldNumber = 8,
    kVendorCodeFieldNumber = 2,
    kDeviceBrandFieldNumber = 3,
    kDeviceModelFieldNumber = 4,
    kSerialNumberFieldNumber = 5,
    kPortFieldNumber = 1,
    kDeviceTypeFieldNumber = 7,
    kHeartbeatTimeoutSecondsFieldNumber = 9,
  };
  // repeated .control_service.DeviceCategory.Enum device_categories = 6;
  int device_categories_size() const;
  private:
  int _internal_device_categories_size() const;

  public:
  void clear_device_categories() ;
  public:
  ::control_service::DeviceCategory_Enum device_categories(int index) const;
  void set_device_categories(int index, ::control_service::DeviceCategory_Enum value);
  void add_device_categories(::control_service::DeviceCategory_Enum value);
  const ::google::protobuf::RepeatedField<int>& device_categories() const;
  ::google::protobuf::RepeatedField<int>* mutable_device_categories();

  private:
  const ::google::protobuf::RepeatedField<int>& _internal_device_categories() const;
  ::google::protobuf::RepeatedField<int>* _internal_mutable_device_categories();

  public:
  // repeated .control_service.EntityType.Enum entity_types = 8;
  int entity_types_size() const;
  private:
  int _internal_entity_types_size() const;

  public:
  void clear_entity_types() ;
  public:
  ::control_service::EntityType_Enum entity_types(int index) const;
  void set_entity_types(int index, ::control_service::EntityType_Enum value);
  void add_entity_types(::control_service::EntityType_Enum value);
  const ::google::protobuf::RepeatedField<int>& entity_types() const;
  ::google::protobuf::RepeatedField<int>* mutable_entity_types();

  private:
  const ::google::protobuf::RepeatedField<int>& _internal_entity_types() const;
  ::google::protobuf::RepeatedField<int>* _internal_mutable_entity_types();

  public:
  // string vendor_code = 2;
  void clear_vendor_code() ;
  const std::string& vendor_code() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_vendor_code(Arg_&& arg, Args_... args);
  std::string* mutable_vendor_code();
  PROTOBUF_NODISCARD std::string* release_vendor_code();
  void set_allocated_vendor_code(std::string* value);

  private:
  const std::string& _internal_vendor_code() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_vendor_code(
      const std::string& value);
  std::string* _internal_mutable_vendor_code();

  public:
  // string device_brand = 3;
  void clear_device_brand() ;
  const std::string& device_brand() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_device_brand(Arg_&& arg, Args_... args);
  std::string* mutable_device_brand();
  PROTOBUF_NODISCARD std::string* release_device_brand();
  void set_allocated_device_brand(std::string* value);

  private:
  const std::string& _internal_device_brand() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_device_brand(
      const std::string& value);
  std::string* _internal_mutable_device_brand();

  public:
  // string device_model = 4;
  void clear_device_model() ;
  const std::string& device_model() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_device_model(Arg_&& arg, Args_... args);
  std::string* mutable_device_model();
  PROTOBUF_NODISCARD std::string* release_device_model();
  void set_allocated_device_model(std::string* value);

  private:
  const std::string& _internal_device_model() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_device_model(
      const std::string& value);
  std::string* _internal_mutable_device_model();

  public:
  // string serial_number = 5;
  void clear_serial_number() ;
  const std::string& serial_number() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_serial_number(Arg_&& arg, Args_... args);
  std::string* mutable_serial_number();
  PROTOBUF_NODISCARD std::string* release_serial_number();
  void set_allocated_serial_number(std::string* value);

  private:
  const std::string& _internal_serial_number() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_serial_number(
      const std::string& value);
  std::string* _internal_mutable_serial_number();

  public:
  // uint32 port = 1;
  void clear_port() ;
  ::uint32_t port() const;
  void set_port(::uint32_t value);

  private:
  ::uint32_t _internal_port() const;
  void _internal_set_port(::uint32_t value);

  public:
  // .control_service.DeviceType.Enum device_type = 7;
  void clear_device_type() ;
  ::control_service::DeviceType_Enum device_type() const;
  void set_device_type(::control_service::DeviceType_Enum value);

  private:
  ::control_service::DeviceType_Enum _internal_device_type() const;
  void _internal_set_device_type(::control_service::DeviceType_Enum value);

  public:
  // uint32 heartbeat_timeout_seconds = 9;
  void clear_heartbeat_timeout_seconds() ;
  ::uint32_t heartbeat_timeout_seconds() const;
  void set_heartbeat_timeout_seconds(::uint32_t value);

  private:
  ::uint32_t _internal_heartbeat_timeout_seconds() const;
  void _internal_set_heartbeat_timeout_seconds(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:control_service.SetConfigRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      4, 9, 0,
      97, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SetConfigRequest& from_msg);
    ::google::protobuf::RepeatedField<int> device_categories_;
    ::google::protobuf::internal::CachedSize _device_categories_cached_byte_size_;
    ::google::protobuf::RepeatedField<int> entity_types_;
    ::google::protobuf::internal::CachedSize _entity_types_cached_byte_size_;
    ::google::protobuf::internal::ArenaStringPtr vendor_code_;
    ::google::protobuf::internal::ArenaStringPtr device_brand_;
    ::google::protobuf::internal::ArenaStringPtr device_model_;
    ::google::protobuf::internal::ArenaStringPtr serial_number_;
    ::uint32_t port_;
    int device_type_;
    ::uint32_t heartbeat_timeout_seconds_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_control_5fservice_2fmessages_2eproto;
};
// -------------------------------------------------------------------

class RegisterRemoteSkiRequest final
    : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:control_service.RegisterRemoteSkiRequest) */ {
 public:
  inline RegisterRemoteSkiRequest() : RegisterRemoteSkiRequest(nullptr) {}
  ~RegisterRemoteSkiRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(RegisterRemoteSkiRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(RegisterRemoteSkiRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR RegisterRemoteSkiRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline RegisterRemoteSkiRequest(const RegisterRemoteSkiRequest& from) : RegisterRemoteSkiRequest(nullptr, from) {}
  inline RegisterRemoteSkiRequest(RegisterRemoteSkiRequest&& from) noexcept
      : RegisterRemoteSkiRequest(nullptr, std::move(from)) {}
  inline RegisterRemoteSkiRequest& operator=(const RegisterRemoteSkiRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline RegisterRemoteSkiRequest& operator=(RegisterRemoteSkiRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const RegisterRemoteSkiRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const RegisterRemoteSkiRequest* internal_default_instance() {
    return reinterpret_cast<const RegisterRemoteSkiRequest*>(
        &_RegisterRemoteSkiRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 7;
  friend void swap(RegisterRemoteSkiRequest& a, RegisterRemoteSkiRequest& b) { a.Swap(&b); }
  inline void Swap(RegisterRemoteSkiRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RegisterRemoteSkiRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  RegisterRemoteSkiRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<RegisterRemoteSkiRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const RegisterRemoteSkiRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const RegisterRemoteSkiRequest& from) { RegisterRemoteSkiRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(RegisterRemoteSkiRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "control_service.RegisterRemoteSkiRequest"; }

 protected:
  explicit RegisterRemoteSkiRequest(::google::protobuf::Arena* arena);
  RegisterRemoteSkiRequest(::google::protobuf::Arena* arena, const RegisterRemoteSkiRequest& from);
  RegisterRemoteSkiRequest(::google::protobuf::Arena* arena, RegisterRemoteSkiRequest&& from) noexcept
      : RegisterRemoteSkiRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kRemoteSkiFieldNumber = 1,
  };
  // string remote_ski = 1;
  void clear_remote_ski() ;
  const std::string& remote_ski() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_remote_ski(Arg_&& arg, Args_... args);
  std::string* mutable_remote_ski();
  PROTOBUF_NODISCARD std::string* release_remote_ski();
  void set_allocated_remote_ski(std::string* value);

  private:
  const std::string& _internal_remote_ski() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_remote_ski(
      const std::string& value);
  std::string* _internal_mutable_remote_ski();

  public:
  // @@protoc_insertion_point(class_scope:control_service.RegisterRemoteSkiRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      59, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const RegisterRemoteSkiRequest& from_msg);
    ::google::protobuf::internal::ArenaStringPtr remote_ski_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_control_5fservice_2fmessages_2eproto;
};
// -------------------------------------------------------------------

class EmptyResponse final
    : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:control_service.EmptyResponse) */ {
 public:
  inline EmptyResponse() : EmptyResponse(nullptr) {}

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(EmptyResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(EmptyResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR EmptyResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline EmptyResponse(const EmptyResponse& from) : EmptyResponse(nullptr, from) {}
  inline EmptyResponse(EmptyResponse&& from) noexcept
      : EmptyResponse(nullptr, std::move(from)) {}
  inline EmptyResponse& operator=(const EmptyResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline EmptyResponse& operator=(EmptyResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const EmptyResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const EmptyResponse* internal_default_instance() {
    return reinterpret_cast<const EmptyResponse*>(
        &_EmptyResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(EmptyResponse& a, EmptyResponse& b) { a.Swap(&b); }
  inline void Swap(EmptyResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(EmptyResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  EmptyResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<EmptyResponse>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const EmptyResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const EmptyResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "control_service.EmptyResponse"; }

 protected:
  explicit EmptyResponse(::google::protobuf::Arena* arena);
  EmptyResponse(::google::protobuf::Arena* arena, const EmptyResponse& from);
  EmptyResponse(::google::protobuf::Arena* arena, EmptyResponse&& from) noexcept
      : EmptyResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:control_service.EmptyResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const EmptyResponse& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_control_5fservice_2fmessages_2eproto;
};
// -------------------------------------------------------------------

class EmptyRequest final
    : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:control_service.EmptyRequest) */ {
 public:
  inline EmptyRequest() : EmptyRequest(nullptr) {}

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(EmptyRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(EmptyRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR EmptyRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline EmptyRequest(const EmptyRequest& from) : EmptyRequest(nullptr, from) {}
  inline EmptyRequest(EmptyRequest&& from) noexcept
      : EmptyRequest(nullptr, std::move(from)) {}
  inline EmptyRequest& operator=(const EmptyRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline EmptyRequest& operator=(EmptyRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const EmptyRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const EmptyRequest* internal_default_instance() {
    return reinterpret_cast<const EmptyRequest*>(
        &_EmptyRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(EmptyRequest& a, EmptyRequest& b) { a.Swap(&b); }
  inline void Swap(EmptyRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(EmptyRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  EmptyRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<EmptyRequest>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const EmptyRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const EmptyRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "control_service.EmptyRequest"; }

 protected:
  explicit EmptyRequest(::google::protobuf::Arena* arena);
  EmptyRequest(::google::protobuf::Arena* arena, const EmptyRequest& from);
  EmptyRequest(::google::protobuf::Arena* arena, EmptyRequest&& from) noexcept
      : EmptyRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:control_service.EmptyRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const EmptyRequest& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_control_5fservice_2fmessages_2eproto;
};
// -------------------------------------------------------------------

class AddUseCaseResponse final
    : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:control_service.AddUseCaseResponse) */ {
 public:
  inline AddUseCaseResponse() : AddUseCaseResponse(nullptr) {}
  ~AddUseCaseResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(AddUseCaseResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(AddUseCaseResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR AddUseCaseResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline AddUseCaseResponse(const AddUseCaseResponse& from) : AddUseCaseResponse(nullptr, from) {}
  inline AddUseCaseResponse(AddUseCaseResponse&& from) noexcept
      : AddUseCaseResponse(nullptr, std::move(from)) {}
  inline AddUseCaseResponse& operator=(const AddUseCaseResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline AddUseCaseResponse& operator=(AddUseCaseResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const AddUseCaseResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const AddUseCaseResponse* internal_default_instance() {
    return reinterpret_cast<const AddUseCaseResponse*>(
        &_AddUseCaseResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 6;
  friend void swap(AddUseCaseResponse& a, AddUseCaseResponse& b) { a.Swap(&b); }
  inline void Swap(AddUseCaseResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AddUseCaseResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  AddUseCaseResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<AddUseCaseResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const AddUseCaseResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const AddUseCaseResponse& from) { AddUseCaseResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(AddUseCaseResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "control_service.AddUseCaseResponse"; }

 protected:
  explicit AddUseCaseResponse(::google::protobuf::Arena* arena);
  AddUseCaseResponse(::google::protobuf::Arena* arena, const AddUseCaseResponse& from);
  AddUseCaseResponse(::google::protobuf::Arena* arena, AddUseCaseResponse&& from) noexcept
      : AddUseCaseResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kEndpointFieldNumber = 1,
  };
  // string endpoint = 1;
  void clear_endpoint() ;
  const std::string& endpoint() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_endpoint(Arg_&& arg, Args_... args);
  std::string* mutable_endpoint();
  PROTOBUF_NODISCARD std::string* release_endpoint();
  void set_allocated_endpoint(std::string* value);

  private:
  const std::string& _internal_endpoint() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_endpoint(
      const std::string& value);
  std::string* _internal_mutable_endpoint();

  public:
  // @@protoc_insertion_point(class_scope:control_service.AddUseCaseResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      51, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const AddUseCaseResponse& from_msg);
    ::google::protobuf::internal::ArenaStringPtr endpoint_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_control_5fservice_2fmessages_2eproto;
};
// -------------------------------------------------------------------

class SubscribeUseCaseEventsRequest final
    : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:control_service.SubscribeUseCaseEventsRequest) */ {
 public:
  inline SubscribeUseCaseEventsRequest() : SubscribeUseCaseEventsRequest(nullptr) {}
  ~SubscribeUseCaseEventsRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(SubscribeUseCaseEventsRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(SubscribeUseCaseEventsRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SubscribeUseCaseEventsRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline SubscribeUseCaseEventsRequest(const SubscribeUseCaseEventsRequest& from) : SubscribeUseCaseEventsRequest(nullptr, from) {}
  inline SubscribeUseCaseEventsRequest(SubscribeUseCaseEventsRequest&& from) noexcept
      : SubscribeUseCaseEventsRequest(nullptr, std::move(from)) {}
  inline SubscribeUseCaseEventsRequest& operator=(const SubscribeUseCaseEventsRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline SubscribeUseCaseEventsRequest& operator=(SubscribeUseCaseEventsRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SubscribeUseCaseEventsRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const SubscribeUseCaseEventsRequest* internal_default_instance() {
    return reinterpret_cast<const SubscribeUseCaseEventsRequest*>(
        &_SubscribeUseCaseEventsRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 8;
  friend void swap(SubscribeUseCaseEventsRequest& a, SubscribeUseCaseEventsRequest& b) { a.Swap(&b); }
  inline void Swap(SubscribeUseCaseEventsRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SubscribeUseCaseEventsRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SubscribeUseCaseEventsRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<SubscribeUseCaseEventsRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SubscribeUseCaseEventsRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SubscribeUseCaseEventsRequest& from) { SubscribeUseCaseEventsRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(SubscribeUseCaseEventsRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "control_service.SubscribeUseCaseEventsRequest"; }

 protected:
  explicit SubscribeUseCaseEventsRequest(::google::protobuf::Arena* arena);
  SubscribeUseCaseEventsRequest(::google::protobuf::Arena* arena, const SubscribeUseCaseEventsRequest& from);
  SubscribeUseCaseEventsRequest(::google::protobuf::Arena* arena, SubscribeUseCaseEventsRequest&& from) noexcept
      : SubscribeUseCaseEventsRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kEntityAddressFieldNumber = 1,
    kUseCaseFieldNumber = 2,
  };
  // .common_types.EntityAddress entity_address = 1;
  bool has_entity_address() const;
  void clear_entity_address() ;
  const ::common_types::EntityAddress& entity_address() const;
  PROTOBUF_NODISCARD ::common_types::EntityAddress* release_entity_address();
  ::common_types::EntityAddress* mutable_entity_address();
  void set_allocated_entity_address(::common_types::EntityAddress* value);
  void unsafe_arena_set_allocated_entity_address(::common_types::EntityAddress* value);
  ::common_types::EntityAddress* unsafe_arena_release_entity_address();

  private:
  const ::common_types::EntityAddress& _internal_entity_address() const;
  ::common_types::EntityAddress* _internal_mutable_entity_address();

  public:
  // .control_service.UseCase use_case = 2;
  bool has_use_case() const;
  void clear_use_case() ;
  const ::control_service::UseCase& use_case() const;
  PROTOBUF_NODISCARD ::control_service::UseCase* release_use_case();
  ::control_service::UseCase* mutable_use_case();
  void set_allocated_use_case(::control_service::UseCase* value);
  void unsafe_arena_set_allocated_use_case(::control_service::UseCase* value);
  ::control_service::UseCase* unsafe_arena_release_use_case();

  private:
  const ::control_service::UseCase& _internal_use_case() const;
  ::control_service::UseCase* _internal_mutable_use_case();

  public:
  // @@protoc_insertion_point(class_scope:control_service.SubscribeUseCaseEventsRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 2,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SubscribeUseCaseEventsRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::common_types::EntityAddress* entity_address_;
    ::control_service::UseCase* use_case_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_control_5fservice_2fmessages_2eproto;
};
// -------------------------------------------------------------------

class RemoveEntityRequest final
    : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:control_service.RemoveEntityRequest) */ {
 public:
  inline RemoveEntityRequest() : RemoveEntityRequest(nullptr) {}
  ~RemoveEntityRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(RemoveEntityRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(RemoveEntityRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR RemoveEntityRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline RemoveEntityRequest(const RemoveEntityRequest& from) : RemoveEntityRequest(nullptr, from) {}
  inline RemoveEntityRequest(RemoveEntityRequest&& from) noexcept
      : RemoveEntityRequest(nullptr, std::move(from)) {}
  inline RemoveEntityRequest& operator=(const RemoveEntityRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline RemoveEntityRequest& operator=(RemoveEntityRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const RemoveEntityRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const RemoveEntityRequest* internal_default_instance() {
    return reinterpret_cast<const RemoveEntityRequest*>(
        &_RemoveEntityRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 4;
  friend void swap(RemoveEntityRequest& a, RemoveEntityRequest& b) { a.Swap(&b); }
  inline void Swap(RemoveEntityRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RemoveEntityRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  RemoveEntityRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<RemoveEntityRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const RemoveEntityRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const RemoveEntityRequest& from) { RemoveEntityRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(RemoveEntityRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "control_service.RemoveEntityRequest"; }

 protected:
  explicit RemoveEntityRequest(::google::protobuf::Arena* arena);
  RemoveEntityRequest(::google::protobuf::Arena* arena, const RemoveEntityRequest& from);
  RemoveEntityRequest(::google::protobuf::Arena* arena, RemoveEntityRequest&& from) noexcept
      : RemoveEntityRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAddressFieldNumber = 1,
  };
  // .common_types.EntityAddress address = 1;
  bool has_address() const;
  void clear_address() ;
  const ::common_types::EntityAddress& address() const;
  PROTOBUF_NODISCARD ::common_types::EntityAddress* release_address();
  ::common_types::EntityAddress* mutable_address();
  void set_allocated_address(::common_types::EntityAddress* value);
  void unsafe_arena_set_allocated_address(::common_types::EntityAddress* value);
  ::common_types::EntityAddress* unsafe_arena_release_address();

  private:
  const ::common_types::EntityAddress& _internal_address() const;
  ::common_types::EntityAddress* _internal_mutable_address();

  public:
  // @@protoc_insertion_point(class_scope:control_service.RemoveEntityRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const RemoveEntityRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::common_types::EntityAddress* address_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_control_5fservice_2fmessages_2eproto;
};
// -------------------------------------------------------------------

class AddUseCaseRequest final
    : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:control_service.AddUseCaseRequest) */ {
 public:
  inline AddUseCaseRequest() : AddUseCaseRequest(nullptr) {}
  ~AddUseCaseRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(AddUseCaseRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(AddUseCaseRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR AddUseCaseRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline AddUseCaseRequest(const AddUseCaseRequest& from) : AddUseCaseRequest(nullptr, from) {}
  inline AddUseCaseRequest(AddUseCaseRequest&& from) noexcept
      : AddUseCaseRequest(nullptr, std::move(from)) {}
  inline AddUseCaseRequest& operator=(const AddUseCaseRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline AddUseCaseRequest& operator=(AddUseCaseRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const AddUseCaseRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const AddUseCaseRequest* internal_default_instance() {
    return reinterpret_cast<const AddUseCaseRequest*>(
        &_AddUseCaseRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 5;
  friend void swap(AddUseCaseRequest& a, AddUseCaseRequest& b) { a.Swap(&b); }
  inline void Swap(AddUseCaseRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AddUseCaseRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  AddUseCaseRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<AddUseCaseRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const AddUseCaseRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const AddUseCaseRequest& from) { AddUseCaseRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(AddUseCaseRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "control_service.AddUseCaseRequest"; }

 protected:
  explicit AddUseCaseRequest(::google::protobuf::Arena* arena);
  AddUseCaseRequest(::google::protobuf::Arena* arena, const AddUseCaseRequest& from);
  AddUseCaseRequest(::google::protobuf::Arena* arena, AddUseCaseRequest&& from) noexcept
      : AddUseCaseRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kEntityAddressFieldNumber = 1,
    kUseCaseFieldNumber = 2,
  };
  // .common_types.EntityAddress entity_address = 1;
  bool has_entity_address() const;
  void clear_entity_address() ;
  const ::common_types::EntityAddress& entity_address() const;
  PROTOBUF_NODISCARD ::common_types::EntityAddress* release_entity_address();
  ::common_types::EntityAddress* mutable_entity_address();
  void set_allocated_entity_address(::common_types::EntityAddress* value);
  void unsafe_arena_set_allocated_entity_address(::common_types::EntityAddress* value);
  ::common_types::EntityAddress* unsafe_arena_release_entity_address();

  private:
  const ::common_types::EntityAddress& _internal_entity_address() const;
  ::common_types::EntityAddress* _internal_mutable_entity_address();

  public:
  // .control_service.UseCase use_case = 2;
  bool has_use_case() const;
  void clear_use_case() ;
  const ::control_service::UseCase& use_case() const;
  PROTOBUF_NODISCARD ::control_service::UseCase* release_use_case();
  ::control_service::UseCase* mutable_use_case();
  void set_allocated_use_case(::control_service::UseCase* value);
  void unsafe_arena_set_allocated_use_case(::control_service::UseCase* value);
  ::control_service::UseCase* unsafe_arena_release_use_case();

  private:
  const ::control_service::UseCase& _internal_use_case() const;
  ::control_service::UseCase* _internal_mutable_use_case();

  public:
  // @@protoc_insertion_point(class_scope:control_service.AddUseCaseRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 2,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const AddUseCaseRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::common_types::EntityAddress* entity_address_;
    ::control_service::UseCase* use_case_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_control_5fservice_2fmessages_2eproto;
};
// -------------------------------------------------------------------

class AddEntityRequest final
    : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:control_service.AddEntityRequest) */ {
 public:
  inline AddEntityRequest() : AddEntityRequest(nullptr) {}
  ~AddEntityRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(AddEntityRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(AddEntityRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR AddEntityRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline AddEntityRequest(const AddEntityRequest& from) : AddEntityRequest(nullptr, from) {}
  inline AddEntityRequest(AddEntityRequest&& from) noexcept
      : AddEntityRequest(nullptr, std::move(from)) {}
  inline AddEntityRequest& operator=(const AddEntityRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline AddEntityRequest& operator=(AddEntityRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const AddEntityRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const AddEntityRequest* internal_default_instance() {
    return reinterpret_cast<const AddEntityRequest*>(
        &_AddEntityRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 3;
  friend void swap(AddEntityRequest& a, AddEntityRequest& b) { a.Swap(&b); }
  inline void Swap(AddEntityRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AddEntityRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  AddEntityRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<AddEntityRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const AddEntityRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const AddEntityRequest& from) { AddEntityRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(AddEntityRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "control_service.AddEntityRequest"; }

 protected:
  explicit AddEntityRequest(::google::protobuf::Arena* arena);
  AddEntityRequest(::google::protobuf::Arena* arena, const AddEntityRequest& from);
  AddEntityRequest(::google::protobuf::Arena* arena, AddEntityRequest&& from) noexcept
      : AddEntityRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAddressFieldNumber = 2,
    kTypeFieldNumber = 1,
  };
  // .common_types.EntityAddress address = 2;
  bool has_address() const;
  void clear_address() ;
  const ::common_types::EntityAddress& address() const;
  PROTOBUF_NODISCARD ::common_types::EntityAddress* release_address();
  ::common_types::EntityAddress* mutable_address();
  void set_allocated_address(::common_types::EntityAddress* value);
  void unsafe_arena_set_allocated_address(::common_types::EntityAddress* value);
  ::common_types::EntityAddress* unsafe_arena_release_address();

  private:
  const ::common_types::EntityAddress& _internal_address() const;
  ::common_types::EntityAddress* _internal_mutable_address();

  public:
  // .control_service.EntityType.Enum type = 1;
  void clear_type() ;
  ::control_service::EntityType_Enum type() const;
  void set_type(::control_service::EntityType_Enum value);

  private:
  ::control_service::EntityType_Enum _internal_type() const;
  void _internal_set_type(::control_service::EntityType_Enum value);

  public:
  // @@protoc_insertion_point(class_scope:control_service.AddEntityRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const AddEntityRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::common_types::EntityAddress* address_;
    int type_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_control_5fservice_2fmessages_2eproto;
};
// -------------------------------------------------------------------

class SubscribeUseCaseEventsResponse final
    : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:control_service.SubscribeUseCaseEventsResponse) */ {
 public:
  inline SubscribeUseCaseEventsResponse() : SubscribeUseCaseEventsResponse(nullptr) {}
  ~SubscribeUseCaseEventsResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(SubscribeUseCaseEventsResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(SubscribeUseCaseEventsResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SubscribeUseCaseEventsResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline SubscribeUseCaseEventsResponse(const SubscribeUseCaseEventsResponse& from) : SubscribeUseCaseEventsResponse(nullptr, from) {}
  inline SubscribeUseCaseEventsResponse(SubscribeUseCaseEventsResponse&& from) noexcept
      : SubscribeUseCaseEventsResponse(nullptr, std::move(from)) {}
  inline SubscribeUseCaseEventsResponse& operator=(const SubscribeUseCaseEventsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline SubscribeUseCaseEventsResponse& operator=(SubscribeUseCaseEventsResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SubscribeUseCaseEventsResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const SubscribeUseCaseEventsResponse* internal_default_instance() {
    return reinterpret_cast<const SubscribeUseCaseEventsResponse*>(
        &_SubscribeUseCaseEventsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 9;
  friend void swap(SubscribeUseCaseEventsResponse& a, SubscribeUseCaseEventsResponse& b) { a.Swap(&b); }
  inline void Swap(SubscribeUseCaseEventsResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SubscribeUseCaseEventsResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SubscribeUseCaseEventsResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<SubscribeUseCaseEventsResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SubscribeUseCaseEventsResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SubscribeUseCaseEventsResponse& from) { SubscribeUseCaseEventsResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(SubscribeUseCaseEventsResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "control_service.SubscribeUseCaseEventsResponse"; }

 protected:
  explicit SubscribeUseCaseEventsResponse(::google::protobuf::Arena* arena);
  SubscribeUseCaseEventsResponse(::google::protobuf::Arena* arena, const SubscribeUseCaseEventsResponse& from);
  SubscribeUseCaseEventsResponse(::google::protobuf::Arena* arena, SubscribeUseCaseEventsResponse&& from) noexcept
      : SubscribeUseCaseEventsResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kRemoteSkiFieldNumber = 1,
    kRemoteEntityAddressFieldNumber = 2,
    kUseCaseEventFieldNumber = 3,
  };
  // string remote_ski = 1;
  void clear_remote_ski() ;
  const std::string& remote_ski() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_remote_ski(Arg_&& arg, Args_... args);
  std::string* mutable_remote_ski();
  PROTOBUF_NODISCARD std::string* release_remote_ski();
  void set_allocated_remote_ski(std::string* value);

  private:
  const std::string& _internal_remote_ski() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_remote_ski(
      const std::string& value);
  std::string* _internal_mutable_remote_ski();

  public:
  // .common_types.EntityAddress remote_entity_address = 2;
  bool has_remote_entity_address() const;
  void clear_remote_entity_address() ;
  const ::common_types::EntityAddress& remote_entity_address() const;
  PROTOBUF_NODISCARD ::common_types::EntityAddress* release_remote_entity_address();
  ::common_types::EntityAddress* mutable_remote_entity_address();
  void set_allocated_remote_entity_address(::common_types::EntityAddress* value);
  void unsafe_arena_set_allocated_remote_entity_address(::common_types::EntityAddress* value);
  ::common_types::EntityAddress* unsafe_arena_release_remote_entity_address();

  private:
  const ::common_types::EntityAddress& _internal_remote_entity_address() const;
  ::common_types::EntityAddress* _internal_mutable_remote_entity_address();

  public:
  // .control_service.UseCaseEvent use_case_event = 3;
  bool has_use_case_event() const;
  void clear_use_case_event() ;
  const ::control_service::UseCaseEvent& use_case_event() const;
  PROTOBUF_NODISCARD ::control_service::UseCaseEvent* release_use_case_event();
  ::control_service::UseCaseEvent* mutable_use_case_event();
  void set_allocated_use_case_event(::control_service::UseCaseEvent* value);
  void unsafe_arena_set_allocated_use_case_event(::control_service::UseCaseEvent* value);
  ::control_service::UseCaseEvent* unsafe_arena_release_use_case_event();

  private:
  const ::control_service::UseCaseEvent& _internal_use_case_event() const;
  ::control_service::UseCaseEvent* _internal_mutable_use_case_event();

  public:
  // @@protoc_insertion_point(class_scope:control_service.SubscribeUseCaseEventsResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 2,
      65, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SubscribeUseCaseEventsResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr remote_ski_;
    ::common_types::EntityAddress* remote_entity_address_;
    ::control_service::UseCaseEvent* use_case_event_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_control_5fservice_2fmessages_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// EmptyRequest

// -------------------------------------------------------------------

// EmptyResponse

// -------------------------------------------------------------------

// SetConfigRequest

// uint32 port = 1;
inline void SetConfigRequest::clear_port() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.port_ = 0u;
}
inline ::uint32_t SetConfigRequest::port() const {
  // @@protoc_insertion_point(field_get:control_service.SetConfigRequest.port)
  return _internal_port();
}
inline void SetConfigRequest::set_port(::uint32_t value) {
  _internal_set_port(value);
  // @@protoc_insertion_point(field_set:control_service.SetConfigRequest.port)
}
inline ::uint32_t SetConfigRequest::_internal_port() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.port_;
}
inline void SetConfigRequest::_internal_set_port(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.port_ = value;
}

// string vendor_code = 2;
inline void SetConfigRequest::clear_vendor_code() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.vendor_code_.ClearToEmpty();
}
inline const std::string& SetConfigRequest::vendor_code() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:control_service.SetConfigRequest.vendor_code)
  return _internal_vendor_code();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SetConfigRequest::set_vendor_code(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.vendor_code_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:control_service.SetConfigRequest.vendor_code)
}
inline std::string* SetConfigRequest::mutable_vendor_code() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_vendor_code();
  // @@protoc_insertion_point(field_mutable:control_service.SetConfigRequest.vendor_code)
  return _s;
}
inline const std::string& SetConfigRequest::_internal_vendor_code() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.vendor_code_.Get();
}
inline void SetConfigRequest::_internal_set_vendor_code(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.vendor_code_.Set(value, GetArena());
}
inline std::string* SetConfigRequest::_internal_mutable_vendor_code() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.vendor_code_.Mutable( GetArena());
}
inline std::string* SetConfigRequest::release_vendor_code() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:control_service.SetConfigRequest.vendor_code)
  return _impl_.vendor_code_.Release();
}
inline void SetConfigRequest::set_allocated_vendor_code(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.vendor_code_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.vendor_code_.IsDefault()) {
    _impl_.vendor_code_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:control_service.SetConfigRequest.vendor_code)
}

// string device_brand = 3;
inline void SetConfigRequest::clear_device_brand() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.device_brand_.ClearToEmpty();
}
inline const std::string& SetConfigRequest::device_brand() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:control_service.SetConfigRequest.device_brand)
  return _internal_device_brand();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SetConfigRequest::set_device_brand(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.device_brand_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:control_service.SetConfigRequest.device_brand)
}
inline std::string* SetConfigRequest::mutable_device_brand() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_device_brand();
  // @@protoc_insertion_point(field_mutable:control_service.SetConfigRequest.device_brand)
  return _s;
}
inline const std::string& SetConfigRequest::_internal_device_brand() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.device_brand_.Get();
}
inline void SetConfigRequest::_internal_set_device_brand(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.device_brand_.Set(value, GetArena());
}
inline std::string* SetConfigRequest::_internal_mutable_device_brand() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.device_brand_.Mutable( GetArena());
}
inline std::string* SetConfigRequest::release_device_brand() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:control_service.SetConfigRequest.device_brand)
  return _impl_.device_brand_.Release();
}
inline void SetConfigRequest::set_allocated_device_brand(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.device_brand_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.device_brand_.IsDefault()) {
    _impl_.device_brand_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:control_service.SetConfigRequest.device_brand)
}

// string device_model = 4;
inline void SetConfigRequest::clear_device_model() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.device_model_.ClearToEmpty();
}
inline const std::string& SetConfigRequest::device_model() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:control_service.SetConfigRequest.device_model)
  return _internal_device_model();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SetConfigRequest::set_device_model(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.device_model_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:control_service.SetConfigRequest.device_model)
}
inline std::string* SetConfigRequest::mutable_device_model() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_device_model();
  // @@protoc_insertion_point(field_mutable:control_service.SetConfigRequest.device_model)
  return _s;
}
inline const std::string& SetConfigRequest::_internal_device_model() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.device_model_.Get();
}
inline void SetConfigRequest::_internal_set_device_model(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.device_model_.Set(value, GetArena());
}
inline std::string* SetConfigRequest::_internal_mutable_device_model() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.device_model_.Mutable( GetArena());
}
inline std::string* SetConfigRequest::release_device_model() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:control_service.SetConfigRequest.device_model)
  return _impl_.device_model_.Release();
}
inline void SetConfigRequest::set_allocated_device_model(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.device_model_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.device_model_.IsDefault()) {
    _impl_.device_model_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:control_service.SetConfigRequest.device_model)
}

// string serial_number = 5;
inline void SetConfigRequest::clear_serial_number() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.serial_number_.ClearToEmpty();
}
inline const std::string& SetConfigRequest::serial_number() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:control_service.SetConfigRequest.serial_number)
  return _internal_serial_number();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SetConfigRequest::set_serial_number(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.serial_number_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:control_service.SetConfigRequest.serial_number)
}
inline std::string* SetConfigRequest::mutable_serial_number() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_serial_number();
  // @@protoc_insertion_point(field_mutable:control_service.SetConfigRequest.serial_number)
  return _s;
}
inline const std::string& SetConfigRequest::_internal_serial_number() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.serial_number_.Get();
}
inline void SetConfigRequest::_internal_set_serial_number(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.serial_number_.Set(value, GetArena());
}
inline std::string* SetConfigRequest::_internal_mutable_serial_number() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.serial_number_.Mutable( GetArena());
}
inline std::string* SetConfigRequest::release_serial_number() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:control_service.SetConfigRequest.serial_number)
  return _impl_.serial_number_.Release();
}
inline void SetConfigRequest::set_allocated_serial_number(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.serial_number_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.serial_number_.IsDefault()) {
    _impl_.serial_number_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:control_service.SetConfigRequest.serial_number)
}

// repeated .control_service.DeviceCategory.Enum device_categories = 6;
inline int SetConfigRequest::_internal_device_categories_size() const {
  return _internal_device_categories().size();
}
inline int SetConfigRequest::device_categories_size() const {
  return _internal_device_categories_size();
}
inline void SetConfigRequest::clear_device_categories() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.device_categories_.Clear();
}
inline ::control_service::DeviceCategory_Enum SetConfigRequest::device_categories(int index) const {
  // @@protoc_insertion_point(field_get:control_service.SetConfigRequest.device_categories)
  return static_cast<::control_service::DeviceCategory_Enum>(_internal_device_categories().Get(index));
}
inline void SetConfigRequest::set_device_categories(int index, ::control_service::DeviceCategory_Enum value) {
  _internal_mutable_device_categories()->Set(index, value);
  // @@protoc_insertion_point(field_set:control_service.SetConfigRequest.device_categories)
}
inline void SetConfigRequest::add_device_categories(::control_service::DeviceCategory_Enum value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_device_categories()->Add(value);
  // @@protoc_insertion_point(field_add:control_service.SetConfigRequest.device_categories)
}
inline const ::google::protobuf::RepeatedField<int>& SetConfigRequest::device_categories() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:control_service.SetConfigRequest.device_categories)
  return _internal_device_categories();
}
inline ::google::protobuf::RepeatedField<int>* SetConfigRequest::mutable_device_categories()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:control_service.SetConfigRequest.device_categories)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_device_categories();
}
inline const ::google::protobuf::RepeatedField<int>& SetConfigRequest::_internal_device_categories()
    const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.device_categories_;
}
inline ::google::protobuf::RepeatedField<int>* SetConfigRequest::_internal_mutable_device_categories() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.device_categories_;
}

// .control_service.DeviceType.Enum device_type = 7;
inline void SetConfigRequest::clear_device_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.device_type_ = 0;
}
inline ::control_service::DeviceType_Enum SetConfigRequest::device_type() const {
  // @@protoc_insertion_point(field_get:control_service.SetConfigRequest.device_type)
  return _internal_device_type();
}
inline void SetConfigRequest::set_device_type(::control_service::DeviceType_Enum value) {
  _internal_set_device_type(value);
  // @@protoc_insertion_point(field_set:control_service.SetConfigRequest.device_type)
}
inline ::control_service::DeviceType_Enum SetConfigRequest::_internal_device_type() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::control_service::DeviceType_Enum>(_impl_.device_type_);
}
inline void SetConfigRequest::_internal_set_device_type(::control_service::DeviceType_Enum value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.device_type_ = value;
}

// repeated .control_service.EntityType.Enum entity_types = 8;
inline int SetConfigRequest::_internal_entity_types_size() const {
  return _internal_entity_types().size();
}
inline int SetConfigRequest::entity_types_size() const {
  return _internal_entity_types_size();
}
inline void SetConfigRequest::clear_entity_types() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.entity_types_.Clear();
}
inline ::control_service::EntityType_Enum SetConfigRequest::entity_types(int index) const {
  // @@protoc_insertion_point(field_get:control_service.SetConfigRequest.entity_types)
  return static_cast<::control_service::EntityType_Enum>(_internal_entity_types().Get(index));
}
inline void SetConfigRequest::set_entity_types(int index, ::control_service::EntityType_Enum value) {
  _internal_mutable_entity_types()->Set(index, value);
  // @@protoc_insertion_point(field_set:control_service.SetConfigRequest.entity_types)
}
inline void SetConfigRequest::add_entity_types(::control_service::EntityType_Enum value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_entity_types()->Add(value);
  // @@protoc_insertion_point(field_add:control_service.SetConfigRequest.entity_types)
}
inline const ::google::protobuf::RepeatedField<int>& SetConfigRequest::entity_types() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:control_service.SetConfigRequest.entity_types)
  return _internal_entity_types();
}
inline ::google::protobuf::RepeatedField<int>* SetConfigRequest::mutable_entity_types()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:control_service.SetConfigRequest.entity_types)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_entity_types();
}
inline const ::google::protobuf::RepeatedField<int>& SetConfigRequest::_internal_entity_types()
    const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.entity_types_;
}
inline ::google::protobuf::RepeatedField<int>* SetConfigRequest::_internal_mutable_entity_types() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.entity_types_;
}

// uint32 heartbeat_timeout_seconds = 9;
inline void SetConfigRequest::clear_heartbeat_timeout_seconds() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.heartbeat_timeout_seconds_ = 0u;
}
inline ::uint32_t SetConfigRequest::heartbeat_timeout_seconds() const {
  // @@protoc_insertion_point(field_get:control_service.SetConfigRequest.heartbeat_timeout_seconds)
  return _internal_heartbeat_timeout_seconds();
}
inline void SetConfigRequest::set_heartbeat_timeout_seconds(::uint32_t value) {
  _internal_set_heartbeat_timeout_seconds(value);
  // @@protoc_insertion_point(field_set:control_service.SetConfigRequest.heartbeat_timeout_seconds)
}
inline ::uint32_t SetConfigRequest::_internal_heartbeat_timeout_seconds() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.heartbeat_timeout_seconds_;
}
inline void SetConfigRequest::_internal_set_heartbeat_timeout_seconds(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.heartbeat_timeout_seconds_ = value;
}

// -------------------------------------------------------------------

// AddEntityRequest

// .control_service.EntityType.Enum type = 1;
inline void AddEntityRequest::clear_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.type_ = 0;
}
inline ::control_service::EntityType_Enum AddEntityRequest::type() const {
  // @@protoc_insertion_point(field_get:control_service.AddEntityRequest.type)
  return _internal_type();
}
inline void AddEntityRequest::set_type(::control_service::EntityType_Enum value) {
  _internal_set_type(value);
  // @@protoc_insertion_point(field_set:control_service.AddEntityRequest.type)
}
inline ::control_service::EntityType_Enum AddEntityRequest::_internal_type() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::control_service::EntityType_Enum>(_impl_.type_);
}
inline void AddEntityRequest::_internal_set_type(::control_service::EntityType_Enum value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.type_ = value;
}

// .common_types.EntityAddress address = 2;
inline bool AddEntityRequest::has_address() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.address_ != nullptr);
  return value;
}
inline const ::common_types::EntityAddress& AddEntityRequest::_internal_address() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::common_types::EntityAddress* p = _impl_.address_;
  return p != nullptr ? *p : reinterpret_cast<const ::common_types::EntityAddress&>(::common_types::_EntityAddress_default_instance_);
}
inline const ::common_types::EntityAddress& AddEntityRequest::address() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:control_service.AddEntityRequest.address)
  return _internal_address();
}
inline void AddEntityRequest::unsafe_arena_set_allocated_address(::common_types::EntityAddress* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.address_);
  }
  _impl_.address_ = reinterpret_cast<::common_types::EntityAddress*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:control_service.AddEntityRequest.address)
}
inline ::common_types::EntityAddress* AddEntityRequest::release_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::common_types::EntityAddress* released = _impl_.address_;
  _impl_.address_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::common_types::EntityAddress* AddEntityRequest::unsafe_arena_release_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:control_service.AddEntityRequest.address)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::common_types::EntityAddress* temp = _impl_.address_;
  _impl_.address_ = nullptr;
  return temp;
}
inline ::common_types::EntityAddress* AddEntityRequest::_internal_mutable_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.address_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::common_types::EntityAddress>(GetArena());
    _impl_.address_ = reinterpret_cast<::common_types::EntityAddress*>(p);
  }
  return _impl_.address_;
}
inline ::common_types::EntityAddress* AddEntityRequest::mutable_address() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::common_types::EntityAddress* _msg = _internal_mutable_address();
  // @@protoc_insertion_point(field_mutable:control_service.AddEntityRequest.address)
  return _msg;
}
inline void AddEntityRequest::set_allocated_address(::common_types::EntityAddress* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.address_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.address_ = reinterpret_cast<::common_types::EntityAddress*>(value);
  // @@protoc_insertion_point(field_set_allocated:control_service.AddEntityRequest.address)
}

// -------------------------------------------------------------------

// RemoveEntityRequest

// .common_types.EntityAddress address = 1;
inline bool RemoveEntityRequest::has_address() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.address_ != nullptr);
  return value;
}
inline const ::common_types::EntityAddress& RemoveEntityRequest::_internal_address() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::common_types::EntityAddress* p = _impl_.address_;
  return p != nullptr ? *p : reinterpret_cast<const ::common_types::EntityAddress&>(::common_types::_EntityAddress_default_instance_);
}
inline const ::common_types::EntityAddress& RemoveEntityRequest::address() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:control_service.RemoveEntityRequest.address)
  return _internal_address();
}
inline void RemoveEntityRequest::unsafe_arena_set_allocated_address(::common_types::EntityAddress* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.address_);
  }
  _impl_.address_ = reinterpret_cast<::common_types::EntityAddress*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:control_service.RemoveEntityRequest.address)
}
inline ::common_types::EntityAddress* RemoveEntityRequest::release_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::common_types::EntityAddress* released = _impl_.address_;
  _impl_.address_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::common_types::EntityAddress* RemoveEntityRequest::unsafe_arena_release_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:control_service.RemoveEntityRequest.address)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::common_types::EntityAddress* temp = _impl_.address_;
  _impl_.address_ = nullptr;
  return temp;
}
inline ::common_types::EntityAddress* RemoveEntityRequest::_internal_mutable_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.address_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::common_types::EntityAddress>(GetArena());
    _impl_.address_ = reinterpret_cast<::common_types::EntityAddress*>(p);
  }
  return _impl_.address_;
}
inline ::common_types::EntityAddress* RemoveEntityRequest::mutable_address() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::common_types::EntityAddress* _msg = _internal_mutable_address();
  // @@protoc_insertion_point(field_mutable:control_service.RemoveEntityRequest.address)
  return _msg;
}
inline void RemoveEntityRequest::set_allocated_address(::common_types::EntityAddress* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.address_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.address_ = reinterpret_cast<::common_types::EntityAddress*>(value);
  // @@protoc_insertion_point(field_set_allocated:control_service.RemoveEntityRequest.address)
}

// -------------------------------------------------------------------

// AddUseCaseRequest

// .common_types.EntityAddress entity_address = 1;
inline bool AddUseCaseRequest::has_entity_address() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.entity_address_ != nullptr);
  return value;
}
inline const ::common_types::EntityAddress& AddUseCaseRequest::_internal_entity_address() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::common_types::EntityAddress* p = _impl_.entity_address_;
  return p != nullptr ? *p : reinterpret_cast<const ::common_types::EntityAddress&>(::common_types::_EntityAddress_default_instance_);
}
inline const ::common_types::EntityAddress& AddUseCaseRequest::entity_address() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:control_service.AddUseCaseRequest.entity_address)
  return _internal_entity_address();
}
inline void AddUseCaseRequest::unsafe_arena_set_allocated_entity_address(::common_types::EntityAddress* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.entity_address_);
  }
  _impl_.entity_address_ = reinterpret_cast<::common_types::EntityAddress*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:control_service.AddUseCaseRequest.entity_address)
}
inline ::common_types::EntityAddress* AddUseCaseRequest::release_entity_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::common_types::EntityAddress* released = _impl_.entity_address_;
  _impl_.entity_address_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::common_types::EntityAddress* AddUseCaseRequest::unsafe_arena_release_entity_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:control_service.AddUseCaseRequest.entity_address)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::common_types::EntityAddress* temp = _impl_.entity_address_;
  _impl_.entity_address_ = nullptr;
  return temp;
}
inline ::common_types::EntityAddress* AddUseCaseRequest::_internal_mutable_entity_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.entity_address_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::common_types::EntityAddress>(GetArena());
    _impl_.entity_address_ = reinterpret_cast<::common_types::EntityAddress*>(p);
  }
  return _impl_.entity_address_;
}
inline ::common_types::EntityAddress* AddUseCaseRequest::mutable_entity_address() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::common_types::EntityAddress* _msg = _internal_mutable_entity_address();
  // @@protoc_insertion_point(field_mutable:control_service.AddUseCaseRequest.entity_address)
  return _msg;
}
inline void AddUseCaseRequest::set_allocated_entity_address(::common_types::EntityAddress* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.entity_address_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.entity_address_ = reinterpret_cast<::common_types::EntityAddress*>(value);
  // @@protoc_insertion_point(field_set_allocated:control_service.AddUseCaseRequest.entity_address)
}

// .control_service.UseCase use_case = 2;
inline bool AddUseCaseRequest::has_use_case() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.use_case_ != nullptr);
  return value;
}
inline const ::control_service::UseCase& AddUseCaseRequest::_internal_use_case() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::control_service::UseCase* p = _impl_.use_case_;
  return p != nullptr ? *p : reinterpret_cast<const ::control_service::UseCase&>(::control_service::_UseCase_default_instance_);
}
inline const ::control_service::UseCase& AddUseCaseRequest::use_case() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:control_service.AddUseCaseRequest.use_case)
  return _internal_use_case();
}
inline void AddUseCaseRequest::unsafe_arena_set_allocated_use_case(::control_service::UseCase* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.use_case_);
  }
  _impl_.use_case_ = reinterpret_cast<::control_service::UseCase*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:control_service.AddUseCaseRequest.use_case)
}
inline ::control_service::UseCase* AddUseCaseRequest::release_use_case() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::control_service::UseCase* released = _impl_.use_case_;
  _impl_.use_case_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::control_service::UseCase* AddUseCaseRequest::unsafe_arena_release_use_case() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:control_service.AddUseCaseRequest.use_case)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::control_service::UseCase* temp = _impl_.use_case_;
  _impl_.use_case_ = nullptr;
  return temp;
}
inline ::control_service::UseCase* AddUseCaseRequest::_internal_mutable_use_case() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.use_case_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::control_service::UseCase>(GetArena());
    _impl_.use_case_ = reinterpret_cast<::control_service::UseCase*>(p);
  }
  return _impl_.use_case_;
}
inline ::control_service::UseCase* AddUseCaseRequest::mutable_use_case() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::control_service::UseCase* _msg = _internal_mutable_use_case();
  // @@protoc_insertion_point(field_mutable:control_service.AddUseCaseRequest.use_case)
  return _msg;
}
inline void AddUseCaseRequest::set_allocated_use_case(::control_service::UseCase* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.use_case_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.use_case_ = reinterpret_cast<::control_service::UseCase*>(value);
  // @@protoc_insertion_point(field_set_allocated:control_service.AddUseCaseRequest.use_case)
}

// -------------------------------------------------------------------

// AddUseCaseResponse

// string endpoint = 1;
inline void AddUseCaseResponse::clear_endpoint() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.endpoint_.ClearToEmpty();
}
inline const std::string& AddUseCaseResponse::endpoint() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:control_service.AddUseCaseResponse.endpoint)
  return _internal_endpoint();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void AddUseCaseResponse::set_endpoint(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.endpoint_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:control_service.AddUseCaseResponse.endpoint)
}
inline std::string* AddUseCaseResponse::mutable_endpoint() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_endpoint();
  // @@protoc_insertion_point(field_mutable:control_service.AddUseCaseResponse.endpoint)
  return _s;
}
inline const std::string& AddUseCaseResponse::_internal_endpoint() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.endpoint_.Get();
}
inline void AddUseCaseResponse::_internal_set_endpoint(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.endpoint_.Set(value, GetArena());
}
inline std::string* AddUseCaseResponse::_internal_mutable_endpoint() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.endpoint_.Mutable( GetArena());
}
inline std::string* AddUseCaseResponse::release_endpoint() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:control_service.AddUseCaseResponse.endpoint)
  return _impl_.endpoint_.Release();
}
inline void AddUseCaseResponse::set_allocated_endpoint(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.endpoint_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.endpoint_.IsDefault()) {
    _impl_.endpoint_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:control_service.AddUseCaseResponse.endpoint)
}

// -------------------------------------------------------------------

// RegisterRemoteSkiRequest

// string remote_ski = 1;
inline void RegisterRemoteSkiRequest::clear_remote_ski() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.remote_ski_.ClearToEmpty();
}
inline const std::string& RegisterRemoteSkiRequest::remote_ski() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:control_service.RegisterRemoteSkiRequest.remote_ski)
  return _internal_remote_ski();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void RegisterRemoteSkiRequest::set_remote_ski(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.remote_ski_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:control_service.RegisterRemoteSkiRequest.remote_ski)
}
inline std::string* RegisterRemoteSkiRequest::mutable_remote_ski() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_remote_ski();
  // @@protoc_insertion_point(field_mutable:control_service.RegisterRemoteSkiRequest.remote_ski)
  return _s;
}
inline const std::string& RegisterRemoteSkiRequest::_internal_remote_ski() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.remote_ski_.Get();
}
inline void RegisterRemoteSkiRequest::_internal_set_remote_ski(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.remote_ski_.Set(value, GetArena());
}
inline std::string* RegisterRemoteSkiRequest::_internal_mutable_remote_ski() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.remote_ski_.Mutable( GetArena());
}
inline std::string* RegisterRemoteSkiRequest::release_remote_ski() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:control_service.RegisterRemoteSkiRequest.remote_ski)
  return _impl_.remote_ski_.Release();
}
inline void RegisterRemoteSkiRequest::set_allocated_remote_ski(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.remote_ski_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.remote_ski_.IsDefault()) {
    _impl_.remote_ski_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:control_service.RegisterRemoteSkiRequest.remote_ski)
}

// -------------------------------------------------------------------

// SubscribeUseCaseEventsRequest

// .common_types.EntityAddress entity_address = 1;
inline bool SubscribeUseCaseEventsRequest::has_entity_address() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.entity_address_ != nullptr);
  return value;
}
inline const ::common_types::EntityAddress& SubscribeUseCaseEventsRequest::_internal_entity_address() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::common_types::EntityAddress* p = _impl_.entity_address_;
  return p != nullptr ? *p : reinterpret_cast<const ::common_types::EntityAddress&>(::common_types::_EntityAddress_default_instance_);
}
inline const ::common_types::EntityAddress& SubscribeUseCaseEventsRequest::entity_address() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:control_service.SubscribeUseCaseEventsRequest.entity_address)
  return _internal_entity_address();
}
inline void SubscribeUseCaseEventsRequest::unsafe_arena_set_allocated_entity_address(::common_types::EntityAddress* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.entity_address_);
  }
  _impl_.entity_address_ = reinterpret_cast<::common_types::EntityAddress*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:control_service.SubscribeUseCaseEventsRequest.entity_address)
}
inline ::common_types::EntityAddress* SubscribeUseCaseEventsRequest::release_entity_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::common_types::EntityAddress* released = _impl_.entity_address_;
  _impl_.entity_address_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::common_types::EntityAddress* SubscribeUseCaseEventsRequest::unsafe_arena_release_entity_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:control_service.SubscribeUseCaseEventsRequest.entity_address)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::common_types::EntityAddress* temp = _impl_.entity_address_;
  _impl_.entity_address_ = nullptr;
  return temp;
}
inline ::common_types::EntityAddress* SubscribeUseCaseEventsRequest::_internal_mutable_entity_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.entity_address_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::common_types::EntityAddress>(GetArena());
    _impl_.entity_address_ = reinterpret_cast<::common_types::EntityAddress*>(p);
  }
  return _impl_.entity_address_;
}
inline ::common_types::EntityAddress* SubscribeUseCaseEventsRequest::mutable_entity_address() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::common_types::EntityAddress* _msg = _internal_mutable_entity_address();
  // @@protoc_insertion_point(field_mutable:control_service.SubscribeUseCaseEventsRequest.entity_address)
  return _msg;
}
inline void SubscribeUseCaseEventsRequest::set_allocated_entity_address(::common_types::EntityAddress* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.entity_address_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.entity_address_ = reinterpret_cast<::common_types::EntityAddress*>(value);
  // @@protoc_insertion_point(field_set_allocated:control_service.SubscribeUseCaseEventsRequest.entity_address)
}

// .control_service.UseCase use_case = 2;
inline bool SubscribeUseCaseEventsRequest::has_use_case() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.use_case_ != nullptr);
  return value;
}
inline const ::control_service::UseCase& SubscribeUseCaseEventsRequest::_internal_use_case() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::control_service::UseCase* p = _impl_.use_case_;
  return p != nullptr ? *p : reinterpret_cast<const ::control_service::UseCase&>(::control_service::_UseCase_default_instance_);
}
inline const ::control_service::UseCase& SubscribeUseCaseEventsRequest::use_case() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:control_service.SubscribeUseCaseEventsRequest.use_case)
  return _internal_use_case();
}
inline void SubscribeUseCaseEventsRequest::unsafe_arena_set_allocated_use_case(::control_service::UseCase* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.use_case_);
  }
  _impl_.use_case_ = reinterpret_cast<::control_service::UseCase*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:control_service.SubscribeUseCaseEventsRequest.use_case)
}
inline ::control_service::UseCase* SubscribeUseCaseEventsRequest::release_use_case() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::control_service::UseCase* released = _impl_.use_case_;
  _impl_.use_case_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::control_service::UseCase* SubscribeUseCaseEventsRequest::unsafe_arena_release_use_case() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:control_service.SubscribeUseCaseEventsRequest.use_case)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::control_service::UseCase* temp = _impl_.use_case_;
  _impl_.use_case_ = nullptr;
  return temp;
}
inline ::control_service::UseCase* SubscribeUseCaseEventsRequest::_internal_mutable_use_case() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.use_case_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::control_service::UseCase>(GetArena());
    _impl_.use_case_ = reinterpret_cast<::control_service::UseCase*>(p);
  }
  return _impl_.use_case_;
}
inline ::control_service::UseCase* SubscribeUseCaseEventsRequest::mutable_use_case() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::control_service::UseCase* _msg = _internal_mutable_use_case();
  // @@protoc_insertion_point(field_mutable:control_service.SubscribeUseCaseEventsRequest.use_case)
  return _msg;
}
inline void SubscribeUseCaseEventsRequest::set_allocated_use_case(::control_service::UseCase* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.use_case_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.use_case_ = reinterpret_cast<::control_service::UseCase*>(value);
  // @@protoc_insertion_point(field_set_allocated:control_service.SubscribeUseCaseEventsRequest.use_case)
}

// -------------------------------------------------------------------

// SubscribeUseCaseEventsResponse

// string remote_ski = 1;
inline void SubscribeUseCaseEventsResponse::clear_remote_ski() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.remote_ski_.ClearToEmpty();
}
inline const std::string& SubscribeUseCaseEventsResponse::remote_ski() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:control_service.SubscribeUseCaseEventsResponse.remote_ski)
  return _internal_remote_ski();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SubscribeUseCaseEventsResponse::set_remote_ski(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.remote_ski_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:control_service.SubscribeUseCaseEventsResponse.remote_ski)
}
inline std::string* SubscribeUseCaseEventsResponse::mutable_remote_ski() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_remote_ski();
  // @@protoc_insertion_point(field_mutable:control_service.SubscribeUseCaseEventsResponse.remote_ski)
  return _s;
}
inline const std::string& SubscribeUseCaseEventsResponse::_internal_remote_ski() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.remote_ski_.Get();
}
inline void SubscribeUseCaseEventsResponse::_internal_set_remote_ski(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.remote_ski_.Set(value, GetArena());
}
inline std::string* SubscribeUseCaseEventsResponse::_internal_mutable_remote_ski() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.remote_ski_.Mutable( GetArena());
}
inline std::string* SubscribeUseCaseEventsResponse::release_remote_ski() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:control_service.SubscribeUseCaseEventsResponse.remote_ski)
  return _impl_.remote_ski_.Release();
}
inline void SubscribeUseCaseEventsResponse::set_allocated_remote_ski(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.remote_ski_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.remote_ski_.IsDefault()) {
    _impl_.remote_ski_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:control_service.SubscribeUseCaseEventsResponse.remote_ski)
}

// .common_types.EntityAddress remote_entity_address = 2;
inline bool SubscribeUseCaseEventsResponse::has_remote_entity_address() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.remote_entity_address_ != nullptr);
  return value;
}
inline const ::common_types::EntityAddress& SubscribeUseCaseEventsResponse::_internal_remote_entity_address() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::common_types::EntityAddress* p = _impl_.remote_entity_address_;
  return p != nullptr ? *p : reinterpret_cast<const ::common_types::EntityAddress&>(::common_types::_EntityAddress_default_instance_);
}
inline const ::common_types::EntityAddress& SubscribeUseCaseEventsResponse::remote_entity_address() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:control_service.SubscribeUseCaseEventsResponse.remote_entity_address)
  return _internal_remote_entity_address();
}
inline void SubscribeUseCaseEventsResponse::unsafe_arena_set_allocated_remote_entity_address(::common_types::EntityAddress* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.remote_entity_address_);
  }
  _impl_.remote_entity_address_ = reinterpret_cast<::common_types::EntityAddress*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:control_service.SubscribeUseCaseEventsResponse.remote_entity_address)
}
inline ::common_types::EntityAddress* SubscribeUseCaseEventsResponse::release_remote_entity_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::common_types::EntityAddress* released = _impl_.remote_entity_address_;
  _impl_.remote_entity_address_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::common_types::EntityAddress* SubscribeUseCaseEventsResponse::unsafe_arena_release_remote_entity_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:control_service.SubscribeUseCaseEventsResponse.remote_entity_address)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::common_types::EntityAddress* temp = _impl_.remote_entity_address_;
  _impl_.remote_entity_address_ = nullptr;
  return temp;
}
inline ::common_types::EntityAddress* SubscribeUseCaseEventsResponse::_internal_mutable_remote_entity_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.remote_entity_address_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::common_types::EntityAddress>(GetArena());
    _impl_.remote_entity_address_ = reinterpret_cast<::common_types::EntityAddress*>(p);
  }
  return _impl_.remote_entity_address_;
}
inline ::common_types::EntityAddress* SubscribeUseCaseEventsResponse::mutable_remote_entity_address() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::common_types::EntityAddress* _msg = _internal_mutable_remote_entity_address();
  // @@protoc_insertion_point(field_mutable:control_service.SubscribeUseCaseEventsResponse.remote_entity_address)
  return _msg;
}
inline void SubscribeUseCaseEventsResponse::set_allocated_remote_entity_address(::common_types::EntityAddress* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.remote_entity_address_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.remote_entity_address_ = reinterpret_cast<::common_types::EntityAddress*>(value);
  // @@protoc_insertion_point(field_set_allocated:control_service.SubscribeUseCaseEventsResponse.remote_entity_address)
}

// .control_service.UseCaseEvent use_case_event = 3;
inline bool SubscribeUseCaseEventsResponse::has_use_case_event() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.use_case_event_ != nullptr);
  return value;
}
inline const ::control_service::UseCaseEvent& SubscribeUseCaseEventsResponse::_internal_use_case_event() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::control_service::UseCaseEvent* p = _impl_.use_case_event_;
  return p != nullptr ? *p : reinterpret_cast<const ::control_service::UseCaseEvent&>(::control_service::_UseCaseEvent_default_instance_);
}
inline const ::control_service::UseCaseEvent& SubscribeUseCaseEventsResponse::use_case_event() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:control_service.SubscribeUseCaseEventsResponse.use_case_event)
  return _internal_use_case_event();
}
inline void SubscribeUseCaseEventsResponse::unsafe_arena_set_allocated_use_case_event(::control_service::UseCaseEvent* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.use_case_event_);
  }
  _impl_.use_case_event_ = reinterpret_cast<::control_service::UseCaseEvent*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:control_service.SubscribeUseCaseEventsResponse.use_case_event)
}
inline ::control_service::UseCaseEvent* SubscribeUseCaseEventsResponse::release_use_case_event() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::control_service::UseCaseEvent* released = _impl_.use_case_event_;
  _impl_.use_case_event_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::control_service::UseCaseEvent* SubscribeUseCaseEventsResponse::unsafe_arena_release_use_case_event() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:control_service.SubscribeUseCaseEventsResponse.use_case_event)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::control_service::UseCaseEvent* temp = _impl_.use_case_event_;
  _impl_.use_case_event_ = nullptr;
  return temp;
}
inline ::control_service::UseCaseEvent* SubscribeUseCaseEventsResponse::_internal_mutable_use_case_event() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.use_case_event_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::control_service::UseCaseEvent>(GetArena());
    _impl_.use_case_event_ = reinterpret_cast<::control_service::UseCaseEvent*>(p);
  }
  return _impl_.use_case_event_;
}
inline ::control_service::UseCaseEvent* SubscribeUseCaseEventsResponse::mutable_use_case_event() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::control_service::UseCaseEvent* _msg = _internal_mutable_use_case_event();
  // @@protoc_insertion_point(field_mutable:control_service.SubscribeUseCaseEventsResponse.use_case_event)
  return _msg;
}
inline void SubscribeUseCaseEventsResponse::set_allocated_use_case_event(::control_service::UseCaseEvent* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.use_case_event_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.use_case_event_ = reinterpret_cast<::control_service::UseCaseEvent*>(value);
  // @@protoc_insertion_point(field_set_allocated:control_service.SubscribeUseCaseEventsResponse.use_case_event)
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

EmptyRequest CreateEmptyRequest();

EmptyResponse CreateEmptyResponse();

SetConfigRequest CreateSetConfigRequest(
    uint32_t port,
    std::string vendor_code,
    std::string device_brand,
    std::string device_model,
    std::string serial_number,
    std::vector<control_service::DeviceCategory::Enum> device_categories,
    control_service::DeviceType::Enum device_type,
    std::vector<control_service::EntityType::Enum> entity_types,
    uint32_t heartbeat_timeout_seconds);

AddEntityRequest CreateAddEntityRequest(
    control_service::EntityType::Enum type,
    common_types::EntityAddress* address);

RemoveEntityRequest CreateRemoveEntityRequest(
    common_types::EntityAddress* address);

AddUseCaseRequest CreateAddUseCaseRequest(
    common_types::EntityAddress* entity_address,
    control_service::UseCase* use_case);

AddUseCaseResponse CreateAddUseCaseResponse(
    std::string endpoint);

RegisterRemoteSkiRequest CreateRegisterRemoteSkiRequest(
    std::string remote_ski);

SubscribeUseCaseEventsRequest CreateSubscribeUseCaseEventsRequest(
    common_types::EntityAddress* entity_address,
    control_service::UseCase* use_case);

SubscribeUseCaseEventsResponse CreateSubscribeUseCaseEventsResponse(
    std::string remote_ski,
    common_types::EntityAddress* remote_entity_address,
    control_service::UseCaseEvent* use_case_event);

// @@protoc_insertion_point(namespace_scope)
}  // namespace control_service


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // control_5fservice_2fmessages_2eproto_2epb_2eh
