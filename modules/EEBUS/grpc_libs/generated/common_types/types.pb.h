// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: common_types/types.proto
// Protobuf C++ Version: 5.29.0

#ifndef common_5ftypes_2ftypes_2eproto_2epb_2eh
#define common_5ftypes_2ftypes_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5029000
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_common_5ftypes_2ftypes_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_common_5ftypes_2ftypes_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_common_5ftypes_2ftypes_2eproto;
namespace common_types {
class EntityAddress;
struct EntityAddressDefaultTypeInternal;
extern EntityAddressDefaultTypeInternal _EntityAddress_default_instance_;
class LoadLimit;
struct LoadLimitDefaultTypeInternal;
extern LoadLimitDefaultTypeInternal _LoadLimit_default_instance_;
}  // namespace common_types
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace common_types {

// ===================================================================


// -------------------------------------------------------------------

class LoadLimit final
    : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:common_types.LoadLimit) */ {
 public:
  inline LoadLimit() : LoadLimit(nullptr) {}
  ~LoadLimit() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(LoadLimit* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(LoadLimit));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR LoadLimit(
      ::google::protobuf::internal::ConstantInitialized);

  inline LoadLimit(const LoadLimit& from) : LoadLimit(nullptr, from) {}
  inline LoadLimit(LoadLimit&& from) noexcept
      : LoadLimit(nullptr, std::move(from)) {}
  inline LoadLimit& operator=(const LoadLimit& from) {
    CopyFrom(from);
    return *this;
  }
  inline LoadLimit& operator=(LoadLimit&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const LoadLimit& default_instance() {
    return *internal_default_instance();
  }
  static inline const LoadLimit* internal_default_instance() {
    return reinterpret_cast<const LoadLimit*>(
        &_LoadLimit_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(LoadLimit& a, LoadLimit& b) { a.Swap(&b); }
  inline void Swap(LoadLimit* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(LoadLimit* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  LoadLimit* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<LoadLimit>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const LoadLimit& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const LoadLimit& from) { LoadLimit::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(LoadLimit* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "common_types.LoadLimit"; }

 protected:
  explicit LoadLimit(::google::protobuf::Arena* arena);
  LoadLimit(::google::protobuf::Arena* arena, const LoadLimit& from);
  LoadLimit(::google::protobuf::Arena* arena, LoadLimit&& from) noexcept
      : LoadLimit(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kDurationNanosecondsFieldNumber = 1,
    kValueFieldNumber = 4,
    kIsChangeableFieldNumber = 2,
    kIsActiveFieldNumber = 3,
    kDeleteDurationFieldNumber = 5,
  };
  // int64 duration_nanoseconds = 1;
  void clear_duration_nanoseconds() ;
  ::int64_t duration_nanoseconds() const;
  void set_duration_nanoseconds(::int64_t value);

  private:
  ::int64_t _internal_duration_nanoseconds() const;
  void _internal_set_duration_nanoseconds(::int64_t value);

  public:
  // double value = 4;
  void clear_value() ;
  double value() const;
  void set_value(double value);

  private:
  double _internal_value() const;
  void _internal_set_value(double value);

  public:
  // bool is_changeable = 2;
  void clear_is_changeable() ;
  bool is_changeable() const;
  void set_is_changeable(bool value);

  private:
  bool _internal_is_changeable() const;
  void _internal_set_is_changeable(bool value);

  public:
  // bool is_active = 3;
  void clear_is_active() ;
  bool is_active() const;
  void set_is_active(bool value);

  private:
  bool _internal_is_active() const;
  void _internal_set_is_active(bool value);

  public:
  // bool delete_duration = 5;
  void clear_delete_duration() ;
  bool delete_duration() const;
  void set_delete_duration(bool value);

  private:
  bool _internal_delete_duration() const;
  void _internal_set_delete_duration(bool value);

  public:
  // @@protoc_insertion_point(class_scope:common_types.LoadLimit)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 5, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const LoadLimit& from_msg);
    ::int64_t duration_nanoseconds_;
    double value_;
    bool is_changeable_;
    bool is_active_;
    bool delete_duration_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_common_5ftypes_2ftypes_2eproto;
};
// -------------------------------------------------------------------

class EntityAddress final
    : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:common_types.EntityAddress) */ {
 public:
  inline EntityAddress() : EntityAddress(nullptr) {}
  ~EntityAddress() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(EntityAddress* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(EntityAddress));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR EntityAddress(
      ::google::protobuf::internal::ConstantInitialized);

  inline EntityAddress(const EntityAddress& from) : EntityAddress(nullptr, from) {}
  inline EntityAddress(EntityAddress&& from) noexcept
      : EntityAddress(nullptr, std::move(from)) {}
  inline EntityAddress& operator=(const EntityAddress& from) {
    CopyFrom(from);
    return *this;
  }
  inline EntityAddress& operator=(EntityAddress&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const EntityAddress& default_instance() {
    return *internal_default_instance();
  }
  static inline const EntityAddress* internal_default_instance() {
    return reinterpret_cast<const EntityAddress*>(
        &_EntityAddress_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(EntityAddress& a, EntityAddress& b) { a.Swap(&b); }
  inline void Swap(EntityAddress* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(EntityAddress* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  EntityAddress* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<EntityAddress>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const EntityAddress& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const EntityAddress& from) { EntityAddress::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(EntityAddress* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "common_types.EntityAddress"; }

 protected:
  explicit EntityAddress(::google::protobuf::Arena* arena);
  EntityAddress(::google::protobuf::Arena* arena, const EntityAddress& from);
  EntityAddress(::google::protobuf::Arena* arena, EntityAddress&& from) noexcept
      : EntityAddress(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kEntityAddressFieldNumber = 1,
  };
  // repeated uint32 entity_address = 1;
  int entity_address_size() const;
  private:
  int _internal_entity_address_size() const;

  public:
  void clear_entity_address() ;
  ::uint32_t entity_address(int index) const;
  void set_entity_address(int index, ::uint32_t value);
  void add_entity_address(::uint32_t value);
  const ::google::protobuf::RepeatedField<::uint32_t>& entity_address() const;
  ::google::protobuf::RepeatedField<::uint32_t>* mutable_entity_address();

  private:
  const ::google::protobuf::RepeatedField<::uint32_t>& _internal_entity_address() const;
  ::google::protobuf::RepeatedField<::uint32_t>* _internal_mutable_entity_address();

  public:
  // @@protoc_insertion_point(class_scope:common_types.EntityAddress)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const EntityAddress& from_msg);
    ::google::protobuf::RepeatedField<::uint32_t> entity_address_;
    ::google::protobuf::internal::CachedSize _entity_address_cached_byte_size_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_common_5ftypes_2ftypes_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// LoadLimit

// int64 duration_nanoseconds = 1;
inline void LoadLimit::clear_duration_nanoseconds() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.duration_nanoseconds_ = ::int64_t{0};
}
inline ::int64_t LoadLimit::duration_nanoseconds() const {
  // @@protoc_insertion_point(field_get:common_types.LoadLimit.duration_nanoseconds)
  return _internal_duration_nanoseconds();
}
inline void LoadLimit::set_duration_nanoseconds(::int64_t value) {
  _internal_set_duration_nanoseconds(value);
  // @@protoc_insertion_point(field_set:common_types.LoadLimit.duration_nanoseconds)
}
inline ::int64_t LoadLimit::_internal_duration_nanoseconds() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.duration_nanoseconds_;
}
inline void LoadLimit::_internal_set_duration_nanoseconds(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.duration_nanoseconds_ = value;
}

// bool is_changeable = 2;
inline void LoadLimit::clear_is_changeable() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.is_changeable_ = false;
}
inline bool LoadLimit::is_changeable() const {
  // @@protoc_insertion_point(field_get:common_types.LoadLimit.is_changeable)
  return _internal_is_changeable();
}
inline void LoadLimit::set_is_changeable(bool value) {
  _internal_set_is_changeable(value);
  // @@protoc_insertion_point(field_set:common_types.LoadLimit.is_changeable)
}
inline bool LoadLimit::_internal_is_changeable() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.is_changeable_;
}
inline void LoadLimit::_internal_set_is_changeable(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.is_changeable_ = value;
}

// bool is_active = 3;
inline void LoadLimit::clear_is_active() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.is_active_ = false;
}
inline bool LoadLimit::is_active() const {
  // @@protoc_insertion_point(field_get:common_types.LoadLimit.is_active)
  return _internal_is_active();
}
inline void LoadLimit::set_is_active(bool value) {
  _internal_set_is_active(value);
  // @@protoc_insertion_point(field_set:common_types.LoadLimit.is_active)
}
inline bool LoadLimit::_internal_is_active() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.is_active_;
}
inline void LoadLimit::_internal_set_is_active(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.is_active_ = value;
}

// double value = 4;
inline void LoadLimit::clear_value() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.value_ = 0;
}
inline double LoadLimit::value() const {
  // @@protoc_insertion_point(field_get:common_types.LoadLimit.value)
  return _internal_value();
}
inline void LoadLimit::set_value(double value) {
  _internal_set_value(value);
  // @@protoc_insertion_point(field_set:common_types.LoadLimit.value)
}
inline double LoadLimit::_internal_value() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.value_;
}
inline void LoadLimit::_internal_set_value(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.value_ = value;
}

// bool delete_duration = 5;
inline void LoadLimit::clear_delete_duration() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.delete_duration_ = false;
}
inline bool LoadLimit::delete_duration() const {
  // @@protoc_insertion_point(field_get:common_types.LoadLimit.delete_duration)
  return _internal_delete_duration();
}
inline void LoadLimit::set_delete_duration(bool value) {
  _internal_set_delete_duration(value);
  // @@protoc_insertion_point(field_set:common_types.LoadLimit.delete_duration)
}
inline bool LoadLimit::_internal_delete_duration() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.delete_duration_;
}
inline void LoadLimit::_internal_set_delete_duration(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.delete_duration_ = value;
}

// -------------------------------------------------------------------

// EntityAddress

// repeated uint32 entity_address = 1;
inline int EntityAddress::_internal_entity_address_size() const {
  return _internal_entity_address().size();
}
inline int EntityAddress::entity_address_size() const {
  return _internal_entity_address_size();
}
inline void EntityAddress::clear_entity_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.entity_address_.Clear();
}
inline ::uint32_t EntityAddress::entity_address(int index) const {
  // @@protoc_insertion_point(field_get:common_types.EntityAddress.entity_address)
  return _internal_entity_address().Get(index);
}
inline void EntityAddress::set_entity_address(int index, ::uint32_t value) {
  _internal_mutable_entity_address()->Set(index, value);
  // @@protoc_insertion_point(field_set:common_types.EntityAddress.entity_address)
}
inline void EntityAddress::add_entity_address(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_entity_address()->Add(value);
  // @@protoc_insertion_point(field_add:common_types.EntityAddress.entity_address)
}
inline const ::google::protobuf::RepeatedField<::uint32_t>& EntityAddress::entity_address() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:common_types.EntityAddress.entity_address)
  return _internal_entity_address();
}
inline ::google::protobuf::RepeatedField<::uint32_t>* EntityAddress::mutable_entity_address()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:common_types.EntityAddress.entity_address)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_entity_address();
}
inline const ::google::protobuf::RepeatedField<::uint32_t>&
EntityAddress::_internal_entity_address() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.entity_address_;
}
inline ::google::protobuf::RepeatedField<::uint32_t>* EntityAddress::_internal_mutable_entity_address() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.entity_address_;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

LoadLimit CreateLoadLimit(
    int64_t duration_nanoseconds,
    bool is_changeable,
    bool is_active,
    double value,
    bool delete_duration);

EntityAddress CreateEntityAddress(
    std::vector<uint32_t> entity_address);

// @@protoc_insertion_point(namespace_scope)
}  // namespace common_types


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // common_5ftypes_2ftypes_2eproto_2epb_2eh
