// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: common_types/types.proto
// Protobuf C++ Version: 5.27.2

#include "common_types/types.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace common_types {

inline constexpr LoadLimit::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : duration_nanoseconds_{::int64_t{0}},
        value_{0},
        is_changeable_{false},
        is_active_{false},
        delete_duration_{false},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR LoadLimit::LoadLimit(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct LoadLimitDefaultTypeInternal {
  PROTOBUF_CONSTEXPR LoadLimitDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~LoadLimitDefaultTypeInternal() {}
  union {
    LoadLimit _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 LoadLimitDefaultTypeInternal _LoadLimit_default_instance_;

inline constexpr EntityAddress::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : entity_address_{},
        _entity_address_cached_byte_size_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR EntityAddress::EntityAddress(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct EntityAddressDefaultTypeInternal {
  PROTOBUF_CONSTEXPR EntityAddressDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~EntityAddressDefaultTypeInternal() {}
  union {
    EntityAddress _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 EntityAddressDefaultTypeInternal _EntityAddress_default_instance_;
}  // namespace common_types
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_common_5ftypes_2ftypes_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_common_5ftypes_2ftypes_2eproto = nullptr;
const ::uint32_t
    TableStruct_common_5ftypes_2ftypes_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::common_types::LoadLimit, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::common_types::LoadLimit, _impl_.duration_nanoseconds_),
        PROTOBUF_FIELD_OFFSET(::common_types::LoadLimit, _impl_.is_changeable_),
        PROTOBUF_FIELD_OFFSET(::common_types::LoadLimit, _impl_.is_active_),
        PROTOBUF_FIELD_OFFSET(::common_types::LoadLimit, _impl_.value_),
        PROTOBUF_FIELD_OFFSET(::common_types::LoadLimit, _impl_.delete_duration_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::common_types::EntityAddress, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::common_types::EntityAddress, _impl_.entity_address_),
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::common_types::LoadLimit)},
        {13, -1, -1, sizeof(::common_types::EntityAddress)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::common_types::_LoadLimit_default_instance_._instance,
    &::common_types::_EntityAddress_default_instance_._instance,
};
const char descriptor_table_protodef_common_5ftypes_2ftypes_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\030common_types/types.proto\022\014common_types"
    "\"{\n\tLoadLimit\022\034\n\024duration_nanoseconds\030\001 "
    "\001(\003\022\025\n\ris_changeable\030\002 \001(\010\022\021\n\tis_active\030"
    "\003 \001(\010\022\r\n\005value\030\004 \001(\001\022\027\n\017delete_duration\030"
    "\005 \001(\010\"\'\n\rEntityAddress\022\026\n\016entity_address"
    "\030\001 \003(\rB>Z<github.com/enbility/eebus-grpc"
    "-api/rpc_services/common_typesb\006proto3"
};
static ::absl::once_flag descriptor_table_common_5ftypes_2ftypes_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_common_5ftypes_2ftypes_2eproto = {
    false,
    false,
    278,
    descriptor_table_protodef_common_5ftypes_2ftypes_2eproto,
    "common_types/types.proto",
    &descriptor_table_common_5ftypes_2ftypes_2eproto_once,
    nullptr,
    0,
    2,
    schemas,
    file_default_instances,
    TableStruct_common_5ftypes_2ftypes_2eproto::offsets,
    file_level_enum_descriptors_common_5ftypes_2ftypes_2eproto,
    file_level_service_descriptors_common_5ftypes_2ftypes_2eproto,
};
namespace common_types {
// ===================================================================

class LoadLimit::_Internal {
 public:
};

LoadLimit::LoadLimit(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:common_types.LoadLimit)
}
LoadLimit::LoadLimit(
    ::google::protobuf::Arena* arena, const LoadLimit& from)
    : LoadLimit(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE LoadLimit::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void LoadLimit::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, duration_nanoseconds_),
           0,
           offsetof(Impl_, delete_duration_) -
               offsetof(Impl_, duration_nanoseconds_) +
               sizeof(Impl_::delete_duration_));
}
LoadLimit::~LoadLimit() {
  // @@protoc_insertion_point(destructor:common_types.LoadLimit)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void LoadLimit::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
LoadLimit::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(LoadLimit, _impl_._cached_size_),
              false,
          },
          &LoadLimit::MergeImpl,
          &LoadLimit::kDescriptorMethods,
          &descriptor_table_common_5ftypes_2ftypes_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 0, 0, 2> LoadLimit::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_LoadLimit_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::common_types::LoadLimit>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // int64 duration_nanoseconds = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(LoadLimit, _impl_.duration_nanoseconds_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(LoadLimit, _impl_.duration_nanoseconds_)}},
    // bool is_changeable = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(LoadLimit, _impl_.is_changeable_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(LoadLimit, _impl_.is_changeable_)}},
    // bool is_active = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(LoadLimit, _impl_.is_active_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(LoadLimit, _impl_.is_active_)}},
    // double value = 4;
    {::_pbi::TcParser::FastF64S1,
     {33, 63, 0, PROTOBUF_FIELD_OFFSET(LoadLimit, _impl_.value_)}},
    // bool delete_duration = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(LoadLimit, _impl_.delete_duration_), 63>(),
     {40, 63, 0, PROTOBUF_FIELD_OFFSET(LoadLimit, _impl_.delete_duration_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // int64 duration_nanoseconds = 1;
    {PROTOBUF_FIELD_OFFSET(LoadLimit, _impl_.duration_nanoseconds_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // bool is_changeable = 2;
    {PROTOBUF_FIELD_OFFSET(LoadLimit, _impl_.is_changeable_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // bool is_active = 3;
    {PROTOBUF_FIELD_OFFSET(LoadLimit, _impl_.is_active_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // double value = 4;
    {PROTOBUF_FIELD_OFFSET(LoadLimit, _impl_.value_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
    // bool delete_duration = 5;
    {PROTOBUF_FIELD_OFFSET(LoadLimit, _impl_.delete_duration_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void LoadLimit::Clear() {
// @@protoc_insertion_point(message_clear_start:common_types.LoadLimit)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.duration_nanoseconds_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.delete_duration_) -
      reinterpret_cast<char*>(&_impl_.duration_nanoseconds_)) + sizeof(_impl_.delete_duration_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* LoadLimit::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:common_types.LoadLimit)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int64 duration_nanoseconds = 1;
  if (this->_internal_duration_nanoseconds() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt64ToArrayWithField<1>(
            stream, this->_internal_duration_nanoseconds(), target);
  }

  // bool is_changeable = 2;
  if (this->_internal_is_changeable() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        2, this->_internal_is_changeable(), target);
  }

  // bool is_active = 3;
  if (this->_internal_is_active() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        3, this->_internal_is_active(), target);
  }

  // double value = 4;
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_value = this->_internal_value();
  ::uint64_t raw_value;
  memcpy(&raw_value, &tmp_value, sizeof(tmp_value));
  if (raw_value != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(
        4, this->_internal_value(), target);
  }

  // bool delete_duration = 5;
  if (this->_internal_delete_duration() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        5, this->_internal_delete_duration(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:common_types.LoadLimit)
  return target;
}

::size_t LoadLimit::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:common_types.LoadLimit)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // int64 duration_nanoseconds = 1;
  if (this->_internal_duration_nanoseconds() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
        this->_internal_duration_nanoseconds());
  }

  // double value = 4;
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_value = this->_internal_value();
  ::uint64_t raw_value;
  memcpy(&raw_value, &tmp_value, sizeof(tmp_value));
  if (raw_value != 0) {
    total_size += 9;
  }

  // bool is_changeable = 2;
  if (this->_internal_is_changeable() != 0) {
    total_size += 2;
  }

  // bool is_active = 3;
  if (this->_internal_is_active() != 0) {
    total_size += 2;
  }

  // bool delete_duration = 5;
  if (this->_internal_delete_duration() != 0) {
    total_size += 2;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void LoadLimit::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<LoadLimit*>(&to_msg);
  auto& from = static_cast<const LoadLimit&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:common_types.LoadLimit)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_duration_nanoseconds() != 0) {
    _this->_impl_.duration_nanoseconds_ = from._impl_.duration_nanoseconds_;
  }
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_value = from._internal_value();
  ::uint64_t raw_value;
  memcpy(&raw_value, &tmp_value, sizeof(tmp_value));
  if (raw_value != 0) {
    _this->_impl_.value_ = from._impl_.value_;
  }
  if (from._internal_is_changeable() != 0) {
    _this->_impl_.is_changeable_ = from._impl_.is_changeable_;
  }
  if (from._internal_is_active() != 0) {
    _this->_impl_.is_active_ = from._impl_.is_active_;
  }
  if (from._internal_delete_duration() != 0) {
    _this->_impl_.delete_duration_ = from._impl_.delete_duration_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void LoadLimit::CopyFrom(const LoadLimit& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:common_types.LoadLimit)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void LoadLimit::InternalSwap(LoadLimit* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(LoadLimit, _impl_.delete_duration_)
      + sizeof(LoadLimit::_impl_.delete_duration_)
      - PROTOBUF_FIELD_OFFSET(LoadLimit, _impl_.duration_nanoseconds_)>(
          reinterpret_cast<char*>(&_impl_.duration_nanoseconds_),
          reinterpret_cast<char*>(&other->_impl_.duration_nanoseconds_));
}

::google::protobuf::Metadata LoadLimit::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class EntityAddress::_Internal {
 public:
};

EntityAddress::EntityAddress(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:common_types.EntityAddress)
}
inline PROTOBUF_NDEBUG_INLINE EntityAddress::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::common_types::EntityAddress& from_msg)
      : entity_address_{visibility, arena, from.entity_address_},
        _entity_address_cached_byte_size_{0},
        _cached_size_{0} {}

EntityAddress::EntityAddress(
    ::google::protobuf::Arena* arena,
    const EntityAddress& from)
    : ::google::protobuf::Message(arena) {
  EntityAddress* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:common_types.EntityAddress)
}
inline PROTOBUF_NDEBUG_INLINE EntityAddress::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : entity_address_{visibility, arena},
        _entity_address_cached_byte_size_{0},
        _cached_size_{0} {}

inline void EntityAddress::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
EntityAddress::~EntityAddress() {
  // @@protoc_insertion_point(destructor:common_types.EntityAddress)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void EntityAddress::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
EntityAddress::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(EntityAddress, _impl_._cached_size_),
              false,
          },
          &EntityAddress::MergeImpl,
          &EntityAddress::kDescriptorMethods,
          &descriptor_table_common_5ftypes_2ftypes_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> EntityAddress::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_EntityAddress_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::common_types::EntityAddress>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated uint32 entity_address = 1;
    {::_pbi::TcParser::FastV32P1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(EntityAddress, _impl_.entity_address_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated uint32 entity_address = 1;
    {PROTOBUF_FIELD_OFFSET(EntityAddress, _impl_.entity_address_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedUInt32)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void EntityAddress::Clear() {
// @@protoc_insertion_point(message_clear_start:common_types.EntityAddress)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.entity_address_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* EntityAddress::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:common_types.EntityAddress)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated uint32 entity_address = 1;
  {
    int byte_size = _impl_._entity_address_cached_byte_size_.Get();
    if (byte_size > 0) {
      target = stream->WriteUInt32Packed(
          1, _internal_entity_address(), byte_size, target);
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:common_types.EntityAddress)
  return target;
}

::size_t EntityAddress::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:common_types.EntityAddress)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // repeated uint32 entity_address = 1;
  {
    std::size_t data_size = ::_pbi::WireFormatLite::UInt32Size(
        this->_internal_entity_address())
    ;
    _impl_._entity_address_cached_byte_size_.Set(::_pbi::ToCachedSize(data_size));
    std::size_t tag_size = data_size == 0
        ? 0
        : 1 + ::_pbi::WireFormatLite::Int32Size(
                            static_cast<int32_t>(data_size))
    ;
    total_size += tag_size + data_size;
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void EntityAddress::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<EntityAddress*>(&to_msg);
  auto& from = static_cast<const EntityAddress&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:common_types.EntityAddress)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_entity_address()->MergeFrom(from._internal_entity_address());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void EntityAddress::CopyFrom(const EntityAddress& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:common_types.EntityAddress)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void EntityAddress::InternalSwap(EntityAddress* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.entity_address_.InternalSwap(&other->_impl_.entity_address_);
}

::google::protobuf::Metadata EntityAddress::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
LoadLimit CreateLoadLimit(
    int64_t duration_nanoseconds,
    bool is_changeable,
    bool is_active,
    double value,
    bool delete_duration) {
  LoadLimit res;
  res.set_duration_nanoseconds(duration_nanoseconds);
  res.set_is_changeable(is_changeable);
  res.set_is_active(is_active);
  res.set_value(value);
  res.set_delete_duration(delete_duration);
  return res;
}

EntityAddress CreateEntityAddress(
    std::vector<uint32_t> entity_address) {
  EntityAddress res;
  res.mutable_entity_address()->Add(entity_address.begin(), entity_address.end());
  return res;
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace common_types
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_common_5ftypes_2ftypes_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
