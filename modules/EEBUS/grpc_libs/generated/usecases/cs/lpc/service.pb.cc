// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: usecases/cs/lpc/service.proto
// Protobuf C++ Version: 5.27.2

#include "usecases/cs/lpc/service.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace cs_lpc {
}  // namespace cs_lpc
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_usecases_2fcs_2flpc_2fservice_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_usecases_2fcs_2flpc_2fservice_2eproto = nullptr;
const ::uint32_t TableStruct_usecases_2fcs_2flpc_2fservice_2eproto::offsets[1] = {};
static constexpr ::_pbi::MigrationSchema* schemas = nullptr;
static constexpr ::_pb::Message* const* file_default_instances = nullptr;
const char descriptor_table_protodef_usecases_2fcs_2flpc_2fservice_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\035usecases/cs/lpc/service.proto\022\006cs_lpc\032"
    "\036usecases/cs/lpc/messages.proto2\313\013\n\034Cont"
    "rollableSystemLPCControl\022W\n\020ConsumptionL"
    "imit\022\037.cs_lpc.ConsumptionLimitRequest\032 ."
    "cs_lpc.ConsumptionLimitResponse\"\000\022`\n\023Set"
    "ConsumptionLimit\022\".cs_lpc.SetConsumption"
    "LimitRequest\032#.cs_lpc.SetConsumptionLimi"
    "tResponse\"\000\022l\n\027PendingConsumptionLimit\022&"
    ".cs_lpc.PendingConsumptionLimitRequest\032\'"
    ".cs_lpc.PendingConsumptionLimitResponse\""
    "\000\022~\n\035ApproveOrDenyConsumptionLimit\022,.cs_"
    "lpc.ApproveOrDenyConsumptionLimitRequest"
    "\032-.cs_lpc.ApproveOrDenyConsumptionLimitR"
    "esponse\"\000\022\220\001\n#FailsafeConsumptionActiveP"
    "owerLimit\0222.cs_lpc.FailsafeConsumptionAc"
    "tivePowerLimitRequest\0323.cs_lpc.FailsafeC"
    "onsumptionActivePowerLimitResponse\"\000\022\231\001\n"
    "&SetFailsafeConsumptionActivePowerLimit\022"
    "5.cs_lpc.SetFailsafeConsumptionActivePow"
    "erLimitRequest\0326.cs_lpc.SetFailsafeConsu"
    "mptionActivePowerLimitResponse\"\000\022l\n\027Fail"
    "safeDurationMinimum\022&.cs_lpc.FailsafeDur"
    "ationMinimumRequest\032\'.cs_lpc.FailsafeDur"
    "ationMinimumResponse\"\000\022u\n\032SetFailsafeDur"
    "ationMinimum\022).cs_lpc.SetFailsafeDuratio"
    "nMinimumRequest\032*.cs_lpc.SetFailsafeDura"
    "tionMinimumResponse\"\000\022Q\n\016StartHeartbeat\022"
    "\035.cs_lpc.StartHeartbeatRequest\032\036.cs_lpc."
    "StartHeartbeatResponse\"\000\022N\n\rStopHeartbea"
    "t\022\034.cs_lpc.StopHeartbeatRequest\032\035.cs_lpc"
    ".StopHeartbeatResponse\"\000\022r\n\031IsHeartbeatW"
    "ithinDuration\022(.cs_lpc.IsHeartbeatWithin"
    "DurationRequest\032).cs_lpc.IsHeartbeatWith"
    "inDurationResponse\"\000\022f\n\025ConsumptionNomin"
    "alMax\022$.cs_lpc.ConsumptionNominalMaxRequ"
    "est\032%.cs_lpc.ConsumptionNominalMaxRespon"
    "se\"\000\022o\n\030SetConsumptionNominalMax\022\'.cs_lp"
    "c.SetConsumptionNominalMaxRequest\032(.cs_l"
    "pc.SetConsumptionNominalMaxResponse\"\000BAZ"
    "\?github.com/enbility/eebus-grpc-api/rpc_"
    "services/usecases/cs/lpcb\006proto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_usecases_2fcs_2flpc_2fservice_2eproto_deps[1] =
    {
        &::descriptor_table_usecases_2fcs_2flpc_2fmessages_2eproto,
};
static ::absl::once_flag descriptor_table_usecases_2fcs_2flpc_2fservice_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_usecases_2fcs_2flpc_2fservice_2eproto = {
    false,
    false,
    1632,
    descriptor_table_protodef_usecases_2fcs_2flpc_2fservice_2eproto,
    "usecases/cs/lpc/service.proto",
    &descriptor_table_usecases_2fcs_2flpc_2fservice_2eproto_once,
    descriptor_table_usecases_2fcs_2flpc_2fservice_2eproto_deps,
    1,
    0,
    schemas,
    file_default_instances,
    TableStruct_usecases_2fcs_2flpc_2fservice_2eproto::offsets,
    file_level_enum_descriptors_usecases_2fcs_2flpc_2fservice_2eproto,
    file_level_service_descriptors_usecases_2fcs_2flpc_2fservice_2eproto,
};
namespace cs_lpc {
// @@protoc_insertion_point(namespace_scope)
}  // namespace cs_lpc
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_usecases_2fcs_2flpc_2fservice_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
