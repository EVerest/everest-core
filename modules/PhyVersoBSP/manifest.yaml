description: Driver module for Phytec PhyVerso EV Charging controller with Pionix MCU firmware
config:
  serial_port:
    description: Serial port the hardware is connected to
    type: string
    default: /dev/ttyUSB0
  baud_rate:
    description: Serial baud rate to use when communicating with the hardware
    type: integer
    minimum: 9600
    maximum: 230400
    default: 115200
  reset_gpio:
    description: If set <0 it is disabled. If > 0, configured reset_gpio_bank and reset_gpio_pin configuration is used for hard reset of MCU
    type: integer
    minimum: -1
    maximum: 1000
    default: -1
  conn1_max_current_A_import:
    description: Maximum import current in amps
    type: integer
    minimum: 0
    default: 16
  conn1_min_current_A_import:
    description: Minimum import current in amps
    type: integer
    minimum: 0
    default: 6
  conn1_min_phase_count_import:
    description: Minimum phase count for import
    type: integer
    minimum: 1
    maximum: 3
    default: 3
  conn1_max_phase_count_import:
    description: Maximum phase count for import
    type: integer
    minimum: 1
    maximum: 3
    default: 3
  conn1_min_current_A_export:
    description: Minimum export current in amps
    type: integer
    minimum: 0
    maximum: 63
    default: 0
  conn1_max_current_A_export:
    description: Maximum export current in amps
    type: integer
    minimum: 0
    maximum: 63
    default: 0
  conn1_min_phase_count_export:
    description: Minimum phase count for export
    type: integer
    minimum: 1
    maximum: 3
    default: 3
  conn1_max_phase_count_export:
    description: Maximum phase count for export
    type: integer
    minimum: 1
    maximum: 3
    default: 3
  conn1_has_socket:
    description: Set to true if it has a socket, false if it has a permanently attached cable
    type: boolean
    default: false
  conn1_dc:
    description: Set to true if it is for DC, false if it is AC
    type: boolean
    default: false
  conn2_max_current_A_import:
    description: Maximum import current in amps
    type: integer
    minimum: 0
    default: 16
  conn2_min_current_A_import:
    description: Minimum import current in amps
    type: integer
    minimum: 0
    default: 6
  conn2_min_phase_count_import:
    description: Minimum phase count for import
    type: integer
    minimum: 1
    maximum: 3
    default: 3
  conn2_max_phase_count_import:
    description: Maximum phase count for import
    type: integer
    minimum: 1
    maximum: 3
    default: 3
  conn2_min_current_A_export:
    description: Minimum export current in amps
    type: integer
    minimum: 0
    maximum: 63
    default: 0
  conn2_max_current_A_export:
    description: Maximum export current in amps
    type: integer
    minimum: 0
    maximum: 63
    default: 0
  conn2_min_phase_count_export:
    description: Minimum phase count for export
    type: integer
    minimum: 1
    maximum: 3
    default: 3
  conn2_max_phase_count_export:
    description: Maximum phase count for export
    type: integer
    minimum: 1
    maximum: 3
    default: 3
  conn2_has_socket:
    description: Set to true if it has a socket, false if it has a permanently attached cable
    type: boolean
    default: false
  conn2_dc:
    description: Set to true if it is for DC, false if it is AC
    type: boolean
    default: false
  reset_gpio_bank:
    description: GPIO peripheral bank the nRST pin of the MCU is mapped to
    type: integer
    default: 1
  reset_gpio_pin:
    description: GPIO peripheral pin the nRST pin of the MCU is mapped to
    type: integer
    default: 23
  conn1_motor_lock_type:
    description: Connector 1 motor lock type; 1 == Hella Style time-based lock, 2 == Valeo potentiometer feedback based
    type: integer
    default: 2
  conn2_motor_lock_type:
    description: Connector 2 motor lock type; 1 == Hella Style time-based lock, 2 == Valeo potentiometer feedback based
    type: integer
    default: 2
  conn1_gpio_stop_button_enabled:
    description: Set to true to enable external charging stop button for connector 1 on a GPIO connected to the SOM
    type: boolean
    default: false
  conn1_gpio_stop_button_bank:
    description: GPIO peripheral bank for connector 1 stop button
    type: string
    default: gpiochip1
  conn1_gpio_stop_button_pin:
    description: GPIO peripheral pin for connector 1 stop button
    type: integer
    default: 36
  conn1_gpio_stop_button_invert:
    description: Set to true to invert pin logic
    type: boolean
    default: false
  conn2_gpio_stop_button_enabled:
    description: Set to true to enable external charging stop button for connector 2 on a GPIO connected to the SOM
    type: boolean
    default: false
  conn2_gpio_stop_button_bank:
    description: GPIO peripheral bank for connector 2 stop button
    type: string
    default: gpiochip1
  conn2_gpio_stop_button_pin:
    description: GPIO peripheral pin for connector 2 stop button
    type: integer
    default: 37
  conn2_gpio_stop_button_invert:
    description: Set to true to invert pin logic
    type: boolean
    default: false
provides:
  connector_1:
    interface: evse_board_support
    description: provides the board support interface to low level control the proximity and control pilots, relais and motor lock
  connector_2:
    interface: evse_board_support
    description: provides the board support interface to low level control the proximity and control pilots, relais and motor lock
  rcd_1:
    interface: ac_rcd
    description: RCD interface of the onboard RCD
  rcd_2:
    interface: ac_rcd
    description: RCD interface of the onboard RCD
  connector_lock_1:
    interface: connector_lock
    description: Lock interface
  connector_lock_2:
    interface: connector_lock
    description: Lock interface
  phyverso_mcu_temperature:
    interface: phyverso_mcu_temperature
    description: Temperatures from MCU
  system_specific_data_1:
    interface: generic_array
    description: Opaque data blobs coming from connector 1
  system_specific_data_2:
    interface: generic_array
    description: Opaque data blobs coming from connector 2
  led_driver_1:
    interface: led_driver
    description: LED interface for connector 1
  led_driver_2:
    interface: led_driver
    description: LED interface for connector 2
enable_external_mqtt: true
enable_telemetry: true
metadata:
  license: https://opensource.org/licenses/Apache-2.0
  authors:
    - Cornelius Claussen

