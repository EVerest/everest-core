name: Build, Lint and Test
on:
  pull_request: {}
  workflow_dispatch:
    inputs:
      runner:
        description: Which runner to use
        type: choice
        default: 'ubuntu-22.04'
        required: true
        options:
          - 'ubuntu-22.04'
          - 'large-ubuntu-22.04-xxl'
  schedule:
    - cron: '37 13,1 * * *'

jobs:
  ci:
    name: Build, Lint and Test
    uses: everest/everest-ci/.github/workflows/continuous_integration.yml@v1.4.4
    permissions:
      contents: read
    secrets:
      coverage_deploy_token: ${{ secrets.SA_GITHUB_PAT }}
    with:
      runner: ${{ inputs.runner || 'ubuntu-22.04' }}
      artifact_deploy_target_repo: EVerest/everest.github.io
      run_coverage: false
      do_not_run_coverage_badge_creation: true
      run_install_wheels: true
      run_integration_tests: true
  ocpp-tests:
    name: OCPP Tests
    needs:
      - ci
    runs-on: ${{ inputs.runner || 'ubuntu-22.04' }}
    steps:
      - name: Download dist dir
        uses: actions/download-artifact@v4.1.8
        with:
          name: dist
      - name: Extract dist.tar.gz
        run: |
          tar -xzf ${{ github.workspace }}/dist.tar.gz -C ${{ github.workspace }}
      - name: Download wheels
        # if: ${{ inputs.run_install_wheels == 'true' }}
        uses: actions/download-artifact@v4.1.8
        with:
          name: wheels
          path: wheels
      - name: Checkout repository
        uses: actions/checkout@v4.2.2
        with:
          path: source
      - name: Setup run scripts
        run: |
          mkdir scripts
          rsync -a source/.ci/build-kit/scripts/ scripts
      - name: Docker Meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.BUILD_KIT_IMAGE_NAME }}
          sep-tags: ","
      - name: Set output tag
        id: buildkit_tag
        shell: python3 {0}
        run: |
          import os
          tags = "${{ steps.meta.outputs.tags }}".split(",")
          if len(tags) == 0:
            print("No tags found!‚ùå")
            exit(1)
          tag = f"local/build-kit-everest-core:{tags[0]}"
          with open(os.environ["GITHUB_OUTPUT"], "a") as f:
            f.write(f"tag={tag}\n")
            print(f"Set tag={tag}")
      - name: Download build-kit image
        uses: actions/download-artifact@v4
        with:
          name: build-kit
      - name: Load build-kit image
        run: |
          docker load -i build-kit.tar
          docker image tag ${{ steps.buildkit_tag.outputs.tag }} build-kit
      - name: Create integration-image
        run: |
          docker run \
          --volume "${{ github.workspace }}:/ext" \
          --name integration-container \
          build-kit run-script create_ocpp_tests_image
          docker commit integration-container integration-image
      - name: Run OCPP tests
        id: run_ocpp_tests
        continue-on-error: true
        run: |
          docker compose \
          -f source/.ci/e2e/docker-compose.yaml \
          run \
          e2e-test-server \
          run-script run_ocpp_tests
      - name: Upload result and report as artifact
        continue-on-error: true
        if: ${{ steps.run_ocpp_tests.outcome == 'success' || steps.run_ocpp_tests.outcome == 'failure' }}
        uses: actions/upload-artifact@v4.4.3
        with:
          if-no-files-found: error
          name: ocpp-tests-report
          path: |
            ocpp-tests-result.xml
            ocpp-tests-report.html
      - name: Render OCPP tests result
        if: ${{ steps.run_ocpp_tests.outcome == 'success' || steps.run_ocpp_tests.outcome == 'failure' }}
        uses: pmeier/pytest-results-action@v0.7.1
        with:
          path: ocpp-tests-result.xml
          summary: True
          display-options: fEX
          fail-on-empty: True
          title: Test results
      - name: Check if OCPP tests failed
        if: ${{ steps.run_ocpp_tests.outcome == 'failure' }}
        run: exit 1
