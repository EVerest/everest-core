{
    "description": "This interface provides multiplexed access to one serial port (e.g. RS485) for multiple clients.",
    "cmds": {
        "send_raw": {
            "description": "Send a (user-defined, pre-structured) command via serial interface to the target hardware",
            "arguments": {
                "target_device_id": {
                    "description": "ID (1 byte) of the device to send the commands to",
                    "type": "integer",
                    "minimum": 0,
                    "maximum": 255
                },
                "data_raw": {
                    "description": "Data content (raw data bytes) to be sent to the target. User must take care of correct structure.",
                    "type": "object",
                    "$ref": "/serial_comm_hub_requests#/VectorUint8"
                },
                "add_crc16": {
                    "description": "Add a CRC16 at the end of the message (true) or not (false)",
                    "type": "boolean"
                }
            },
            "result": {
                "description": "Status code of the transfer",
                "type": "string",
                "$ref": "/serial_comm_hub_requests#/StatusCodeEnum"
            }
        },
        "send_raw_wait_reply": {
            "description": "Send a (user-defined, pre-structured) command via serial interface to the target hardware and wait for a reply",
            "arguments": {
                "target_device_id": {
                    "description": "ID (1 byte) of the device to send the commands to",
                    "type": "integer",
                    "minimum": 0,
                    "maximum": 255
                },
                "data_raw": {
                    "description": "Data content (raw data bytes) to be sent to the target. User must take care of correct structure.",
                    "type": "object",
                    "$ref": "/serial_comm_hub_requests#/VectorUint8"
                },
                "add_crc16": {
                    "description": "Add a CRC16 at the end of the message (true) or not (false)",
                    "type": "boolean"
                }
            },
            "result": {
                "description": "Result of the transfer",
                "type": "object",
                "$ref": "/serial_comm_hub_requests#/ResultRaw"
            }
        },
        "modbus_read_holding_registers": {
            "description": "Send a Modbus RTU 'read holding registers' command via serial interface to the target hardware. (return value: response)",
            "arguments": {
                "target_device_id": {
                    "description": "ID (1 byte) of the device to send the commands to",
                    "type": "integer",
                    "minimum": 0,
                    "maximum": 255
                },
                "first_register_address": {
                    "description": "Start address for read operation (16 bit address)",
                    "type": "integer",
                    "minimum": 0,
                    "maximum": 65535
                },
                "num_registers_to_read": {
                    "description": "Number of registers to read (16 bit each)",
                    "type": "integer",
                    "minimum": 1
                }
            },
            "result": {
                "description": "Result of the transfer",
                "type": "object",
                "$ref": "/serial_comm_hub_requests#/Result"
            }
        },
        "modbus_write_multiple_registers": {
            "description": "Send a Modbus RTU 'write multiple registers' command via serial interface to the target hardware. (return value: response)",
            "arguments": {
                "target_device_id": {
                    "description": "ID (1 byte) of the device to send the commands to",
                    "type": "integer",
                    "minimum": 0,
                    "maximum": 255
                },
                "first_register_address": {
                    "description": "Start address for write operation (16 bit address)",
                    "type": "integer",
                    "minimum": 0,
                    "maximum": 65535
                },
                "data_raw": {
                    "description": "Data content to be written to the above selected registers (in 16 bit words)",
                    "type": "object",
                    "$ref": "/serial_comm_hub_requests#/VectorUint16"
                }
            },
            "result": {
                "description": "Status code of the transfer",
                "type": "string",
                "$ref": "/serial_comm_hub_requests#/StatusCodeEnum"
            }
        }
    }
}
