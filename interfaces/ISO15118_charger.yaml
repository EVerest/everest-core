description: This interface defines a ISO15118 charger.
cmds:
# Setup the module
  setup:
    description: At startup all necessary info should be sent to the module once.
    arguments:
      evse_id:
        description: >-
          Set an ID that uniquely identifies the EVSE and the power outlet the
          vehicle is connected to 
        type: object
        $ref: /iso15118_charger#/EVSEID
      supported_energy_transfer_modes:
        description: Available energy transfer modes supported by the EVSE
        type: array
        items:
          description: The different energy modes supported by the SECC
          type: string
          $ref: /iso15118_charger#/EnergyTransferMode
        minItems: 1
        maxItems: 6
      sae_j2847_mode:
        description: Charger is supporting SAE J2847 V2G/V2H version
        type: string
        $ref: /iso15118_charger#/SaeJ2847BidiMode
      debug_mode:
        description: Enable/Disable debug mode
        type: boolean
  set_charging_parameters:
    description: >-
      At startup, set the the charging parameters at least once. May be updated later on.
      If a charging session is currently active, some updated values may only be used for the next charging session.
    arguments:
      physical_values:
        description: Set up initial physical values for a AC or DC charging session
        type: object
        $ref: /iso15118_charger#/SetupPhysicalValues
  session_setup:
    description: At each session start this info should be sent to the module.
    arguments:
      payment_options:
        description: Providing a list of payment options to the EVCC
        type: array
        items:
          description: These are the payment options a SECC offers to the EVCC
          type: string
          $ref: /iso15118_charger#/PaymentOption
        minItems: 1
        maxItems: 2
      supported_certificate_service:
        description: >-
          The charger supports the certificate installation/update service and has a
          connection to an SA for this purpose
        type: boolean
# Response messages to vars:
  certificate_response:
    description: >-
      This message is an async response to a previously published certificate_request.
      The new/updated Contract Certificate (including the certificate chain) and the
      corresponding encrypted private key are sent via the SECC to the EVCC.
    arguments:
      exi_stream_status:
        description: The response raw EXI stream and the status from the CSMS
        type: object
        $ref: /iso15118_charger#/ResponseExiStreamStatus
  authorization_response:
    description: >-
      This message is an async response to a previously published require_auth_eim
      or require_auth_pnc. The SECC informs the EVCC whether the authorization
      is accecpted or not.
    arguments:
      authorization_status:
        description: Authorization status of the ID Token
        type: string
        $ref: /authorization#/AuthorizationStatus
      certificate_status:
        description: Certificate status information
        type: string
        $ref: /authorization#/CertificateStatus
  ac_contactor_closed:
    description: >-
      This message is an async response to a previously published ac_close_contactor
      or ac_open_contactor.
    arguments:
      status:
        description: Set to true when contactor is closed, false when contactor is open
        type: boolean
# Events 
  dlink_ready:
    description: >-
      Signals dlink_ready from SLAC layer according to ISO15118-3
    arguments:
      value:
        description: >-
          Set to true when link becomes ready, false when the link is terminated
        type: boolean
  cable_check_finished:
    description: >-
      Cable check is finished, voltage is under 20V and insulation resistor
      on the cable is alright
    arguments:
      status:
        description: Set to true when cable check is okay
        type: boolean
  receipt_is_required:
    description: >-
      This element is used by the SECC to indicate that the EVCC is required
      to send a MeteringReceiptReq message for the purpose of signing the
      meter info record.
    arguments:
      receipt_required:
        description: >-
          Set to true when receipt is required, set to false when not
        type: boolean
  stop_charging:
    description: Stops the charging process
    arguments:
      stop:
        description: Set to true when to stop, set to false when to continue
        type: boolean
# Update physical values
  update_ac_max_current:
    description: Update the maximum allowed line current restriction per phase. Call at least once during start up.
    arguments:
      max_current:
        description: Max current in A
        type: number
        minimum: 0
        maximum: 400
  update_dc_maximum_limits:
    description: Update the maximum limits. Call at least once during start up.
    arguments:
      maximum_limits:
        description: Maximum values (current, power and voltage) the EVSE can deliver
        type: object
        $ref: /iso15118_charger#/DcEvseMaximumLimits
  update_dc_minimum_limits:
    description: Update the minimum limits. Call at least once during start up.
    arguments:
      minimum_limits:
        description: Minimum values (current and voltage) the EVSE can deliver
        type: object
        $ref: /iso15118_charger#/DcEvseMinimumLimits
  update_isolation_status:
    description: Update the isolation condition 
    arguments:
      isolation_status:
        description: Result of the isolation monitoring
        type: string
        $ref: /iso15118_charger#/IsolationStatus
  update_dc_present_values:
    description: Update the present values from the DC powersupply
    arguments:
      present_voltage_current:
        description: Present voltage and current
        type: object
        $ref: /iso15118_charger#/DcEvsePresentVoltageCurrent
  update_meter_info:
    description: Update meter info
    arguments:
      powermeter:
        description: >-
          Includes the meterInfo record containing the latest meter reading
          and other meter relevant data
        type: object
        $ref: /powermeter#/Powermeter
# Error handling
  send_error:
    description: An error has happend. Send this error to inform the EV.
    arguments:
      error:
        description: The EVSE error enum
        type: string
        $ref: /iso15118_charger#/EvseError
  reset_error:
    description: Reset all errors
vars:
  require_auth_eim:
    description: An EIM authorization is requiered
    type: "null"
  require_auth_pnc:
    description: >- 
      The EVCC provides the payment details for a PnC authorization by sending
      the signature certificate chain and eMAID.
    type: object
    $ref: /authorization#/ProvidedIdToken
  ac_close_contactor:
    description: The contactor should be closed
    type: "null"
  ac_open_contactor:
    description: The contactor should be opened
    type: "null"
  start_cable_check:
    description: The charger should now start a cable check
    type: "null"
  start_pre_charge:
    description: The charger should now start the pre charge phase
    type: "null"
  dc_open_contactor:
    description: The contactor should be opened
    type: "null"
  v2g_setup_finished:
    description: >-
      v2g_setup_finished from ISO15118-3. Trigger when EV sends a PowerDeliveryReq
      message with ChargeProgess equals Start or Stop
    type: "null"
  current_demand_started:
    description: The charging process has started and the EV wants to be charged
    type: "null"
  current_demand_finished:
    description: The charging process was finished
    type: "null"
  sae_bidi_mode_active:
      description: The SAE J2847 bidi mode is active
      type: "null"
  evcc_id:
    description:
      Specifies the EVs identification in a readable format. It contains
      the MAC address of the EVCC in uppercase
    type: string
    pattern: ^[A-F0-9]{2}(:[A-F0-9]{2}){5}$
  selected_payment_option:
    description: This element is used for indicating the payment type
    type: string
    $ref: /iso15118_charger#/PaymentOption
  requested_energy_transfer_mode:
    description:
      Selected energy transfer mode for charging that is requested by the
      EVCC.
    type: string
    $ref: /iso15118_charger#/EnergyTransferMode
  departure_time:
    description: >-
      Optional: [RFC3339 UTC] This element is used to indicate when the
      vehicle intends to finish the charging process
    type: string
    format: date-time
  ac_eamount:
    description: >-
      [Wh] Amount of energy reflecting the EV's estimate how much energy
      is needed to fulfill the user configured charging goal for the current charging
      session
    type: number
    minimum: 0
    maximum: 200000
  ac_ev_max_voltage:
    description: >-
      [V] The RMS of the maximal nominal voltage the vehicle can accept,
      measured between one phase and neutral
    type: number
    minimum: 0
    maximum: 1000
  ac_ev_max_current:
    description: "[A] Maximum current supported by the EV per phase"
    type: number
    minimum: 0
    maximum: 400
  ac_ev_min_current:
    description: >-
      [A] EVMinCurrent is used to indicate to the SECC that charging below
      this minimum is not energy/cost efficient for the EV
    type: number
    minimum: 0
    maximum: 400
  dc_ev_energy_capacity:
    description: "Optional: [Wh] Energy capacity of the EV"
    type: number
    minimum: 0
    maximum: 200000
  dc_ev_energy_request:
    description: "Optional: [Wh] Amount of energy the EV requests from the EVSE"
    type: number
    minimum: 0
    maximum: 200000
  dc_full_soc:
    description: >-
      Optional: [%] SOC at which the EV considers the battery to be fully
      charged
    type: number
    minimum: 0
    maximum: 100
  dc_bulk_soc:
    description: >-
      Optional: [%] SOC at which the EV considers a fast charge process
      to end
    type: number
    minimum: 0
    maximum: 100
  dc_ev_status:
    description: Current status of the EV
    type: object
    $ref: /iso15118_charger#/DcEvStatus
  dc_bulk_charging_complete:
    description: >-
      Optional: If set to TRUE, the EV indicates that bulk charge (approx.
      80% SOC) is complete
    type: boolean
  dc_charging_complete:
    description: >-
      Optional: If set to TRUE, the EV indicates that full charge (100%
      SOC) is complete
    type: boolean
  dc_ev_target_voltage_current:
    description: Target voltage and current requested by the EV
    type: object
    $ref: /iso15118_charger#/DcEvTargetValues
  dc_ev_maximum_limits:
    description:
      Maximum Values (current, power and voltage) supported and allowed
      by the EV
    type: object
    $ref: /iso15118_charger#/DcEvMaximumLimits
  dc_ev_remaining_time:
    description: Estimated or calculated time until bulk and full charge is complete
    type: object
    $ref: /iso15118_charger#/DcEvRemainingTime
  certificate_request:
    description: >-
      The vehicle requests the SECC to deliver the certificate that belong 
      to the currently valid contract of the vehicle.
      Response will be reported async via  set_Get_Certificate_Response
    type: object
    $ref: /iso15118_charger#/RequestExiStreamSchema
  dlink_terminate:
    description: Terminate the data link and become UNMATCHED.
    type: "null"
  dlink_error:
    description: Terminate the data link and restart the matching process.
    type: "null"
  dlink_pause:
    description: Request power saving mode, while staying MATCHED.
    type: "null"
  ev_app_protocol:
    description: >-
      Debug_Lite - This request message provides a list of charging protocols
      supported by the EVCC
    type: object
    $ref: /iso15118_charger#/AppProtocols
  v2g_messages:
    description: >-
      Debug - This element contains all V2G elements and should be used
      for debug purposes only
    type: object
    $ref: /iso15118_charger#/V2gMessages
  selected_protocol:
    description: >-
      Debug - Contains the selected protocol
    type: string
