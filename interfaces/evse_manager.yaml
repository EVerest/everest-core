description: >-
  This interface defines the evse manager. An evse manager represents the
  charging kernel of one physical connector.
cmds:
  get_evse:
    description: Call to get information about the EVSE including its connectors
    result:
      description: Object that contains information of the EVSE including its connectors
      type: object
      $ref: /evse_manager#/Evse
  enable_disable:
    description: Enables or disables the evse. Turns off PWM with error F. Charging is only possible if an EVSE is enabled.
    arguments:
      connector_id:
        description: Specifies the ID of the connector to enable. If 0, the whole EVSE should be enabled
        type: integer
      cmd_source:
        description: Source of the enable command
        type: object
        $ref: /evse_manager#/EnableDisableSource
    result:
      description: >-
        Returns true if evse is enabled after the command, false if it is disabled.
        This may not be the same value as the request, since there may be a higher priority request
        from another source that is actually deciding whether it is enabled or disabled.
      type: boolean
  authorize_response:
    description: >-
      Reports the result of an authorization request to the EvseManager. 
      Contains the provided_token for which authorization was requested and
      the validation_result
    arguments:
      provided_token:
        description: The token for which authorization was requested
        type: object
        $ref: /authorization#/ProvidedIdToken
      validation_result:
        description: The validation result
        type: object
        $ref: /authorization#/ValidationResult
  withdraw_authorization:
    description: >-
      Call to signals that EVSE is not further authorized to start a transaction
      (e.g. on a connection_timeout)
  reserve:
    description: >-
      Call to signal that EVSE is reserved. This can be used to e.g. change
      the color of the HMI LEDs to indicate reservation.
    arguments:
      reservation_id:
        description: >-
          The reservation id (should be added to the TransactionStarted
          event)
        type: integer
    result:
      description: Returns true if the EVSE accepted the reservation, else false.
      type: boolean
  cancel_reservation:
    description: Call to signal that EVSE is not reserved anymore
  set_faulted:
    description: >-
      Sets the evse manager to faulted externally. It may also switch to
      faulted itself if it detects an internal error.
  pause_charging:
    description: Call to signal EVSE to pause charging
    result:
      description: >-
        Returns true if successfully paused or was already in paused_by_evse
        mode
      type: boolean
  resume_charging:
    description: Call to signal EVSE to resume charging
    result:
      description: >-
        Returns true if resume was successful, false otherwise (e.g. resuming
        a car pause won't work)
      type: boolean
  stop_transaction:
    description: >-
      Stops transaction and cancels charging externally, charging can only
      be resumed by replugging car. EVSE will also stop transaction automatically
      e.g. on disconnect, so this only needs to be called if the transaction should
      end before.
    arguments:
      request:
        description: Request to stop the transaction.
        type: object
        $ref: /evse_manager#/StopTransactionRequest
    result:
      description: Returns true if successful
      type: boolean
  force_unlock:
    description: >-
      Forces connector to unlock connector now. During normal operation, connector
      will be locked/unlocked in the correct sequence. Do not use this function except
      if explicitly requested by e.g. management cloud.
    arguments:
      connector_id:
        description: Specifies the ID of the connector that should be unlocked
        type: integer
    result:
      description: Returns true if unlocking sequence was successfully executed
      type: boolean
  set_external_limits:
    description: Set additional external energy flow limits at this node.
    arguments:
      value:
        description: UUID of node that this limit applies to
        type: object
        $ref: /energy#/ExternalLimits
  set_get_certificate_response:
    description: >-
      CertificateInstallationRes/CertificateUpdateRes - Set the new/updated Contract Certificate (including the certificate chain)
      and the corresponding encrypted private key. Should be forwared to EVCC.
      This is an async response to a previously published iso15118_certificate_request
    arguments:
      certificate_response:
        description: The response raw exi stream and the status from the CSMS system
        type: object
        $ref: /iso15118_charger#/Response_Exi_Stream_Status
  external_ready_to_start_charging:
    description: >-
      There are situations where another module needs to do some initialization after evse manager is in principle ready to start charging.
      This command can be used (optimally in combination with a configuration option) to delay charging ready until the external module is done with its initialization
    result:
      description: Returns true if the signal was used by the evse manager implementation
      type: boolean
vars:
  session_event:
    description: Emits all events related to sessions
    type: object
    $ref: /evse_manager#/SessionEvent
  limits:
    description: Limits of this evse, published on change
    type: object
    $ref: /evse_manager#/Limits
  ev_info:
    description: More details about the EV if available
    type: object
    $ref: /evse_manager#/EVInfo
  car_manufacturer:
    description: Car manufacturer (if known)
    type: string
    $ref: /evse_manager#/CarManufacturer
  telemetry:
    description: Other telemetry
    type: object
    $ref: /evse_board_support#/Telemetry
  powermeter:
    description: Measured dataset
    type: object
    $ref: /powermeter#/Powermeter
  evse_id:
    description: EVSE ID including the connector number, e.g. DE*PNX*E123456*1
    type: string
  hw_capabilities:
    description: "Hardware capability/limits"
    type: object
    $ref: /evse_board_support#/HardwareCapabilities
  iso15118_certificate_request:
    description: >-
      The vehicle requests the SECC to deliver the certificate that belong 
      to the currently valid contract of the vehicle.
      Response will be reported async via  set_get_certificate_response
    type: object
    $ref: /iso15118_charger#/Request_Exi_Stream_Schema
  enforced_limits:
    description: Enforced limits for this node (coming from the EnergyManager)
    type: object
    $ref: /energy#/EnforcedLimits
  waiting_for_external_ready:
    description: >-
      Signals that the EVSE Manager is in principle ready to start charging,
      but delays sending its ready signal waiting for the external_ready_to_start_charging command.
    type: boolean
  ready:
    description: Signals that the EVSE Manager is ready to start charging
    type: boolean
  selected_protocol:
    description: >-
      Contains the selected protocol used for charging for informative purposes
    type: string
errors:
  - reference: /errors/evse_manager