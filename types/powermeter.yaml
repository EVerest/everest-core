description: Powermeter types
types:
  TransactionReq:
    description: Required input parameter for starting an OCMF transaction. These values will be included in the signed OCMF packet.
    type: object
    additionalProperties: false
    required:
      - evse_id
      - transaction_id
      - client_id
      - tariff_id
      - cable_id
      - user_data
    properties:
      evse_id:
        description: Id of this EVSE
        type: string
      transaction_id:
        description: OCPP transaction UUID
        type: string
      client_id:
        description: User identification means, e.g. RFID card ID
        type: string
      tariff_id:
        description: Tariff ID
        type: integer
      cable_id:
        description: Cable ID
        type: integer
      user_data:
        description: User data
        type: string
  TransactionRequestStatus:
    description: Status of a transaction start or stop request.
    type: string
    enum:
        - OK
        - NOT_SUPPORTED
        - UNEXPECTED_ERROR
  TransactionStartResponse:
    description: Return value when a transaction is started.
    type: object
    additionalProperties: false
    required:
      - status
    properties:
      status:
        type: object
        description: Response status that indicates whether the transaction start request could successfully be performed.
        $ref: /powermeter#/TransactionRequestStatus
      error:
        description: If status is not OK, a verbose error message.
        type: string
      transaction_min_stop_time:
        description: Earliest point in time the started transaction can be stopped again (if a minimum duration is required by the meter); yields a RFC3339 timestamp.
        type: string
        format: date-time
      transaction_max_stop_time:
        description:  Deadline for the transaction to be stopped again (if a minimum duration is required by the meter); yields a RFC3339 timestamp.
        type: string
        format: date-time
  TransactionStopResponse:
    description: Report returned when a signed transaction is requested to stop. If successful, includes the signed meter value object. In case of an error, an additional error message can be provided.
    type: object
    additionalProperties: false
    required:
      - status
    properties:
      status:
        type: object
        description: Response status that indicates whether the transaction stop request could successfully be performed.
        $ref: /powermeter#/TransactionRequestStatus
      start_signed_meter_value:
        description: The signed meter value report for start of transaction. Needs to be filled if meter provides separate values for start and stop.
        type: object
        $ref: /units_signed#/SignedMeterValue
      signed_meter_value:
        description: The signed meter value report of the stopped transaction. Must be provided if status is OK.
        type: object
        $ref: /units_signed#/SignedMeterValue
      error:
        description: If status is not OK, a verbose error message.
        type: string
  Powermeter:
    description: Measured dataset (AC or DC)
    type: object
    additionalProperties: false
    required:
      - timestamp
      - energy_Wh_import
    properties:
      timestamp:
        description: Timestamp of measurement
        type: string
        format: date-time
      meter_id:
        description: A (user defined) meter if (e.g. id printed on the case)
        type: string
      phase_seq_error:
        description: "AC only: true for 3 phase rotation error (ccw)"
        type: boolean
      energy_Wh_import:
        description: Imported energy in Wh (from grid)
        type: object
        $ref: /units#/Energy
      energy_Wh_export:
        description: Exported energy in Wh (to grid)
        type: object
        $ref: /units#/Energy
      power_W:
        description:
          Instantaneous power in Watt. Negative values are exported, positive
          values imported Energy.
        type: object
        $ref: /units#/Power
      voltage_V:
        description: Voltage in Volts
        type: object
        $ref: /units#/Voltage
      VAR:
        description: Reactive power VAR
        type: object
        $ref: /units#/ReactivePower
      current_A:
        description: Current in ampere
        type: object
        $ref: /units#/Current
      frequency_Hz:
        description: Grid frequency in Hertz
        type: object
        $ref: /units#/Frequency
      # Extension for individual signed meter values
      energy_Wh_import_signed:
        description: Imported energy in Wh (from grid)
        type: object
        $ref: /units_signed#/Energy
      energy_Wh_export_signed:
        description: Exported energy in Wh (to grid)
        type: object
        $ref: /units_signed#/Energy
      power_W_signed:
        description:
          Instantaneous power in Watt. Negative values are exported, positive
          values imported Energy.
        type: object
        $ref: /units_signed#/Power
      voltage_V_signed:
        description: Voltage in Volts
        type: object
        $ref: /units_signed#/Voltage
      VAR_signed:
        description: Reactive power VAR
        type: object
        $ref: /units_signed#/ReactivePower
      current_A_signed:
        description: Current in ampere
        type: object
        $ref: /units_signed#/Current
      frequency_Hz_signed:
        description: Grid frequency in Hertz
        type: object
        $ref: /units_signed#/Frequency
      signed_meter_value:
        description: >-
          Signed collection of instantaneous meter values if supported by the meter.
          This is intended for meters that only support signing a collection of meter values.
        type: object
        $ref: /units_signed#/SignedMeterValue
