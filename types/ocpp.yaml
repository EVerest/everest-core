description: >-
  OCPP types (OCPP1.6 and OCPP2.0.1). The types are based more on the type definitions of OCPP201,
  as these offer more flexibility and are easier to transfer to OCPP1.6 than vice versa.
types:
  CustomData:
    description: Custom data extension
    required:
      - vendor_id
      - data
    type: object
    properties:
      vendor_id:
        description: Vendor Id to identify the customization, this is also included in the data field and only reproduced for convenience
        type: string
      data:
        description: Custom json data object encoded as string
        type: string
  ChargingSchedulePeriod:
    description: >-
      Element providing information on a charging schedule period.
    type: object
    required:
      - start_period
      - limit
    properties:
      start_period:
        type: integer
      limit:
        type: number
      number_phases:
        type: integer
      stack_level:
        type: integer
      phase_to_use:
        type: integer
  ChargingSchedule:
    description: >-
      Element providing information on an OCPP charging schedule.
    type: object
    required:
      - evse
      - charging_rate_unit
      - charging_schedule_period
    properties:
      evse:
        description: The OCPP 2.0.1 EVSE ID (not used in OCPP 1.6).
        type: integer
        minimum: 0
      charging_rate_unit:
        type: string
      charging_schedule_period:
        type: array
        items:
          description: schedule periods
          type: object
          $ref: /ocpp#/ChargingSchedulePeriod
      duration:
        type: integer
      start_schedule:
        type: string
      min_charging_rate:
        type: number
  ChargingSchedules:
    description: schedules for connectors
    type: object
    required:
      - schedules
    properties:
      schedules:
        description: array of schedules
        type: array
        items:
          description: schedule for a connector
          type: object
          $ref: /ocpp#/ChargingSchedule
  EVSE:
    description: >-
      Type of an EVSE. If only the id is present, this type identifies an EVSE.
      If also a connector_id is given, this type identifies a Connector of the EVSE
    type: object
    required:
      - id
    properties:
      id:
        description: Id of the EVSE
        type: integer
        minimum: 1
      connector_id:
        description: An id to designate a specific connector (on an EVSE) by connector index number
        type: integer
        minimum: 1
  OcppTransactionEvent:
    description: >-
      Element providing information on OCPP transactions.
    type: object
    required:
      - transaction_event
      - session_id
    properties:
      transaction_event:
        description: >-
          The transaction related event.
        type: string
        $ref: /ocpp#/TransactionEvent
      evse:
        description: >-
          The OCPP 2.0.1 EVSE associated with the transaction.
        type: object
        $ref: /ocpp#/EVSE
      session_id:
        description: >-
          The EVSE manager assigned session ID.
        type: string
      transaction_id:
        description: >-
          The CSMS assigned transaction ID. A string is used to support OCPP 2.0.1. For OCPP 1.6 the integer is converted to a string
        type: string
  TransactionEvent:
    description: The transaction event enumeration
    type: string
    enum:
      - Started
      - Updated
      - Ended
  OcppTransactionEventResponse:
    description: Information that can be returned with a OCPP TransactionEventResponse
    type: object
    required:
      - original_transaction_event
    properties:
      original_transaction_event:
        description: The original transaction event that promted this response
        type: object
        $ref: /ocpp#/OcppTransactionEvent
      total_cost:
        description: Running or total cost
        type: number
      charging_priority:
        description: Priority from -9 to 9 for smart charging, higher values mean higher priority
        type: integer
      personal_message:
        description: Personal message
        type: object
        $ref: /display_message#/MessageContent
  DataTransferStatus:
    description: Data Transfer Status enum
    type: string
    enum:
      - Accepted
      - Rejected
      - UnknownMessageId
      - UnknownVendorId
      - Offline
  DataTransferRequest:
    description: Type for data transfer request provided by OCPP
    type: object
    additionalProperties: false
    required:
      - vendor_id
    properties:
      vendor_id:
        description: Identifies the vendor
        type: string
      message_id:
        description: Identifies the message
        type: string
      data:
        description: Data provided by this data transfer
        type: string
      custom_data:
        description: Custom data extension
        type: object
        $ref: /ocpp#/CustomData
  DataTransferResponse:
    description: Type for data transfer response provided by OCPP
    type: object
    additionalProperties: false
    required:
      - status
    properties:
      status:
        description: Status of the data transfer
        type: string
        $ref: /ocpp#/DataTransferStatus
      data:
        description: Data provided by this data transfer
        type: string
      custom_data:
        description: Custom data extension
        type: object
        $ref: /ocpp#/CustomData
  KeyValue:
    description: Type for a key value pair
    type: object
    additionalProperties: false
    required:
      - key
      - read_only
    properties:
      key:
        description: Key / Identifier
        type: string
        maximum: 50
      read_only:
        description: Indicates if the configuration key is configured to be read-only
        type: boolean
      value:
        description: Value of the configuration key
        type: string
        maximum: 5000
  GetConfigurationResponse:
    description: Response to a GetConfiguration request
    type: object
    required:
      - configuration_keys
      - unknown_keys
    properties:
      configuration_keys:
        description: List of known configuration keys of key value pairs
        type: array
        items:
          description: Key value pair
          type: object
          $ref: /ocpp#/KeyValue
      unknown_keys:
        description: List of unknown configuration keys
        type: array
        items:
          description: Unknown key
          type: string
          maximum: 50
  ConfigurationStatus:
    description: Response to a set_custom_configuration_key command
    type: string
    enum:
      - Accepted
      - Rejected
      - RebootRequired
      - NotSupported
  SecurityEventEnum:
    description: Enum for known security events
    type: string
    enum:
      - FirmwareUpdated
      - FailedToAuthenticateAtCsms
      - CsmsFailedToAuthenticate
      - SettingSystemTime
      - StartupOfTheDevice
      - ResetOrReboot
      - SecurityLogWasCleared
      - ReconfigurationOfSecurityParameters
      - MemoryExhaustion
      - InvalidMessages
      - AttemptedReplayAttacks
      - TamperDetectionActivated
      - InvalidFirmwareSignature
      - InvalidFirmwareSigningCertificate
      - InvalidCsmsCertificate
      - InvalidChargingStationCertificate
      - InvalidTLSVersion
      - InvalidTLSCipherSuite
      - MaintenanceLoginAccepted
      - MaintenanceLoginFailed
  SecurityEvent:
    description: Type for a security event
    type: object
    required:
      - type
    properties:
      type:
        description: Type of the security event
        type: string
      info:
        description: Additional information about the occurred security event
        type: string
      critical:
        description: >-
          If set this overwrites the default criticality recommended in the OCPP 2.0.1 appendix.
          A critical security event is transmitted as a message to the CSMS, a non-critical one is just written to the security log
        type: boolean
      timestamp:
        description: Timestamp of the moment the security event was generated, if absent the current datetime is assumed
        type: string
        format: date-time
  Variable:
    description: >-
      Type for a variable with a name and an optional instance
      For OCPP1.6: A Variable should only contain a name. The name identifies
        the configuration key.
      For OCPP2.0.1: All properties of the Variable can be used
    type: object
    required:
      - name
    properties:
      name:
        description: Name of a variable
        type: string
        minLength: 0
        maxLength: 50
      instance:
        description: Name of instance in case the variable exists as multiple instances
        type: string
        minLength: 0
        maxLength: 50
  Component:
    description: >-
      Type for a component with name, optional instance and optional evse
      For OCPP1.6: A definition of a Component doesn't exist in OCPP1.6; In the context of OCPP1.6
        this type may not be relevant or used.
      For OCPP2.0.1: All properties of the Component can be used
    type: object
    required:
      - name
    properties:
      name:
        description: Name of a component
        type: string
        minLength: 0
        maxLength: 50
      instance:
        description: Name of instance in case the component exists as multiple instances
        type: string
        minLength: 0
        maxLength: 50
      evse:
        description: >-
          Specifies the EVSE when component is located at EVSE level, also specifies
          the connector when component is located at Connector level
        type: object
        $ref: /ocpp#/EVSE
  ComponentVariable:
    description: >-
      Type for a combination of component and variable.
      Note that for OCPP1.6 only the Variable.name (configuration key) is sufficient to identify a
      configuration key. For OCPP2.0.1 all properties of the type(s) can be used.
    type: object
    required:
      - component
      - variable
    properties:
      component:
        description: Component
        type: object
        $ref: /ocpp#/Component
      variable:
        description: Variable
        type: object
        $ref: /ocpp#/Variable
  AttributeEnum:
    description: >-
      Attribute enum
      Actual: The actual value of a variable
      Target: The target value of a variable
      MinSet: The minimal allowed value of a variable
      MaxSet: The maximum allowed value of a variable
    type: string
    enum:
      - Actual
      - Target
      - MinSet
      - MaxSet
  GetVariableStatusEnumType:
    description: >-
      Indicates the status of the GetVariableRequest as part of the GetVariableResult operation
      Accepted: Variable successfully retrieved
      Rejected: Request is rejected
      UnknownComponent: Component is not known
      UnknownVariable: Variable is not known
      NotSupportedAttributeType: The AttributeType is not supported
    type: string
    enum:
      - Accepted
      - Rejected
      - UnknownComponent
      - UnknownVariable
      - NotSupportedAttributeType
  SetVariableStatusEnumType:
    description: >-
      Indicates the status of the SetVariableRequest operation as part of the SetVariableResult
      Accepted: Variable successfully set
      Rejected: Request is rejected
      UnknownComponent: Component is not known
      UnknownVariable: Variable is not known
      NotSupportedAttributeType: The AttributeType is not supported
      RebootRequired: A reboot is required
    type: string
    enum:
      - Accepted
      - Rejected
      - UnknownComponent
      - UnknownVariable
      - NotSupportedAttributeType
      - RebootRequired
  EventTriggerEnum:
    description: >-
      Indicates the trigger reason of a generic event as part of the type EventData
      Alerting: Monitored variable has passed an Lower or Upper Threshold
      Delta: Delta Monitored Variable value has changed by more than specified amount
      Periodic: Periodic Monitored Variable has been sampled for reporting at the specified interval
    type: string
    enum:
      - Alerting
      - Delta
      - Periodic
  EventNotificationType:
    description: >-
      Indicates the event notification type as part of the type EventData
      HardWiredNotification: The software implemented by the manufacturer triggered a hardwired notification
      HardWiredMonitor: Triggered by a monitor, which is hardwired by the manufacturer
      PreconfiguredMonitor: Triggered by a monitor, which is preconfigured by the manufacturer.
      CustomMonitor: Triggered by a monitor which is set by a message by the Charging Station Operator.
    type: string
    enum:
      - HardWiredNotification
      - HardWiredMonitor
      - PreconfiguredMonitor
      - CustomMonitor
  GetVariableRequest:
    description: >-
      Type to request a variable value (OCPP2.0.1) or configuration value (OCPP1.6)
    type: object
    required:
      - component_variable
    properties:
      component_variable:
        description: >-
          Identifier for which the value should be requested
        type: object
        $ref: /ocpp#/ComponentVariable
      attribute_type:
        description: AttributeEnum for which the value should be requested. When absent, actual is assumed
        type: string
        $ref: /ocpp#/AttributeEnum
  GetVariableResult:
    description: Result of a GetVariableRequest
    type: object
    required:
      - status
      - component_variable
    properties:
      status:
        description: Status of the GetVariableResult
        type: string
        $ref: /ocpp#/GetVariableStatusEnumType
      attribute_type:
        description: AttributeEnum for which the value was requested. When absent, actual is assumed
        type: string
        $ref: /ocpp#/AttributeEnum
      value:
        description: >-
          Value of the requested variable and AttributeEnum. This field can only be empty when the given
          status is NOT accepted
        type: string
        minLength: 0
        maxLength: 2500
      component_variable:
        description: Identifier for which the value was requested
        type: object
        $ref: /ocpp#/ComponentVariable
  SetVariableRequest:
    description: Type to request to set a variable or configuration key
    type: object
    required:
      - component_variable
      - value
    properties:
      component_variable:
        description: Identifier for which the value should be set
        type: object
        $ref: /ocpp#/ComponentVariable
      value:
        description: Value of the variable that should be set
        type: string
        minLength: 0
        maxLength: 1000
      attribute_type:
        description: AttributeEnum for which the value should be set. When absent, actual is assumed
        type: string
        $ref: /ocpp#/AttributeEnum
  SetVariableResult:
    description: Result of a SetVariableRequest
    type: object
    required:
      - status
      - component_variable
    properties:
      status:
        description: Status of the SetVariableResult
        type: string
        $ref: /ocpp#/SetVariableStatusEnumType
      component_variable:
        description: Identifier for which the set of the value should be requested
        type: object
        $ref: /ocpp#/ComponentVariable
      attribute_type:
        description: AttributeEnum for which the set of the value is requested. When absent, actual is assumed
        type: string
        $ref: /ocpp#/AttributeEnum
  EventData:
    description: Type to report an event notification for a component-variable
    type: object
    required:
      - component_variable
      - event_id
      - timestamp
      - trigger
      - actual_value
      - event_notification_type
    properties:
      component_variable:
        description: Identifier for which the event occured
        type: object
        $ref: /ocpp#/ComponentVariable
      event_id:
        description: Identifies the event
        type: integer
      timestamp:
        description: Timestamp of the moment the report was generated
        type: string
        format: date-time
      trigger:
        description: Type of the monitor that triggered this event
        type: string
        $ref: /ocpp#/EventTriggerEnum
      actual_value:
        description: Actual value of the variable
        type: string
        maxLength: 2500
      event_notification_type:
        description: Type of the event notification
        type: string
        $ref: /ocpp#/EventNotificationType
      cause:
        description: Refers to the Id of an event that is considered to be the cause for this event
        type: integer
      tech_code:
        description: Technical (error) code as reported by component
        type: string
        maxLength: 50
      tech_info:
        description: Technical detail information as reported by component
        type: string
        maxLength: 500
      cleared:
        description: Cleared is set to true to report the clearing of a monitored situation
        type: boolean
      transaction_id:
        description: >-
          If an event notification is linked to a specific transaction, this field can be used
          to specify its transactionId
        type: string
        maxLength: 36
      variable_monitoring_id:
        description: Identifies the VariableMonitoring which triggered the event
        type: integer
  OperationalStatusEnumType:
    description: >-
      Operational status of Charging Station /EVSE / Connector
    type: string
    enum:
      - Inoperative
      - Operative
  ChangeAvailabilityRequest:
    description: Request type to change the availability of the Charging Station/ an EVSE / a Connector.
    type: object
    required:
      - operational_status
    properties:
      operational_status:
        description: Type of availability change that the Charging Station should perform.
        type: string
        $ref: /ocpp#/OperationalStatusEnumType
      evse:
        description: >-
          Specify EVSE/Connector whose status is changed. When omitted, the
          message refers to the Charging Station as a whole.
        type: object
        $ref: /ocpp#/EVSE
  ChangeAvailabilityStatusEnumType:
    description: >-
      Status returned in response to ChangeAvailabilityRequest.
    type: string
    enum:
      - Accepted
      - Rejected
      - Scheduled
  StatusInfoType:
    description: >-
      Element providing more information about the status.
    type: object
    required:
      - reason_code
    properties:
      reason_code:
        description: >-
          A predefined code for the reason why the status is returned in this response.
          The string is case-insensitive.
        type: string
      additional_info:
        description: >-
          Additional text to provide detailed information
        type: string
  ChangeAvailabilityResponse:
    description: Response type to request to change the availability of the Charging Station/ an EVSE / a Connector.
    type: object
    required:
      - status
    properties:
      status:
        description: Indicates whether the Charging Station is able to perform the availability change.
        type: string
        $ref: /ocpp#/ChangeAvailabilityStatusEnumType
      status_info:
        description: Detailed status information.
        type: object
        $ref: /ocpp#/StatusInfoType
  RegistrationStatus:
    description: Indicates whether the Charging Station has been registered within the OCPP CSMS
    type: string
    enum:
      - Accepted
      - Pending
      - Rejected
  BootNotificationResponse:
    description: OCPP BootNotificationResponse
    type: object
    required:
      - status
      - current_time
      - interval
    properties:
      status:
        description: Indicates whether the Charging Station has been registered within the OCPP CSMS
        type: string
        $ref: /ocpp#/RegistrationStatus
      current_time:
        description: Contains the CSMS current time in RFC3339 format
        type: string
        format: date-time
      interval:
        description: >-
          When Status is Accepted, this contains the heartbeat interval in seconds. If the CSMS
          returns something other than Accepted, the value of the interval field indicates the
          minimum wait time before sending a next BootNotification request.
        type: integer
      status_info:
        description: Detailed status information.
        type: object
        $ref: /ocpp#/StatusInfoType
  EnergyTransferModeEnum:
    description: >-
      None
    type: string
    enum:
      - AC_single_phase
      - AC_two_phase
      - AC_three_phase
      - DC
      - AC_BPT
      - AC_BPT_DER
      - AC_DER
      - DC_BPT
      - DC_ACDP
      - DC_ACDP_BPT
      - WPT
  DERControlEnum:
    description: >-
      Name of control settings to clear. Not used when _controlId_ is provided.
    type: string
    enum:
      - EnterService
      - FreqDroop
      - FreqWatt
      - FixedPFAbsorb
      - FixedPFInject
      - FixedVar
      - Gradients
      - HFMustTrip
      - HFMayTrip
      - HVMustTrip
      - HVMomCess
      - HVMayTrip
      - LimitMaxDischarge
      - LFMustTrip
      - LVMustTrip
      - LVMomCess
      - LVMayTrip
      - PowerMonitoringMustTrip
      - VoltVar
      - VoltWatt
      - WattPF
      - WattVar
  ControlModeEnum:
    description: >-
      (2.1) Indicates whether EV wants to operate in Dynamic or Scheduled mode. When
      absent, Scheduled mode is assumed for backwards compatibility. ISO 15118-20:
      ServiceSelectionReq(SelectedEnergyTransferService)
    type: string
    enum:
      - ScheduledControl
      - DynamicControl
  IslandingDetectionEnum:
    description: >-
      None
    type: string
    enum:
      - NoAntiIslandingSupport
      - RoCoF
      - UVP_OVP
      - UFP_OFP
      - VoltageVectorShift
      - ZeroCrossingDetection
      - OtherPassive
      - ImpedanceMeasurement
      - ImpedanceAtFrequency
      - SlipModeFrequencyShift
      - SandiaFrequencyShift
      - SandiaVoltageShift
      - FrequencyJump
      - RCLQFactor
      - OtherActive
  MobilityNeedsModeEnum:
    description: >-
      (2.1) Value of EVCC indicates that EV determines min/target SOC and departure
      time. A value of EVCC_SECC indicates that charging station or CSMS may also
      update min/target SOC and departure time. ISO 15118-20:
      ServiceSelectionReq(SelectedEnergyTransferService)
    type: string
    enum:
      - EVCC
      - EVCC_SECC
  V2XChargingParameters:
    description: >-
      Charging parameters for ISO 15118-20, also supporting V2X charging/discharging.
      All values are greater or equal to zero, with the exception of
      EVMinEnergyRequest, EVMaxEnergyRequest, EVTargetEnergyRequest,
      EVMinV2XEnergyRequest and EVMaxV2XEnergyRequest.
    type: object
    required:
      []
    properties:
      min_charge_power:
        description: >-
          Minimum charge power in W, defined by max(EV, EVSE). This field represents the
          sum of all phases, unless values are provided for L2 and L3, in which case this
          field represents phase L1. Relates to: ISO 15118-20:
          BPT_AC/DC_CPDReqEnergyTransferModeType: EVMinimumChargePower
        type: number
      min_charge_power_l2:
        description: >-
          Minimum charge power on phase L2 in W, defined by max(EV, EVSE). Relates to: ISO
          15118-20: BPT_AC/DC_CPDReqEnergyTransferModeType: EVMinimumChargePower_L2
        type: number
      min_charge_power_l3:
        description: >-
          Minimum charge power on phase L3 in W, defined by max(EV, EVSE). Relates to: ISO
          15118-20: BPT_AC/DC_CPDReqEnergyTransferModeType: EVMinimumChargePower_L3
        type: number
      max_charge_power:
        description: >-
          Maximum charge (absorbed) power in W, defined by min(EV, EVSE) at unity power
          factor. This field represents the sum of all phases, unless values are provided
          for L2 and L3, in which case this field represents phase L1. It corresponds to
          the ChaWMax attribute in the IEC 61850. It is usually equivalent to the rated
          apparent power of the EV when discharging (ChaVAMax) in IEC 61850. Relates to:
          ISO 15118-20: BPT_AC/DC_CPDReqEnergyTransferModeType: EVMaximumChargePower
        type: number
      max_charge_power_l2:
        description: >-
          Maximum charge power on phase L2 in W, defined by min(EV, EVSE) Relates to: ISO
          15118-20: BPT_AC/DC_CPDReqEnergyTransferModeType: EVMaximumChargePower_L2
        type: number
      max_charge_power_l3:
        description: >-
          Maximum charge power on phase L3 in W, defined by min(EV, EVSE) Relates to: ISO
          15118-20: BPT_AC/DC_CPDReqEnergyTransferModeType: EVMaximumChargePower_L3
        type: number
      min_discharge_power:
        description: >-
          Minimum discharge (injected) power in W, defined by max(EV, EVSE) at unity power
          factor. Value >= 0. This field represents the sum of all phases, unless values
          are provided for L2 and L3, in which case this field represents phase L1. It
          corresponds to the WMax attribute in the IEC 61850. It is usually equivalent to
          the rated apparent power of the EV when discharging (VAMax attribute in the IEC
          61850). Relates to: ISO 15118-20: BPT_AC/DC_CPDReqEnergyTransferModeType:
          EVMinimumDischargePower
        type: number
      min_discharge_power_l2:
        description: >-
          Minimum discharge power on phase L2 in W, defined by max(EV, EVSE).  Value >= 0.
          Relates to: ISO 15118-20: BPT_AC/DC_CPDReqEnergyTransferModeType:
          EVMinimumDischargePower_L2
        type: number
      min_discharge_power_l3:
        description: >-
          Minimum discharge power on phase L3 in W, defined by max(EV, EVSE).  Value >= 0.
          Relates to: ISO 15118-20: BPT_AC/DC_CPDReqEnergyTransferModeType:
          EVMinimumDischargePower_L3
        type: number
      max_discharge_power:
        description: >-
          Maximum discharge (injected) power in W, defined by min(EV, EVSE) at unity power
          factor.  Value >= 0. This field represents the sum of all phases, unless values
          are provided for L2 and L3, in which case this field represents phase L1.
          Relates to: ISO 15118-20: BPT_AC/DC_CPDReqEnergyTransferModeType:
          EVMaximumDischargePower
        type: number
      max_discharge_power_l2:
        description: >-
          Maximum discharge power on phase L2 in W, defined by min(EV, EVSE).  Value >= 0.
          Relates to: ISO 15118-20: BPT_AC/DC_CPDReqEnergyTransferModeType:
          EVMaximumDischargePowe_L2
        type: number
      max_discharge_power_l3:
        description: >-
          Maximum discharge power on phase L3 in W, defined by min(EV, EVSE).  Value >= 0.
          Relates to: ISO 15118-20: BPT_AC/DC_CPDReqEnergyTransferModeType:
          EVMaximumDischargePower_L3
        type: number
      min_charge_current:
        description: >-
          Minimum charge current in A, defined by max(EV, EVSE) Relates to: ISO 15118-20:
          BPT_DC_CPDReqEnergyTransferModeType: EVMinimumChargeCurrent
        type: number
      max_charge_current:
        description: >-
          Maximum charge current in A, defined by min(EV, EVSE) Relates to: ISO 15118-20:
          BPT_DC_CPDReqEnergyTransferModeType: EVMaximumChargeCurrent
        type: number
      min_discharge_current:
        description: >-
          Minimum discharge current in A, defined by max(EV, EVSE).  Value >= 0. Relates
          to: ISO 15118-20: BPT_DC_CPDReqEnergyTransferModeType: EVMinimumDischargeCurrent
        type: number
      max_discharge_current:
        description: >-
          Maximum discharge current in A, defined by min(EV, EVSE).  Value >= 0. Relates
          to: ISO 15118-20: BPT_DC_CPDReqEnergyTransferModeType: EVMaximumDischargeCurrent
        type: number
      min_voltage:
        description: >-
          Minimum voltage in V, defined by max(EV, EVSE) Relates to: ISO 15118-20:
          BPT_DC_CPDReqEnergyTransferModeType: EVMinimumVoltage
        type: number
      max_voltage:
        description: >-
          Maximum voltage in V, defined by min(EV, EVSE) Relates to: ISO 15118-20:
          BPT_DC_CPDReqEnergyTransferModeType: EVMaximumVoltage
        type: number
      ev_target_energy_request:
        description: >-
          Energy to requested state of charge in Wh Relates to: ISO 15118-20:
          Dynamic/Scheduled_SEReqControlModeType: EVTargetEnergyRequest
        type: number
      ev_min_energy_request:
        description: >-
          Energy to minimum allowed state of charge in Wh Relates to: ISO 15118-20:
          Dynamic/Scheduled_SEReqControlModeType: EVMinimumEnergyRequest
        type: number
      ev_max_energy_request:
        description: >-
          Energy to maximum state of charge in Wh Relates to: ISO 15118-20:
          Dynamic/Scheduled_SEReqControlModeType: EVMaximumEnergyRequest
        type: number
      ev_min_v2xenergy_request:
        description: >-
          Energy (in Wh) to minimum state of charge for cycling (V2X) activity. Positive
          value means that current state of charge is below V2X range. Relates to: ISO
          15118-20: Dynamic_SEReqControlModeType: EVMinimumV2XEnergyRequest
        type: number
      ev_max_v2xenergy_request:
        description: >-
          Energy (in Wh) to maximum state of charge for cycling (V2X) activity. Negative
          value indicates that current state of charge is above V2X range. Relates to: ISO
          15118-20: Dynamic_SEReqControlModeType: EVMaximumV2XEnergyRequest
        type: number
      target_so_c:
        description: >-
          Target state of charge at departure as percentage. Relates to: ISO 15118-20:
          BPT_DC_CPDReqEnergyTransferModeType: TargetSOC
        type: integer
  EVPriceRule:
    description: >-
      (2.1) An entry in price schedule over time for which EV is willing to discharge.
    type: object
    required:
      - energy_fee
      - power_range_start
    properties:
      energy_fee:
        description: >-
          Cost per kWh.
        type: number
      power_range_start:
        description: >-
          The EnergyFee applies between this value and the value of the PowerRangeStart of
          the subsequent EVPriceRule. If the power is below this value, the EnergyFee of
          the previous EVPriceRule applies. Negative values are used for discharging.
        type: number
  EVPowerScheduleEntry:
    description: >-
      (2.1) An entry in schedule of the energy amount over time that EV is willing to
      discharge. A negative value indicates the willingness to discharge under
      specific conditions, a positive value indicates that the EV currently is not
      able to offer energy to discharge.
    type: object
    required:
      - duration
      - power
    properties:
      duration:
        description: >-
          The duration of this entry.
        type: integer
      power:
        description: >-
          Defines maximum amount of power for the duration of this EVPowerScheduleEntry to
          be discharged from the EV battery through EVSE power outlet. Negative values are
          used for discharging.
        type: number
  EVPowerSchedule:
    description: >-
      (2.1) Schedule of EV energy offer.
    type: object
    required:
      - ev_power_schedule_entries
      - time_anchor
    properties:
      ev_power_schedule_entries:
        description: >-
          (2.1) An entry in schedule of the energy amount over time that EV is willing to
          discharge. A negative value indicates the willingness to discharge under
          specific conditions, a positive value indicates that the EV currently is not
          able to offer energy to discharge.
        type: array
        items:
          type: object
          $ref: /ocpp#/EVPowerScheduleEntry
        minItems: 1
        maxItems: 1024
      time_anchor:
        description: >-
          The time that defines the starting point for the EVEnergyOffer.
        type: string
  EVAbsolutePriceScheduleEntry:
    description: >-
      (2.1) An entry in price schedule over time for which EV is willing to discharge.
    type: object
    required:
      - duration
      - ev_price_rule
    properties:
      duration:
        description: >-
          The amount of seconds of this entry.
        type: integer
      ev_price_rule:
        description: >-
          (2.1) An entry in price schedule over time for which EV is willing to discharge.
        type: array
        items:
          type: object
          $ref: /ocpp#/EVPriceRule
        minItems: 1
        maxItems: 8
  EVAbsolutePriceSchedule:
    description: >-
      (2.1) Price schedule of EV energy offer.
    type: object
    required:
      - time_anchor
      - currency
      - ev_absolute_price_schedule_entries
      - price_algorithm
    properties:
      time_anchor:
        description: >-
          Starting point in time of the EVEnergyOffer.
        type: string
      currency:
        description: >-
          Currency code according to ISO 4217.
        type: string
      ev_absolute_price_schedule_entries:
        description: >-
          (2.1) An entry in price schedule over time for which EV is willing to discharge.
        type: array
        items:
          type: object
          $ref: /ocpp#/EVAbsolutePriceScheduleEntry
        minItems: 1
        maxItems: 1024
      price_algorithm:
        description: >-
          ISO 15118-20 URN of price algorithm: Power, PeakPower, StackedEnergy.
        type: string
  EVEnergyOffer:
    description: >-
      (2.1) A schedule of the energy amount over time that EV is willing to discharge.
      A negative value indicates the willingness to discharge under specific
      conditions, a positive value indicates that the EV currently is not able to
      offer energy to discharge.
    type: object
    required:
      - ev_power_schedule
    properties:
      ev_absolute_price_schedule:
        description: >-
          (2.1) Price schedule of EV energy offer.
        type: object
        $ref: /ocpp#/EVAbsolutePriceSchedule
      ev_power_schedule:
        description: >-
          (2.1) Schedule of EV energy offer.
        type: object
        $ref: /ocpp#/EVPowerSchedule
  DERChargingParameters:
    description: >-
      (2.1) DERChargingParametersType is used in ChargingNeedsType during an ISO
      15118-20 session for AC_BPT_DER to report the inverter settings related to DER
      control that were agreed between EVSE and EV. Fields starting with "ev" contain
      values from the EV. Other fields contain a value that is supported by both EV
      and EVSE. DERChargingParametersType type is only relevant in case of an ISO
      15118-20 AC_BPT_DER/AC_DER charging session.
    type: object
    required:
      []
    properties:
      ev_supported_dercontrol:
        description: >-
          DER control functions supported by EV. ISO 15118-20:
          DER_BPT_AC_CPDReqEnergyTransferModeType:DERControlFunctions (bitmap)
        type: array
        items:
          type: string
          $ref: /ocpp#/DERControlEnum
        minItems: 1
      ev_over_excited_max_discharge_power:
        description: >-
          Rated maximum injected active power by EV, at specified over-excited power
          factor (overExcitedPowerFactor). It can also be defined as the rated maximum
          discharge power at the rated minimum injected reactive power value. This means
          that if the EV is providing reactive power support, and it is requested to
          discharge at max power (e.g. to satisfy an EMS request), the EV may override the
          request and discharge up to overExcitedMaximumDischargePower to meet the minimum
          reactive power requirements. Corresponds to the WOvPF attribute in IEC 61850.
          ISO 15118-20: DER_BPT_AC_CPDReqEnergyTransferModeType:
          EVOverExcitedMaximumDischargePower
        type: number
      ev_over_excited_power_factor:
        description: >-
          EV power factor when injecting (over excited) the minimum reactive power.
          Corresponds to the OvPF attribute in IEC 61850. ISO 15118-20:
          DER_BPT_AC_CPDReqEnergyTransferModeType: EVOverExcitedPowerFactor
        type: number
      ev_under_excited_max_discharge_power:
        description: >-
          Rated maximum injected active power by EV supported at specified under-excited
          power factor (EVUnderExcitedPowerFactor). It can also be defined as the rated
          maximum dischargePower at the rated minimum absorbed reactive power value. This
          means that if the EV is providing reactive power support, and it is requested to
          discharge at max power (e.g. to satisfy an EMS request), the EV may override the
          request and discharge up to underExcitedMaximumDischargePower to meet the
          minimum reactive power requirements. This corresponds to the WUnPF attribute in
          the IEC 61850. ISO 15118-20: DER_BPT_AC_CPDReqEnergyTransferModeType:
          EVUnderExcitedMaximumDischargePower
        type: number
      ev_under_excited_power_factor:
        description: >-
          EV power factor when injecting (under excited) the minimum reactive power.
          Corresponds to the OvPF attribute in IEC 61850. ISO 15118-20:
          DER_BPT_AC_CPDReqEnergyTransferModeType: EVUnderExcitedPowerFactor
        type: number
      max_apparent_power:
        description: >-
          Rated maximum total apparent power, defined by min(EV, EVSE) in va. Corresponds
          to the VAMaxRtg in IEC 61850. ISO 15118-20:
          DER_BPT_AC_CPDReqEnergyTransferModeType: EVMaximumApparentPower
        type: number
      max_charge_apparent_power:
        description: >-
          Rated maximum absorbed apparent power, defined by min(EV, EVSE) in va. This
          field represents the sum of all phases, unless values are provided for L2 and
          L3, in which case this field represents phase L1. Corresponds to the ChaVAMaxRtg
          in IEC 61850. ISO 15118-20: DER_BPT_AC_CPDReqEnergyTransferModeType:
          EVMaximumChargeApparentPower
        type: number
      max_charge_apparent_power_l2:
        description: >-
          Rated maximum absorbed apparent power on phase L2, defined by min(EV, EVSE) in
          va. Corresponds to the ChaVAMaxRtg in IEC 61850. ISO 15118-20:
          DER_BPT_AC_CPDReqEnergyTransferModeType: EVMaximumChargeApparentPower_L2
        type: number
      max_charge_apparent_power_l3:
        description: >-
          Rated maximum absorbed apparent power on phase L3, defined by min(EV, EVSE) in
          va. Corresponds to the ChaVAMaxRtg in IEC 61850. ISO 15118-20:
          DER_BPT_AC_CPDReqEnergyTransferModeType: EVMaximumChargeApparentPower_L3
        type: number
      max_discharge_apparent_power:
        description: >-
          Rated maximum injected apparent power, defined by min(EV, EVSE) in va. This
          field represents the sum of all phases, unless values are provided for L2 and
          L3, in which case this field represents phase L1. Corresponds to the DisVAMaxRtg
          in IEC 61850. ISO 15118-20: DER_BPT_AC_CPDReqEnergyTransferModeType:
          EVMaximumDischargeApparentPower
        type: number
      max_discharge_apparent_power_l2:
        description: >-
          Rated maximum injected apparent power on phase L2, defined by min(EV, EVSE) in
          va. Corresponds to the DisVAMaxRtg in IEC 61850. ISO 15118-20:
          DER_BPT_AC_CPDReqEnergyTransferModeType: EVMaximumDischargeApparentPower_L2
        type: number
      max_discharge_apparent_power_l3:
        description: >-
          Rated maximum injected apparent power on phase L3, defined by min(EV, EVSE) in
          va. Corresponds to the DisVAMaxRtg in IEC 61850. ISO 15118-20:
          DER_BPT_AC_CPDReqEnergyTransferModeType: EVMaximumDischargeApparentPower_L3
        type: number
      max_charge_reactive_power:
        description: >-
          Rated maximum absorbed reactive power, defined by min(EV, EVSE), in vars. This
          field represents the sum of all phases, unless values are provided for L2 and
          L3, in which case this field represents phase L1. Corresponds to the AvarMax
          attribute in the IEC 61850. ISO 15118-20:
          DER_BPT_AC_CPDReqEnergyTransferModeType: EVMaximumChargeReactivePower
        type: number
      max_charge_reactive_power_l2:
        description: >-
          Rated maximum absorbed reactive power, defined by min(EV, EVSE), in vars on
          phase L2. Corresponds to the AvarMax attribute in the IEC 61850. ISO 15118-20:
          DER_BPT_AC_CPDReqEnergyTransferModeType: EVMaximumChargeReactivePower_L2
        type: number
      max_charge_reactive_power_l3:
        description: >-
          Rated maximum absorbed reactive power, defined by min(EV, EVSE), in vars on
          phase L3. Corresponds to the AvarMax attribute in the IEC 61850. ISO 15118-20:
          DER_BPT_AC_CPDReqEnergyTransferModeType: EVMaximumChargeReactivePower_L3
        type: number
      min_charge_reactive_power:
        description: >-
          Rated minimum absorbed reactive power, defined by max(EV, EVSE), in vars. This
          field represents the sum of all phases, unless values are provided for L2 and
          L3, in which case this field represents phase L1. ISO 15118-20:
          DER_BPT_AC_CPDReqEnergyTransferModeType: EVMinimumChargeReactivePower
        type: number
      min_charge_reactive_power_l2:
        description: >-
          Rated minimum absorbed reactive power, defined by max(EV, EVSE), in vars on
          phase L2. ISO 15118-20: DER_BPT_AC_CPDReqEnergyTransferModeType:
          EVMinimumChargeReactivePower_L2
        type: number
      min_charge_reactive_power_l3:
        description: >-
          Rated minimum absorbed reactive power, defined by max(EV, EVSE), in vars on
          phase L3. ISO 15118-20: DER_BPT_AC_CPDReqEnergyTransferModeType:
          EVMinimumChargeReactivePower_L3
        type: number
      max_discharge_reactive_power:
        description: >-
          Rated maximum injected reactive power, defined by min(EV, EVSE), in vars. This
          field represents the sum of all phases, unless values are provided for L2 and
          L3, in which case this field represents phase L1. Corresponds to the IvarMax
          attribute in the IEC 61850. ISO 15118-20:
          DER_BPT_AC_CPDReqEnergyTransferModeType: EVMaximumDischargeReactivePower
        type: number
      max_discharge_reactive_power_l2:
        description: >-
          Rated maximum injected reactive power, defined by min(EV, EVSE), in vars on
          phase L2. Corresponds to the IvarMax attribute in the IEC 61850. ISO 15118-20:
          DER_BPT_AC_CPDReqEnergyTransferModeType: EVMaximumDischargeReactivePower_L2
        type: number
      max_discharge_reactive_power_l3:
        description: >-
          Rated maximum injected reactive power, defined by min(EV, EVSE), in vars on
          phase L3. Corresponds to the IvarMax attribute in the IEC 61850. ISO 15118-20:
          DER_BPT_AC_CPDReqEnergyTransferModeType: EVMaximumDischargeReactivePower_L3
        type: number
      min_discharge_reactive_power:
        description: >-
          Rated minimum injected reactive power, defined by max(EV, EVSE), in vars. This
          field represents the sum of all phases, unless values are provided for L2 and
          L3, in which case this field represents phase L1. ISO 15118-20:
          DER_BPT_AC_CPDReqEnergyTransferModeType: EVMinimumDischargeReactivePower
        type: number
      min_discharge_reactive_power_l2:
        description: >-
          Rated minimum injected reactive power, defined by max(EV, EVSE), in var on phase
          L2. ISO 15118-20: DER_BPT_AC_CPDReqEnergyTransferModeType:
          EVMinimumDischargeReactivePower_L2
        type: number
      min_discharge_reactive_power_l3:
        description: >-
          Rated minimum injected reactive power, defined by max(EV, EVSE), in var on phase
          L3. ISO 15118-20: DER_BPT_AC_CPDReqEnergyTransferModeType:
          EVMinimumDischargeReactivePower_L3
        type: number
      nominal_voltage:
        description: >-
          Line voltage supported by EVSE and EV. ISO 15118-20:
          DER_BPT_AC_CPDReqEnergyTransferModeType: EVNominalVoltage
        type: number
      nominal_voltage_offset:
        description: >-
          The nominal AC voltage (rms) offset between the Charging Station's electrical
          connection point and the utility’s point of common coupling. ISO 15118-20:
          DER_BPT_AC_CPDReqEnergyTransferModeType: EVNominalVoltageOffset
        type: number
      max_nominal_voltage:
        description: >-
          Maximum AC rms voltage, as defined by min(EV, EVSE)  to operate with. ISO
          15118-20: DER_BPT_AC_CPDReqEnergyTransferModeType: EVMaximumNominalVoltage
        type: number
      min_nominal_voltage:
        description: >-
          Minimum AC rms voltage, as defined by max(EV, EVSE)  to operate with. ISO
          15118-20: DER_BPT_AC_CPDReqEnergyTransferModeType: EVMinimumNominalVoltage
        type: number
      ev_inverter_manufacturer:
        description: >-
          Manufacturer of the EV inverter. ISO 15118-20:
          DER_BPT_AC_CPDReqEnergyTransferModeType: EVInverterManufacturer
        type: string
      ev_inverter_model:
        description: >-
          Model name of the EV inverter. ISO 15118-20:
          DER_BPT_AC_CPDReqEnergyTransferModeType: EVInverterModel
        type: string
      ev_inverter_serial_number:
        description: >-
          Serial number of the EV inverter. ISO 15118-20:
          DER_BPT_AC_CPDReqEnergyTransferModeType: EVInverterSerialNumber
        type: string
      ev_inverter_sw_version:
        description: >-
          Software version of EV inverter. ISO 15118-20:
          DER_BPT_AC_CPDReqEnergyTransferModeType: EVInverterSwVersion
        type: string
      ev_inverter_hw_version:
        description: >-
          Hardware version of EV inverter. ISO 15118-20:
          DER_BPT_AC_CPDReqEnergyTransferModeType: EVInverterHwVersion
        type: string
      ev_islanding_detection_method:
        description: >-
          Type of islanding detection method. Only mandatory when islanding detection is
          required at the site, as set in the ISO 15118 Service Details configuration. ISO
          15118-20: DER_BPT_AC_CPDReqEnergyTransferModeType: EVIslandingDetectionMethod
        type: array
        items:
          type: string
          $ref: /ocpp#/IslandingDetectionEnum
        minItems: 1
      ev_islanding_trip_time:
        description: >-
          Time after which EV will trip if an island has been detected. ISO 15118-20:
          DER_BPT_AC_CPDReqEnergyTransferModeType: EVIslandingTripTime
        type: number
      ev_maximum_level1dcinjection:
        description: >-
          Maximum injected DC current allowed at level 1 charging. ISO 15118-20:
          DER_BPT_AC_CPDReqEnergyTransferModeType: EVMaximumLevel1DCInjection
        type: number
      ev_duration_level1dcinjection:
        description: >-
          Maximum allowed duration of DC injection at level 1 charging. ISO 15118-20:
          DER_BPT_AC_CPDReqEnergyTransferModeType: EVDurationLevel1DCInjection
        type: number
      ev_maximum_level2dcinjection:
        description: >-
          Maximum injected DC current allowed at level 2 charging. ISO 15118-20:
          DER_BPT_AC_CPDReqEnergyTransferModeType: EVMaximumLevel2DCInjection
        type: number
      ev_duration_level2dcinjection:
        description: >-
          Maximum allowed duration of DC injection at level 2 charging. ISO 15118-20:
          DER_BPT_AC_CPDReqEnergyTransferModeType: EVDurationLevel2DCInjection
        type: number
      ev_reactive_susceptance:
        description: >-
          Measure of the susceptibility of the circuit to reactance, in Siemens (S). ISO
          15118-20: DER_BPT_AC_CPDReqEnergyTransferModeType: EVReactiveSusceptance
        type: number
      ev_session_total_discharge_energy_available:
        description: >-
          Total energy value, in Wh, that EV is allowed to provide during the entire V2G
          session. The value is independent of the V2X Cycling area. Once this value
          reaches the value of 0, the EV may block any attempt to discharge in order to
          protect the battery health. ISO 15118-20:
          DER_BPT_AC_CPDReqEnergyTransferModeType: EVSessionTotalDischargeEnergyAvailable
        type: number
  DCChargingParameters:
    description: >-
      EV DC charging parameters for ISO 15118-2
    type: object
    required:
      - ev_max_current
      - ev_max_voltage
    properties:
      ev_max_current:
        description: >-
          Maximum current (in A) supported by the electric vehicle. Includes cable
          capacity. Relates to: ISO 15118-2:
          DC_EVChargeParameterType:EVMaximumCurrentLimit
        type: number
      ev_max_voltage:
        description: >-
          Maximum voltage supported by the electric vehicle. Relates to: ISO 15118-2:
          DC_EVChargeParameterType: EVMaximumVoltageLimit
        type: number
      ev_max_power:
        description: >-
          Maximum power (in W) supported by the electric vehicle. Required for DC
          charging. Relates to: ISO 15118-2: DC_EVChargeParameterType: EVMaximumPowerLimit
        type: number
      ev_energy_capacity:
        description: >-
          Capacity of the electric vehicle battery (in Wh). Relates to: ISO 15118-2:
          DC_EVChargeParameterType: EVEnergyCapacity
        type: number
      energy_amount:
        description: >-
          Amount of energy requested (in Wh). This inludes energy required for
          preconditioning. Relates to: ISO 15118-2: DC_EVChargeParameterType:
          EVEnergyRequest
        type: number
      state_of_charge:
        description: >-
          Energy available in the battery (in percent of the battery capacity) Relates to:
          ISO 15118-2: DC_EVChargeParameterType: DC_EVStatus: EVRESSSOC
        type: integer
      full_so_c:
        description: >-
          Percentage of SoC at which the EV considers the battery fully charged. (possible
          values: 0 - 100) Relates to: ISO 15118-2: DC_EVChargeParameterType: FullSOC
        type: integer
      bulk_so_c:
        description: >-
          Percentage of SoC at which the EV considers a fast charging process to end.
          (possible values: 0 - 100) Relates to: ISO 15118-2: DC_EVChargeParameterType:
          BulkSOC
        type: integer
  ACChargingParameters:
    description: >-
      EV AC charging parameters for ISO 15118-2
    type: object
    required:
      - energy_amount
      - ev_min_current
      - ev_max_current
      - ev_max_voltage
    properties:
      energy_amount:
        description: >-
          Amount of energy requested (in Wh). This includes energy required for
          preconditioning. Relates to: ISO 15118-2: AC_EVChargeParameterType: EAmount ISO
          15118-20: Dynamic/Scheduled_SEReqControlModeType: EVTargetEnergyRequest
        type: number
      ev_min_current:
        description: >-
          Minimum current (amps) supported by the electric vehicle (per phase). Relates
          to: ISO 15118-2: AC_EVChargeParameterType: EVMinCurrent
        type: number
      ev_max_current:
        description: >-
          Maximum current (amps) supported by the electric vehicle (per phase). Includes
          cable capacity. Relates to: ISO 15118-2: AC_EVChargeParameterType: EVMaxCurrent
        type: number
      ev_max_voltage:
        description: >-
          Maximum voltage supported by the electric vehicle. Relates to: ISO 15118-2:
          AC_EVChargeParameterType: EVMaxVoltage
        type: number
  ChargingNeeds:
    description: >-
      None
    type: object
    required:
      - requested_energy_transfer
    properties:
      ac_charging_parameters:
        description: >-
          EV AC charging parameters for ISO 15118-2
        type: object
        $ref: /ocpp#/ACChargingParameters
      der_charging_parameters:
        description: >-
          (2.1) DERChargingParametersType is used in ChargingNeedsType during an ISO
          15118-20 session for AC_BPT_DER to report the inverter settings related to DER
          control that were agreed between EVSE and EV. Fields starting with "ev" contain
          values from the EV. Other fields contain a value that is supported by both EV
          and EVSE. DERChargingParametersType type is only relevant in case of an ISO
          15118-20 AC_BPT_DER/AC_DER charging session.
        type: object
        $ref: /ocpp#/DERChargingParameters
      ev_energy_offer:
        description: >-
          (2.1) A schedule of the energy amount over time that EV is willing to discharge.
          A negative value indicates the willingness to discharge under specific
          conditions, a positive value indicates that the EV currently is not able to
          offer energy to discharge.
        type: object
        $ref: /ocpp#/EVEnergyOffer
      requested_energy_transfer:
        description: >-
          Mode of energy transfer requested by the EV.
        type: object
        $ref: /ocpp#/EnergyTransferModeEnum
      dc_charging_parameters:
        description: >-
          EV DC charging parameters for ISO 15118-2
        type: object
        $ref: /ocpp#/DCChargingParameters
      v2x_charging_parameters:
        description: >-
          Charging parameters for ISO 15118-20, also supporting V2X charging/discharging.
          All values are greater or equal to zero, with the exception of
          EVMinEnergyRequest, EVMaxEnergyRequest, EVTargetEnergyRequest,
          EVMinV2XEnergyRequest and EVMaxV2XEnergyRequest.
        type: object
        $ref: /ocpp#/V2XChargingParameters
      available_energy_transfer:
        description: >-
          (2.1) Modes of energy transfer that are marked as available by EV.
        type: array
        items:
          type: string
          $ref: /ocpp#/EnergyTransferModeEnum
        minItems: 1
      control_mode:
        description: >-
          (2.1) Indicates whether EV wants to operate in Dynamic or Scheduled mode. When
          absent, Scheduled mode is assumed for backwards compatibility. ISO 15118-20:
          ServiceSelectionReq(SelectedEnergyTransferService)
        type: object
        $ref: /ocpp#/ControlModeEnum
      mobility_needs_mode:
        description: >-
          (2.1) Value of EVCC indicates that EV determines min/target SOC and departure
          time. A value of EVCC_SECC indicates that charging station or CSMS may also
          update min/target SOC and departure time. ISO 15118-20:
          ServiceSelectionReq(SelectedEnergyTransferService)
        type: object
        $ref: /ocpp#/MobilityNeedsModeEnum
      departure_time:
        description: >-
          Estimated departure time of the EV. ISO 15118-2: AC/DC_EVChargeParameterType:
          DepartureTime ISO 15118-20: Dynamic/Scheduled_SEReqControlModeType:
          DepartureTIme
        type: string
