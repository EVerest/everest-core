description: Energy import/export capability/limit types
types:
  NumberWithSource:
    description: Simple number type with source information
    type: object
    required:
      - value
      - source
    properties:
      value:
        description: Value
        type: number
      source:
        description: Source of the value
        type: string
  IntegerWithSource:
    description: Simple number type with source information
    type: object
    required:
      - value
      - source
    properties:
      value:
        description: Value
        type: integer
      source:
        description: Source of the value
        type: string
  NodeType:
    description: Enum Type for different Nodes on the energy tree
    type: string
    enum:
      - Undefined
      - Evse
      - Generic
  EvseState:
    description: Enum for simplified EVSE state
    type: string
    enum:
      - Unplugged
      - WaitForAuth
      - WaitForEnergy
      - PrepareCharging
      - PausedEV
      - PausedEVSE
      - Charging
      - Finished
      - Disabled
  LimitsReq:
    description: Energy flow limiting object request (Evses to EnergyManager)
    type: object
    additionalProperties: false
    properties:
      total_power_W:
        description: >-
          Total power limit in Watt. Can be used for DC or as additional
          limit for AC. Positive number.
        type: object
        $ref: /energy#/NumberWithSource
      ac_max_current_A:
        description: Max current limit (per phase) in Ampere. AC only. Positive number.
        type: object
        $ref: /energy#/NumberWithSource
      ac_min_current_A:
        description: >-
          Min AC current limit per phase in Ampere. Values below that value indicate the 
          device will not work properly, i.e. it will not charge below 6 amps. AC only.
        type: object
        $ref: /energy#/NumberWithSource
      ac_max_phase_count:
        description: Limit to number of phases. Omit if number of phases are not limited. Value between 1 and 3.
        type: object
        $ref: /energy#/IntegerWithSource
      ac_min_phase_count:
        description: Minimal number of phases. Omit if number of phases are not limited. Value between 1 and 3.
        type: object
        $ref: /energy#/IntegerWithSource
      ac_supports_changing_phases_during_charging:
        description: >-
          Indicate whether phase switching is allowed during charging or
          not
        type: boolean
      ac_number_of_active_phases:
        description: >-
          Number of phases currently offered to the vehicle (1ph or 3ph mode)
        type: integer
        minimum: 1
        maximum: 3
  LimitsRes:
    description: Energy flow limiting object Result (Energy manager to Evses)
    type: object
    additionalProperties: false
    properties:
      total_power_W:
        description: >-
          Total power limit in Watt. Can be used for DC or as additional
          limit for AC. Negative numbers mean export to grid direction.
        type: object
        $ref: /energy#/NumberWithSource
      ac_max_current_A:
        description: Max current limit (per phase) in Ampere. AC only. Negative numbers mean export to grid direction.
        type: object
        $ref: /energy#/NumberWithSource
      ac_max_phase_count:
        description: Limit to number of phases. Omit if number of phases are not limited.
        type: object
        $ref: /energy#/IntegerWithSource
  OptimizerTarget:
    description: User defined optimizer targets for this evse
    type: object
    additionalProperties: false
    properties:
      energy_amount_needed:
        description: Amount of kwh the car needs to fulfill its charging target
        type: number
      charge_to_max_percent:
        description: Charge car battery to max NN percent
        type: number
      car_battery_soc:
        description: Car battery State Of Charge in percent
        type: number
        minimum: 0
        maximum: 100
      leave_time:
        description: >-
          RFC3339 UTC format time when the car needs to drive away with
          charging targets fullfilled. Will charge cheapest within this timeframe.
        type: string
      price_limit:
        description: >-
          Always charge if price below this limit. This includes solar
          charging and price for solar energy if price levels set correctly.
        type: number
      full_autonomy:
        description: >-
          Only charge from locally generated energy. Do not draw power
          from grid for charging.
        type: boolean
  FrequencyWattPoint:
    description: A point of a frequency-watt curve
    type: object
    required:
      - frequency_Hz
      - total_power_W
    properties:
      frequency_Hz:
        description: The frequency in Hz
        type: number
      total_power_W:
        description: The total power in W
        type: number
  SetpointType:
    description: Defines a setpoint, which is a target value for either charging or discharging depending on the sign. Setpoints per phase are currently not supported.
    type: object
    required:
      - source
      - priority
    properties:
      ac_current_A:
        description: >-
          The target value in amps per phase for either charging or discharging depending on the sign. 
          Positive values indicate charging, while negative values indicate discharging.
          Do not set ac_current_A, total_power_W and frequency_table properties simultaneously.
        type: number
      total_power_W:
        description: >-
          The target value for the total power for either charging or discharging depending on the sign.
          Positive values indicate charging, while negative values indicate discharging.
          Do not set ac_current_A, total_power_W and frequency_table properties simultaneously.
        type: number
      frequency_table:
        description: >-
          Frequency table for the setpoint. When used it must contain at least
          two coordinates to specify a power-frequency table to use during this period.
          If the array is empty, no frequency setpoint is set.
          Do not set ac_current_A, total_power_W and frequency_table properties simultaneously.
        type: array
        items:
          description: One entry for the frequency table
          type: object
          $ref: /energy#/FrequencyWattPoint
      priority:
        description: >-
          Note: priority handling is not implemented for now.
          If multiple conflicting setpoints are specified in the tree, the priority selects which one is used.
          Highest priority is 0, lowest priority is 1000.
        type: integer
        minimum: 0
        maximum: 1000
      source:
        description: Source of the setpoint
        type: string
  ScheduleSetpointEntry:
    description: One entry for the time series (setpoint request)
    type: object
    additionalProperties: false
    required:
      - timestamp
    properties:
      timestamp:
        description: Absolute timestamp for this sample in RFC3339 UTC format
        type: string
        format: date-time
      setpoint:
        description: Setpoint for this timestamp
        type: object
        $ref: /energy#/SetpointType
  ScheduleReqEntry:
    description: One entry for the time series (request)
    type: object
    additionalProperties: false
    required:
      - timestamp
      - limits_to_root
      - limits_to_leaves
    properties:
      timestamp:
        description: Absolute timestamp for this sample in RFC3339 UTC format
        type: string
        format: date-time
      limits_to_root:
        description: Limit for this timestamp, for the root facing side
        type: object
        $ref: /energy#/LimitsReq
      limits_to_leaves:
        description: Limit for this timestamp, for the leaves facing side
        type: object
        $ref: /energy#/LimitsReq
      conversion_efficiency:
        description: Conversion efficiency from root to leaves side (e.g. AC/DC efficiency). Defaults to one if not specified.
        type: number
        minimum: 0
        maximum: 1
      price_per_kwh:
        description: Price information for this timepoint
        type: object
        $ref: /energy_price_information#/PricePerkWh
  ScheduleResEntry:
    description: One entry for the time series (result)
    type: object
    additionalProperties: false
    required:
      - timestamp
      - limits_to_root
    properties:
      timestamp:
        description: Absolute timestamp for this sample in RFC3339 UTC format
        type: string
        format: date-time
      limits_to_root:
        description: Limit for this timestamp, for the root facing side
        type: object
        $ref: /energy#/LimitsRes
      price_per_kwh:
        description: Price information for this timepoint
        type: object
        $ref: /energy_price_information#/PricePerkWh
  EnergyFlowRequest:
    description: >-
      Request energy flow parameters to supply/limit energy import (direction from grid
      to car) and/or consume/limit energy export (car to grid) at a specific point in the tree
    type: object
    required:
      - uuid
      - children
      - node_type
      - schedule_import
      - schedule_export
      - schedule_setpoints
    properties:
      children:
        description: Array of child node energy flow requests (in the direction to consumer/car)
        type: array
        items:
          description: One entry per child node
          type: object
          $ref: /energy#/EnergyFlowRequest
      uuid:
        description: >-
          UUID for this node. This UUID will be used again when enforce_limits()
          command propagates through the tree.
        type: string
      node_type:
        description: >-
          Node Type Enum
        type: string
        $ref: /energy#/NodeType
      priority_request:
        description: >-
          If set to true, this is a high priority request that needs to be handled now. 
          Otherwise energymanager may merge multiple requests and address them later.
        type: boolean
      evse_state:
        description: State of the EVSE
        type: object
        $ref: /energy#/EvseState
      optimizer_target:
        description: User defined optimizer targets for this evse
        type: object
        $ref: /energy#/OptimizerTarget
      energy_usage_root:
        description: Energy usage measurement of this node at root side
        type: object
        $ref: /powermeter#/Powermeter
      energy_usage_leaves:
        description: Energy usage measurement of this node at leaves side
        type: object
        $ref: /powermeter#/Powermeter
      schedule_import:
        description: >-
          Energy import/limits time series. The first entry is special
          as it will be active already now even if the timestamp is in the future,
          so it is good practice to set the first entry to current time. The time
          series can have arbitrary time difference between entries and all timestamps
          are absolute UTC time.
        type: array
        items:
          description: One entry for the time series. Values are always positive.
          type: object
          $ref: /energy#/ScheduleReqEntry
      schedule_export:
        description: >-
          Energy export/limits time series. The first entry is special
          as it will be active already now even if the timestamp is in the future,
          so it is good practice to set the first entry to current time. The time
          series can have arbitrary time difference between entries and all timestamps
          are absolute UTC time.
        type: array
        items:
          description: One entry for the time series. Values are always positive.
          type: object
          $ref: /energy#/ScheduleReqEntry
      schedule_setpoints:
        description: >-
          Setpoints time series. The first entry is special
          as it will be active already now even if the timestamp is in the future,
          so it is good practice to set the first entry to current time. The time
          series can have arbitrary time difference between entries and all timestamps
          are absolute UTC time.
        type: array
        items:
          description: One entry for the time series.
          type: object
          $ref: /energy#/ScheduleSetpointEntry
  EnforcedLimits:
    description: Enforce Limits data type
    type: object
    required:
      - uuid
      - valid_until
      - schedule
      - limits_root_side
    properties:
      uuid:
        description: UUID of node that this limit applies to
        type: string
      valid_until:
        description: >-
          Limits are valid until this timepoint in RFC3339 UTC. If no new
          update is received, power consumption must be stopped afer that timepoint.
        type: string
        format: date-time
      limits_root_side:
        description: Enforced limits that must be respected at the root side.
        type: object
        $ref: /energy#/LimitsRes
      schedule:
        description: >-
          Informative only. Do not use for actual limiting. Energy import/export limits
          time series. The first entry is special as it will be active already now
          even if the timestamp is in the future, so it is good practice to set the
          first entry to current time. The time series can have arbitrary time difference
          between entries and all timestamps are absolute UTC time.
        type: array
        items:
          description: One entry for the time series. Values are positive for import from grid and negative for export to grid.
          type: object
          $ref: /energy#/ScheduleResEntry
  ExternalLimits:
    description: External Limits data type
    type: object
    required:
      - schedule_import
      - schedule_export
      - schedule_setpoints
    properties:
      schedule_import:
        description: >-
          Energy import/limits time series. The first entry is special as it will be active already now
          even if the timestamp is in the future, so it is good practice to set the
          first entry to current time. The time series can have arbitrary time difference
          between entries and all timestamps are absolute UTC time. 
          The last entry is valid for any time after the schedule ends.
        type: array
        items:
          description: One entry for the time series
          type: object
          $ref: /energy#/ScheduleReqEntry
      schedule_export:
        description: >-
          Energy export/limits time series. The first entry is special as it will be active already now
          even if the timestamp is in the future, so it is good practice to set the
          first entry to current time. The time series can have arbitrary time difference
          between entries and all timestamps are absolute UTC time.
          The last entry is valid for any time after the schedule ends.
        type: array
        items:
          description: One entry for the time series
          type: object
          $ref: /energy#/ScheduleReqEntry
      schedule_setpoints:
        description: >-
          Setpoints time series. The first entry is special
          as it will be active already now even if the timestamp is in the future,
          so it is good practice to set the first entry to current time. The time
          series can have arbitrary time difference between entries and all timestamps
          are absolute UTC time.
        type: array
        items:
          description: One entry for the time series.
          type: object
          $ref: /energy#/ScheduleSetpointEntry
