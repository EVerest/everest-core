asyncapi: 3.0.0
id: 'pionix:de:basecamp:generic_error_raiser'
info:
  title: "Basecamp API definition for raising and clearing generic errors"
  version: 1.0.1
  description: >-
    API for basecamp for raising and clearing generic errors.
  license:
    name: BaseCamp - License Version 1.0
    url: https://www.pionix.de/pionix-license-terms
  tags:
    - name: basecamp
    - name: generic errors
servers:
  default:
    pathname: 'basecamp/api/1.0/generic_error_raiser/{module_id}'
    host: 'localhost:1883'
    description: default local MQTT
    protocol: mqtt
    variables:
      module_id:
        description: The ID of the module as defined by by the module id in the basecamp config file.
defaultContentType: application/json

channels:
  send_raise_error:
    address: 'm2b/raise_error'
    messages:
      send_raise_error:
        $ref: '#/components/messages/send_raise_error'
  send_clear_error:
    address: 'm2b/clear_error'
    messages:
      send_clear_error:
        $ref: '#/components/messages/send_clear_error'
  send_communication_check:
    address: 'm2b/communication_check'
    messages:
      send_communication_check:
        $ref: '#/components/messages/send_communication_check'
  receive_heartbeat:
    address: 'b2m/heartbeat'
    messages:
      receive_heartbeat:
        $ref: '#/components/messages/receive_heartbeat'

operations:
  send_raise_error:
    title: Send raise error
    action: send
    channel:
      $ref: '#/channels/send_raise_error'
    description: 'Direction: Module to BaseCamp'
  send_clear_error:
    title: Send clear error
    action: send
    channel:
      $ref : '#/channels/send_clear_error'
  send_communication_check:
    title: Send communication check
    action: send
    channel:
      $ref : '#/channels/send_communication_check'
  receive_heartbeat:
    title: Receive heatbeat
    action: receive
    channel:
      $ref: '#/channels/receive_heartbeat'
    description: 'Direction: BaseCamp to Module'

components:
  messages:
    send_raise_error:
      title: Send raise error
      summary: Signal to BaseCamp that an error happened.
      contentType: application/json
      payload:
        $ref: '#/components/schemas/Error'
      examples:
          - summary: "Raise error example"
            payload:
                "type": "CommunicationFault"
                "sub_type": "subtype"
                "message": "message"
    send_clear_error:
      title: Send clear error
      summary: Signal to BaseCamp that a preciously raised error is no longer active.
      contentType: application/json
      payload:
        $ref: '#/components/schemas/Error'
      examples:
          - summary: "Raise error example"
            payload:
                "type": "CommunicationFault"
                "sub_type": "subtype"
                "message": "message"
    send_communication_check:
      title: Send communication check
      summary: Signal to BaseCamp that communication is good or check shall be stopped
      contentType: application/json
      payload:
        $ref: '#/components/schemas/CommunicationCheck'
      examples:
        - summary: "CommunicationCheck"
          payload:
            True
    receive_heartbeat:
      title: Receive heartbeat
      summary: Heartbeat produced by basecamp as configured via cfg_heartbeat_interval_ms in the basecamp configuration
      contentType: application/json

  schemas:
    ErrorEnum:
      description: |
        Type of error
        - CommunicationFault: The communication to the hardware or underlying driver is lost or has errors.
        - VendorError: Vendor specific error code. Will stop charging session.
        - VendorWarning: Vendor specific error code. Charging may continue.

      type: string
      enum:
        - CommunicationFault
        - VendorError
        - VendorWarning

    Error:
      description: >-
        Errors for the power_supply_DC interface.
        Except for VendorWarning, all error codes will stop the charging session.
        During all errors, follow the commands for setMode and setVoltageCurrent from EvseManager.
        If they cannot be sent to the hardware, cache the last values received.
        Once the PSU is back on-line (e.g. after a CommunicationFault), set the last mode and voltage/current
        values and only after that clear the error.
      type: object
      additionalProperties: true
      required:
        - type
      properties:
        type:
          $ref: '#/components/schemas/ErrorEnum'
        sub_type:
          description: The subtype of the error
          type: string
        message:
          description: Addition information about the error
          type: string

    CommunicationCheck:
      type: boolean
      description: "Send 'true' at least every 'cfg_communication_check_to_s' seconds to signal module is alive. Send 'false' to stop communication check'"
