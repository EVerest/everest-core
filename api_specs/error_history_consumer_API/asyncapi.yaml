---
asyncapi: 3.0.0
id: 'pionix:de:basecamp:error_history_consumer_API'
info:
  title: "Basecamp API definition for error history (consumer)"
  version: 1.0.1
  description: >-
    API for basecamp for error status and history.

  license:
    name: BaseCamp - License Version 1.0
    url: https://www.pionix.de/pionix-license-terms
  tags:
    - name: basecamp
    - name: Auth
servers:
  default:
    pathname: 'basecamp/api/1.0/error_history_consumer/{module_id}'
    host: 'localhost:1883'
    description: default local MQTT
    protocol: mqtt
    variables:
      module_id:
        description: The ID of the module as defined in the basecamp config file.
defaultContentType: application/json

channels:
  send_request_active_errors:
    address: 'm2b/active_errors'
    messages:
      send_request_active_errors:
        $ref: '#/components/messages/send_request_active_errors'
  receive_reply_active_errors:
    address: null
    messages:
      receive_reply_active_errors:
        $ref: '#/components/messages/receive_reply_active_errors'
  receive_error_raised:
    address: 'b2m/error_raised'
    messages:
      receive_error_raised:
        $ref: '#/components/messages/receive_error_raised'
  receive_error_cleared:
    address: 'b2m/error_cleared'
    messages:
      receive_error_cleared:
        $ref: '#/components/messages/receive_error_cleared'
  receive_heartbeat:
    address: 'b2m/heartbeat'
    messages:
      receive_heartbeat:
        $ref: '#/components/messages/receive_heartbeat'
  send_communication_check:
    address: 'm2b/communication_check'
    messages:
      send_communication_check:
        $ref: '#/components/messages/send_communication_check'


operations:
  receive_reply_active_errors:
    title: Receive request to transmit the list of currently active errors
    action: receive
    description: 'Direction: Basecamp to Module'
    channel:
      $ref: '#/channels/receive_reply_active_errors'
  send_request_active_errors:
    title: Send request to transmit the list of currently active errors
    action: send
    channel:
      $ref: '#/channels/send_request_active_errors'
    description: 'Direction: Module to BaseCamp'
    reply:
      address:
        location: "$message.header#/replyTo"
      channel:
        $ref: '#/channels/receive_reply_active_errors'
  receive_error_raised:
    title: Receive newly raised error
    action: receive
    channel:
      $ref: '#/channels/receive_error_raised'
  receive_error_cleared:
    title: Receive newly cleared error
    action: receive
    channel:
      $ref: '#/channels/receive_error_cleared'
  receive_heartbeat:
    title: Receive heatbeat
    action: receive
    channel:
      $ref: '#/channels/receive_heartbeat'
  send_communication_check:
    title: Send communication check
    action: send
    channel:
      $ref : '#/channels/send_communication_check'

components:
  messages:
    send_request_active_errors:
      title: Request the list of active errors
      summary: 'Request the list of active errors.'
      payload:
          type: object
          properties:
            headers:
              type: object
              properties:
                replyTo:  # Address for the request to reply to
                  type: string
                  description: Address to send the response to.
      examples:
        - summary: "Request active errors"
          payload:
            headers:
              replyTo: basecamp/api/1.0/{interface_type}/{module_id}/b2m/{operation_name}/{uuid}
    receive_reply_active_errors:
      title: The list of active errors
      summary: 'Reply to the request to send the list of active errors'
      contentType: application/json
      payload:
         $ref: '#/components/schemas/ErrorList'
    receive_error_raised:
      title: Receive newly raised error
      summary: 'Notifies on every raised error'
      contentType: application/json
      payload:
         $ref: '#/components/schemas/ErrorObject'
    receive_error_cleared:
      title: Receive cleared error
      summary: 'Notifies when an error is cleared'
      contentType: application/json
      payload:
         $ref: '#/components/schemas/ErrorObject'
    receive_heartbeat:
      title: Receive heartbeat
      summary: Heartbeat produced by basecamp as configured via cfg_heartbeat_interval_ms in the basecamp configuration
      contentType: application/json
    send_communication_check:
      title: Send communication check
      summary: Signal to BaseCamp that communication is good or check shall be stopped
      contentType: application/json
      payload:
        $ref: '#/components/schemas/CommunicationCheck'
      examples:
        - summary: "CommunicationCheck"
          payload:
            true

  schemas:
    ImplementationIdentifier:
      description: Identifier of an implementation
      type: object
      additionalProperties: true
      required:
        - module_id
        - implementation_id
      properties:
        module_id:
          type: string
          minLength: 2
        implementation_id:
          type: string
          minLength: 2
    State:
      description: State of an error
      type: string
      enum:
        - Active
        - ClearedByModule
        - ClearedByReboot
    SeverityFilter:
      description: Severity filter for errors
      type: string
      enum:
        - HIGH_GE
        - MEDIUM_GE
        - LOW_GE
    TimeperiodFilter:
      description: Timeperiod filter for errors
      type: object
      additionalProperties: true
      required:
        - timestamp_from
        - timestamp_to
      properties:
        timestamp_from:
          type: string
          format: date-time
        timestamp_to:
          type: string
          format: date-time
    FilterArguments:
      description: Arguments for the get_errors command
      type: object
      additionalProperties: true
      required: []
      properties:
        state_filter:
          $ref: '#/components/schemas/State'
        origin_filter:
          $ref: '#/components/schemas/ImplementationIdentifier'
        type_filter:
          type: string
        severity_filter:
          $ref: '#/components/schemas/SeverityFilter'
        timeperiod_filter:
          $ref: '#/components/schemas/TimeperiodFilter'
        handle_filter:
          type: string
          description: Handle of an error
    Severity:
      description: Severity of an error
      type: string
      enum:
        - High
        - Medium
        - Low
    ErrorObject:
      description: Represents an error
      type: object
      additionalProperties: true
      required:
        - type
        - description
        - message
        - origin
        - timestamp
        - uuid
        - severity
        - state
      properties:
        type:
          type: string
          minLength: 2
        sub_type:
          type: string
        description:
          type: string
          minLength: 2
        message:
          type: string
          minLength: 2
        severity:
          $ref: '#/components/schemas/Severity'
        origin:
          $ref: '#/components/schemas/ImplementationIdentifier'
        timestamp:
          type: string
          format: date-time
        uuid:
          type: string
          minLength: 2
        state:
          $ref: '#/components/schemas/State'
    ErrorList:
      description: A list of ErrorObjects
      type: array
      items:
        $ref: '#/components/schemas/ErrorObject'
    CommunicationCheck:
      type: boolean
      description: "Send 'true' at least every 'cfg_communication_check_to_s' seconds to signal module is alive. Send 'false' to stop communication check'"
