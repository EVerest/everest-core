@startuml
participant Powermeter
participant EVSE_Manager
participant OCPP
participant CSMS

title Stopping transaction in error

== Transaction is running ==

Powermeter -> Powermeter: livemeasure FAILED

!pragma teoz true
Powermeter -> EVSE_Manager: raiseError (CommunicationFault)
& Powermeter -> OCPP: raiseError (CommunicationFault)

OCPP->CSMS: StatusNotification.req(Charging, CommunicationFault)
return StatusNotification.conf

alt EvseManager configured to become inoperative in case of PowermeterCommError
    EVSE_Manager->EVSE_Manager: Pause charging
    EVSE_Manager -> OCPP: raiseError (Inoperative)
    OCPP->CSMS: StatusNotification.req(Faulted)
    note over EVSE_Manager: Note that we just continue charging otherwise    
end

!pragma teoz true

== User stops transaction while powermeter communication error ==

alt successful case
EVSE_Manager -> Powermeter: stopTransaction (ID)
return stopTransaction Response (OK/OCMF)
EVSE_Manager -> OCPP: Event(TransactionFinished(OCMF))

OCPP->CSMS: StopTransaction.req(OCMF)
return StopTransaction.conf

else stopTransaction failing due to subsequent power loss
EVSE_Manager -> Powermeter: stopTransaction (ID)
Powermeter -> EVSE_Manager: stopTransaction Response (FAIL)
EVSE_Manager -> OCPP: Event(TransactionFinished)

note right of OCPP: In this case we can't stop the transaction including the OCMF
OCPP->CSMS: StopTransaction.req()
return StopTransaction.conf
end

@enduml
